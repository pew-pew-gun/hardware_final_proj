

================================================================
== Vitis HLS Report for 'load_tile_mm'
================================================================
* Date:           Tue Oct 21 14:52:19 2025

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        srcnn_hls
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xck26-sfvc784-2LV-c


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-------+---------+
    |  Latency (cycles) |  Latency (absolute) |   Interval  | Pipeline|
    |   min   |   max   |    min   |    max   | min |  max  |   Type  |
    +---------+---------+----------+----------+-----+-------+---------+
    |      162|    71307|  1.620 us|  0.713 ms|  162|  71307|       no|
    +---------+---------+----------+----------+-----+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.56>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%w0_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %w0"   --->   Operation 7 'read' 'w0_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%h0_read = read i9 @_ssdm_op_Read.ap_auto.i9, i9 %h0"   --->   Operation 8 'read' 'h0_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%w0_cast2 = zext i8 %w0_read"   --->   Operation 9 'zext' 'w0_cast2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.77ns)   --->   "%add_ln754 = add i9 %h0_read, i9 16" [src/srcnn.cpp:754]   --->   Operation 10 'add' 'add_ln754' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (0.00ns) (grouped into LUT with out node th_eff)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i9.i32, i9 %add_ln754, i32 8" [src/srcnn.cpp:754]   --->   Operation 11 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns) (grouped into LUT with out node th_eff)   --->   "%trunc_ln753 = trunc i9 %h0_read" [src/srcnn.cpp:753]   --->   Operation 12 'trunc' 'trunc_ln753' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns) (grouped into LUT with out node th_eff)   --->   "%xor_ln754 = xor i8 %trunc_ln753, i8 255" [src/srcnn.cpp:754]   --->   Operation 13 'xor' 'xor_ln754' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.39ns) (out node of the LUT)   --->   "%th_eff = select i1 %tmp, i8 %xor_ln754, i8 16" [src/srcnn.cpp:754]   --->   Operation 14 'select' 'th_eff' <Predicate = true> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.76ns)   --->   "%add_ln757 = add i9 %w0_cast2, i9 16" [src/srcnn.cpp:757]   --->   Operation 15 'add' 'add_ln757' <Predicate = true> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.00ns) (grouped into LUT with out node add_ln50)   --->   "%tmp_7 = bitselect i1 @_ssdm_op_BitSelect.i1.i9.i32, i9 %add_ln757, i32 8" [src/srcnn.cpp:757]   --->   Operation 16 'bitselect' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns) (grouped into LUT with out node add_ln50)   --->   "%xor_ln757 = xor i8 %w0_read, i8 255" [src/srcnn.cpp:757]   --->   Operation 17 'xor' 'xor_ln757' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.00ns) (grouped into LUT with out node add_ln50)   --->   "%tw_eff = select i1 %tmp_7, i8 %xor_ln757, i8 16" [src/srcnn.cpp:757]   --->   Operation 18 'select' 'tw_eff' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.00ns) (grouped into LUT with out node add_ln50)   --->   "%tw_eff_cast = zext i8 %tw_eff" [src/srcnn.cpp:757]   --->   Operation 19 'zext' 'tw_eff_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.76ns) (out node of the LUT)   --->   "%add_ln50 = add i9 %tw_eff_cast, i9 12" [src/srcnn.cpp:50->src/srcnn.cpp:762]   --->   Operation 20 'add' 'add_ln50' <Predicate = true> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%th_eff_cast = zext i8 %th_eff" [src/srcnn.cpp:754]   --->   Operation 21 'zext' 'th_eff_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (2.39ns) (grouped into DSP with root node mul_ln50)   --->   "%add_ln50_1 = add i9 %th_eff_cast, i9 12" [src/srcnn.cpp:50->src/srcnn.cpp:762]   --->   Operation 22 'add' 'add_ln50_1' <Predicate = true> <Delay = 2.39> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 23 [1/1] (0.00ns) (grouped into DSP with root node mul_ln50)   --->   "%zext_ln50 = zext i9 %add_ln50_1" [src/srcnn.cpp:50->src/srcnn.cpp:762]   --->   Operation 23 'zext' 'zext_ln50' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln50_2 = zext i9 %add_ln50" [src/srcnn.cpp:50->src/srcnn.cpp:762]   --->   Operation 24 'zext' 'zext_ln50_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [4/4] (0.99ns) (root node of the DSP)   --->   "%mul_ln50 = mul i17 %zext_ln50, i17 %zext_ln50_2" [src/srcnn.cpp:50->src/srcnn.cpp:762]   --->   Operation 25 'mul' 'mul_ln50' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 2 <SV = 1> <Delay = 0.99>
ST_2 : Operation 26 [3/4] (0.99ns) (root node of the DSP)   --->   "%mul_ln50 = mul i17 %zext_ln50, i17 %zext_ln50_2" [src/srcnn.cpp:50->src/srcnn.cpp:762]   --->   Operation 26 'mul' 'mul_ln50' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 3 <SV = 2> <Delay = 0.99>
ST_3 : Operation 27 [2/4] (0.99ns) (root node of the DSP)   --->   "%mul_ln50 = mul i17 %zext_ln50, i17 %zext_ln50_2" [src/srcnn.cpp:50->src/srcnn.cpp:762]   --->   Operation 27 'mul' 'mul_ln50' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 28 [1/4] (0.00ns) (root node of the DSP)   --->   "%mul_ln50 = mul i17 %zext_ln50, i17 %zext_ln50_2" [src/srcnn.cpp:50->src/srcnn.cpp:762]   --->   Operation 28 'mul' 'mul_ln50' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 5 <SV = 4> <Delay = 0.77>
ST_5 : Operation 29 [1/1] (0.00ns)   --->   "%phase_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %phase"   --->   Operation 29 'read' 'phase_read' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 30 [1/1] (0.00ns)   --->   "%input_ftmap_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %input_ftmap"   --->   Operation 30 'read' 'input_ftmap_read' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 31 [1/1] (0.20ns)   --->   "%select_ln67 = select i1 %phase_read, i3 4, i3 0" [src/srcnn.cpp:67->src/srcnn.cpp:762]   --->   Operation 31 'select' 'select_ln67' <Predicate = true> <Delay = 0.20> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.20> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_2)   --->   "%select_ln67_1 = select i1 %phase_read, i9 224, i9 0" [src/srcnn.cpp:67->src/srcnn.cpp:762]   --->   Operation 32 'select' 'select_ln67_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_2)   --->   "%select_ln67_2 = select i1 %phase_read, i9 56, i9 0" [src/srcnn.cpp:67->src/srcnn.cpp:762]   --->   Operation 33 'select' 'select_ln67_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 34 [1/1] (0.77ns) (out node of the LUT)   --->   "%add_ln67_2 = add i9 %select_ln67_1, i9 %select_ln67_2" [src/srcnn.cpp:67->src/srcnn.cpp:762]   --->   Operation 34 'add' 'add_ln67_2' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 35 [1/1] (0.00ns)   --->   "%h0_cast10_i = zext i9 %h0_read"   --->   Operation 35 'zext' 'h0_cast10_i' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 36 [1/1] (0.77ns)   --->   "%add_ln55 = add i10 %h0_cast10_i, i10 1018" [src/srcnn.cpp:55->src/srcnn.cpp:762]   --->   Operation 36 'add' 'add_ln55' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 37 [2/2] (0.00ns)   --->   "%call_ln67 = call void @load_tile_mm_Pipeline_InputTileHread_InputTileWread, i9 %add_ln67_2, i10 %add_ln55, i10 %add_ln55, i17 %mul_ln50, i9 %add_ln50, i3 %select_ln67, i8 %w0_read, i64 %input_ftmap_read, i32 %gmem_in, i32 %srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13, i32 %srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12, i32 %srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11" [src/srcnn.cpp:67->src/srcnn.cpp:762]   --->   Operation 37 'call' 'call_ln67' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 0.00>
ST_6 : Operation 38 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i32 %srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13, i64 666, i64 18, i64 18446744073709551615"   --->   Operation 38 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 39 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i32 %srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12, i64 666, i64 18, i64 18446744073709551615"   --->   Operation 39 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 40 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i32 %srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11, i64 666, i64 18, i64 18446744073709551615"   --->   Operation 40 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 41 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem_in, void @empty_20, i32 0, i32 0, void @empty_17, i32 0, i32 65025, void @empty_39, void @empty_19, void @empty_17, i32 16, i32 16, i32 16, i32 16, void @empty_17, void @empty_17, i32 4294967295, i32 0"   --->   Operation 41 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 42 [1/2] (0.00ns)   --->   "%call_ln67 = call void @load_tile_mm_Pipeline_InputTileHread_InputTileWread, i9 %add_ln67_2, i10 %add_ln55, i10 %add_ln55, i17 %mul_ln50, i9 %add_ln50, i3 %select_ln67, i8 %w0_read, i64 %input_ftmap_read, i32 %gmem_in, i32 %srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13, i32 %srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12, i32 %srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11" [src/srcnn.cpp:67->src/srcnn.cpp:762]   --->   Operation 42 'call' 'call_ln67' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 43 [1/1] (0.00ns)   --->   "%mrv = insertvalue i19 <undef>, i9 %h0_read" [src/srcnn.cpp:762]   --->   Operation 43 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 44 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue i19 %mrv, i9 %w0_cast2" [src/srcnn.cpp:762]   --->   Operation 44 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 45 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue i19 %mrv_1, i1 %phase_read" [src/srcnn.cpp:762]   --->   Operation 45 'insertvalue' 'mrv_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 46 [1/1] (0.00ns)   --->   "%ret_ln762 = ret i19 %mrv_2" [src/srcnn.cpp:762]   --->   Operation 46 'ret' 'ret_ln762' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 4.561ns
The critical path consists of the following:
	wire read operation ('h0_read') on port 'h0' [11]  (0.000 ns)
	'add' operation ('add_ln754', src/srcnn.cpp:754) [14]  (0.776 ns)
	'select' operation ('th_eff', src/srcnn.cpp:754) [18]  (0.393 ns)
	'add' operation of DSP[39] ('add_ln50_1', src/srcnn.cpp:50->src/srcnn.cpp:762) [35]  (2.396 ns)
	'mul' operation of DSP[39] ('mul_ln50', src/srcnn.cpp:50->src/srcnn.cpp:762) [39]  (0.996 ns)

 <State 2>: 0.996ns
The critical path consists of the following:
	'mul' operation of DSP[39] ('mul_ln50', src/srcnn.cpp:50->src/srcnn.cpp:762) [39]  (0.996 ns)

 <State 3>: 0.996ns
The critical path consists of the following:
	'mul' operation of DSP[39] ('mul_ln50', src/srcnn.cpp:50->src/srcnn.cpp:762) [39]  (0.996 ns)

 <State 4>: 0.000ns
The critical path consists of the following:

 <State 5>: 0.776ns
The critical path consists of the following:
	wire read operation ('phase_read') on port 'phase' [9]  (0.000 ns)
	'select' operation ('select_ln67_1', src/srcnn.cpp:67->src/srcnn.cpp:762) [24]  (0.000 ns)
	'add' operation ('add_ln67_2', src/srcnn.cpp:67->src/srcnn.cpp:762) [26]  (0.776 ns)

 <State 6>: 0.000ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
