

================================================================
== Vitis HLS Report for 'load_tile_to_stream3'
================================================================
* Date:           Tue Oct 28 18:16:21 2025

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        srcnn_hls
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xck26-sfvc784-2LV-c


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+---------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  |   Trip  |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  |  Count  | Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+---------+----------+
        |- InputTileHread   |        ?|        ?|  2 ~ 3473|          -|          -|        ?|        no|
        | + InputTileWread  |        0|     3471|        13|          -|          -|  0 ~ 267|        no|
        +-------------------+---------+---------+----------+-----------+-----------+---------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 15
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 3 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.67>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%py = alloca i32 1"   --->   Operation 16 'alloca' 'py' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (1.83ns)   --->   "%p_read_2 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read"   --->   Operation 17 'read' 'p_read_2' <Predicate = true> <Delay = 1.83> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 1.83> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = -1> <Depth = -1> <FIFO>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%w0_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %w0"   --->   Operation 18 'read' 'w0_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%h0_read = read i9 @_ssdm_op_Read.ap_auto.i9, i9 %h0"   --->   Operation 19 'read' 'h0_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%input_ftmap_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %input_ftmap"   --->   Operation 20 'read' 'input_ftmap_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i9 %h0_c5, void @ap_fifo_str, i32 0, i32 0, void @p_str, i32 0, i32 0, void @p_str, void @p_str, void @p_str, i32 2, i32 2, i32 16, i32 16, void @p_str, void @ScalarProp_str, i32 4294967295, i32 0"   --->   Operation 21 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (1.83ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_fifo.i9P0A, i9 %h0_c5, i9 %h0_read"   --->   Operation 22 'write' 'write_ln0' <Predicate = true> <Delay = 1.83> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 1.83> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 9> <Depth = 2> <FIFO>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %w0_c, void @ap_fifo_str, i32 0, i32 0, void @p_str, i32 0, i32 0, void @p_str, void @p_str, void @p_str, i32 2, i32 2, i32 16, i32 16, void @p_str, void @ScalarProp_str, i32 4294967295, i32 0"   --->   Operation 23 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (1.83ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_fifo.i8P0A, i8 %w0_c, i8 %w0_read"   --->   Operation 24 'write' 'write_ln0' <Predicate = true> <Delay = 1.83> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 1.83> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 8> <Depth = 4> <FIFO>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %tw_eff_loc_i_c2, void @ap_fifo_str, i32 0, i32 0, void @p_str, i32 0, i32 0, void @p_str, void @p_str, void @p_str, i32 2, i32 2, i32 16, i32 16, void @p_str, void @ScalarProp_str, i32 4294967295, i32 0"   --->   Operation 25 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (1.83ns)   --->   "%write_ln65 = write void @_ssdm_op_Write.ap_fifo.i8P0A, i8 %tw_eff_loc_i_c2, i8 %p_read_2" [src/srcnn.cpp:65->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 26 'write' 'write_ln65' <Predicate = true> <Delay = 1.83> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 1.83> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 8> <Depth = 2> <FIFO>
ST_1 : Operation 27 [1/1] (0.77ns)   --->   "%add_ln616 = add i9 %h0_read, i9 16" [src/srcnn.cpp:616]   --->   Operation 27 'add' 'add_ln616' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.00ns) (grouped into LUT with out node add_ln76)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i9.i32, i9 %add_ln616, i32 8" [src/srcnn.cpp:616]   --->   Operation 28 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns) (grouped into LUT with out node add_ln76)   --->   "%trunc_ln615 = trunc i9 %h0_read" [src/srcnn.cpp:615]   --->   Operation 29 'trunc' 'trunc_ln615' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns) (grouped into LUT with out node add_ln76)   --->   "%xor_ln616 = xor i8 %trunc_ln615, i8 255" [src/srcnn.cpp:616]   --->   Operation 30 'xor' 'xor_ln616' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node add_ln76)   --->   "%th_eff = select i1 %tmp, i8 %xor_ln616, i8 16" [src/srcnn.cpp:616]   --->   Operation 31 'select' 'th_eff' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%w0_cast = zext i8 %w0_read"   --->   Operation 32 'zext' 'w0_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%h0_cast4_i = zext i9 %h0_read"   --->   Operation 33 'zext' 'h0_cast4_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %s_pix_i, void @empty_17, i32 0, i32 0, void @empty_3, i32 0, i32 0, void @empty_3, void @empty_3, void @empty_3, i32 0, i32 0, i32 0, i32 0, void @empty_3, void @empty_3, i32 4294967295, i32 0"   --->   Operation 34 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem_in, void @empty_22, i32 0, i32 0, void @empty_3, i32 0, i32 65025, void @empty_39, void @empty_6, void @empty_3, i32 16, i32 16, i32 16, i32 16, void @empty_3, void @empty_3, i32 4294967295, i32 0"   --->   Operation 35 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%specpipeline_ln70 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_3" [src/srcnn.cpp:70->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 36 'specpipeline' 'specpipeline_ln70' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node add_ln76)   --->   "%th_eff_cast = zext i8 %th_eff" [src/srcnn.cpp:616]   --->   Operation 37 'zext' 'th_eff_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.76ns) (out node of the LUT)   --->   "%add_ln76 = add i9 %th_eff_cast, i9 12" [src/srcnn.cpp:76->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 38 'add' 'add_ln76' <Predicate = true> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (0.77ns)   --->   "%add_ln77 = add i10 %h0_cast4_i, i10 1018" [src/srcnn.cpp:77->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 39 'add' 'add_ln77' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%sext_ln77 = sext i10 %add_ln77" [src/srcnn.cpp:77->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 40 'sext' 'sext_ln77' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.76ns)   --->   "%add_ln83 = add i9 %w0_cast, i9 506" [src/srcnn.cpp:83->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 41 'add' 'add_ln83' <Predicate = true> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%sext_ln76 = sext i9 %add_ln83" [src/srcnn.cpp:76->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 42 'sext' 'sext_ln76' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%p_read_cast = zext i8 %p_read_2"   --->   Operation 43 'zext' 'p_read_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.76ns)   --->   "%add_ln76_1 = add i9 %p_read_cast, i9 12" [src/srcnn.cpp:76->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 44 'add' 'add_ln76_1' <Predicate = true> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%sext_ln83 = sext i9 %add_ln83" [src/srcnn.cpp:83->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 45 'sext' 'sext_ln83' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.42ns)   --->   "%store_ln76 = store i9 0, i9 %py" [src/srcnn.cpp:76->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 46 'store' 'store_ln76' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln76 = br void %for.body.i" [src/srcnn.cpp:76->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 47 'br' 'br_ln76' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.24>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%py_1 = load i9 %py" [src/srcnn.cpp:76->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 48 'load' 'py_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln76 = zext i9 %py_1" [src/srcnn.cpp:76->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 49 'zext' 'zext_ln76' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.77ns)   --->   "%icmp_ln76 = icmp_eq  i9 %py_1, i9 %add_ln76" [src/srcnn.cpp:76->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 50 'icmp' 'icmp_ln76' <Predicate = true> <Delay = 0.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.77ns)   --->   "%py_2 = add i9 %py_1, i9 1" [src/srcnn.cpp:76->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 51 'add' 'py_2' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%br_ln76 = br i1 %icmp_ln76, void %for.body.split.i, void %load_tile_to_stream3.exit" [src/srcnn.cpp:76->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 52 'br' 'br_ln76' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%specloopname_ln76 = specloopname void @_ssdm_op_SpecLoopName, void @empty_10" [src/srcnn.cpp:76->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 53 'specloopname' 'specloopname_ln76' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln77 = zext i9 %py_1" [src/srcnn.cpp:77->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 54 'zext' 'zext_ln77' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.78ns)   --->   "%iy = add i11 %sext_ln77, i11 %zext_ln76" [src/srcnn.cpp:77->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 55 'add' 'iy' <Predicate = (!icmp_ln76)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.78ns)   --->   "%add_ln77_2 = add i10 %add_ln77, i10 %zext_ln77" [src/srcnn.cpp:77->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 56 'add' 'add_ln77_2' <Predicate = (!icmp_ln76)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%tmp_73 = bitselect i1 @_ssdm_op_BitSelect.i1.i11.i32, i11 %iy, i32 10" [src/srcnn.cpp:78->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 57 'bitselect' 'tmp_73' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.40ns)   --->   "%iy_1 = select i1 %tmp_73, i10 0, i10 %add_ln77_2" [src/srcnn.cpp:78->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 58 'select' 'iy_1' <Predicate = (!icmp_ln76)> <Delay = 0.40> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%trunc_ln77 = trunc i10 %iy_1" [src/srcnn.cpp:77->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 59 'trunc' 'trunc_ln77' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.78ns)   --->   "%icmp_ln79 = icmp_ugt  i10 %iy_1, i10 254" [src/srcnn.cpp:79->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 60 'icmp' 'icmp_ln79' <Predicate = (!icmp_ln76)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.39ns)   --->   "%iy_2 = select i1 %icmp_ln79, i8 254, i8 %trunc_ln77" [src/srcnn.cpp:79->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 61 'select' 'iy_2' <Predicate = (!icmp_ln76)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i18 @_ssdm_op_BitConcatenate.i18.i8.i10, i8 %iy_2, i10 0" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 62 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%zext_ln86 = zext i18 %shl_ln" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 63 'zext' 'zext_ln86' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%shl_ln86_1 = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i8.i2, i8 %iy_2, i2 0" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 64 'bitconcatenate' 'shl_ln86_1' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln86_1 = zext i10 %shl_ln86_1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 65 'zext' 'zext_ln86_1' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.87ns)   --->   "%sub_ln86 = sub i19 %zext_ln86, i19 %zext_ln86_1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 66 'sub' 'sub_ln86' <Predicate = (!icmp_ln76)> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%sext_ln82 = sext i19 %sub_ln86" [src/srcnn.cpp:82->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 67 'sext' 'sext_ln82' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.42ns)   --->   "%br_ln82 = br void %for.body10.i" [src/srcnn.cpp:82->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 68 'br' 'br_ln82' <Predicate = (!icmp_ln76)> <Delay = 0.42>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%ret_ln636 = ret" [src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 69 'ret' 'ret_ln636' <Predicate = (icmp_ln76)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 3.93>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%px = phi i9 0, void %for.body.split.i, i9 %px_1, void %for.body10.split.i_ifconv"   --->   Operation 70 'phi' 'px' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%zext_ln82 = zext i9 %px" [src/srcnn.cpp:82->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 71 'zext' 'zext_ln82' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 0, i64 267, i64 0"   --->   Operation 72 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.77ns)   --->   "%icmp_ln82 = icmp_eq  i9 %px, i9 %add_ln76_1" [src/srcnn.cpp:82->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 73 'icmp' 'icmp_ln82' <Predicate = true> <Delay = 0.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 74 [1/1] (0.77ns)   --->   "%px_1 = add i9 %px, i9 1" [src/srcnn.cpp:82->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 74 'add' 'px_1' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%br_ln82 = br i1 %icmp_ln82, void %for.body10.split.i_ifconv, void %for.inc22.loopexit.i" [src/srcnn.cpp:82->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 75 'br' 'br_ln82' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln83 = zext i9 %px" [src/srcnn.cpp:83->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 76 'zext' 'zext_ln83' <Predicate = (!icmp_ln82)> <Delay = 0.00>
ST_3 : Operation 77 [1/1] (0.77ns)   --->   "%ix = add i11 %sext_ln76, i11 %zext_ln82" [src/srcnn.cpp:83->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 77 'add' 'ix' <Predicate = (!icmp_ln82)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 78 [1/1] (0.77ns)   --->   "%add_ln83_2 = add i10 %sext_ln83, i10 %zext_ln83" [src/srcnn.cpp:83->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 78 'add' 'add_ln83_2' <Predicate = (!icmp_ln82)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_74 = bitselect i1 @_ssdm_op_BitSelect.i1.i11.i32, i11 %ix, i32 10" [src/srcnn.cpp:84->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 79 'bitselect' 'tmp_74' <Predicate = (!icmp_ln82)> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (0.40ns)   --->   "%ix_1 = select i1 %tmp_74, i10 0, i10 %add_ln83_2" [src/srcnn.cpp:84->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 80 'select' 'ix_1' <Predicate = (!icmp_ln82)> <Delay = 0.40> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 81 [1/1] (0.78ns)   --->   "%icmp_ln85 = icmp_ugt  i10 %ix_1, i10 254" [src/srcnn.cpp:85->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 81 'icmp' 'icmp_ln85' <Predicate = (!icmp_ln82)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node add_ln86)   --->   "%trunc_ln86 = trunc i10 %ix_1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 82 'trunc' 'trunc_ln86' <Predicate = (!icmp_ln82)> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node add_ln86)   --->   "%select_ln85 = select i1 %icmp_ln85, i8 254, i8 %trunc_ln86" [src/srcnn.cpp:85->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 83 'select' 'select_ln85' <Predicate = (!icmp_ln82)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node add_ln86)   --->   "%shl_ln86_2 = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i8.i2, i8 %select_ln85, i2 0" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 84 'bitconcatenate' 'shl_ln86_2' <Predicate = (!icmp_ln82)> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node add_ln86)   --->   "%zext_ln86_2 = zext i10 %shl_ln86_2" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 85 'zext' 'zext_ln86_2' <Predicate = (!icmp_ln82)> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.88ns) (out node of the LUT)   --->   "%add_ln86 = add i20 %sext_ln82, i20 %zext_ln86_2" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 86 'add' 'add_ln86' <Predicate = (!icmp_ln82)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "%sext_ln86_3 = sext i20 %add_ln86" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 87 'sext' 'sext_ln86_3' <Predicate = (!icmp_ln82)> <Delay = 0.00>
ST_3 : Operation 88 [1/1] (1.08ns)   --->   "%add_ln86_1 = add i64 %sext_ln86_3, i64 %input_ftmap_read" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 88 'add' 'add_ln86_1' <Predicate = (!icmp_ln82)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln86_1, i32 2, i32 63" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 89 'partselect' 'trunc_ln' <Predicate = (!icmp_ln82)> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%sext_ln86 = sext i62 %trunc_ln" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 90 'sext' 'sext_ln86' <Predicate = (!icmp_ln82)> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "%gmem_in_addr = getelementptr i32 %gmem_in, i64 %sext_ln86" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 91 'getelementptr' 'gmem_in_addr' <Predicate = (!icmp_ln82)> <Delay = 0.00>
ST_3 : Operation 92 [1/1] (0.42ns)   --->   "%store_ln76 = store i9 %py_2, i9 %py" [src/srcnn.cpp:76->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 92 'store' 'store_ln76' <Predicate = (icmp_ln82)> <Delay = 0.42>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%br_ln76 = br void %for.body.i" [src/srcnn.cpp:76->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 93 'br' 'br_ln76' <Predicate = (icmp_ln82)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 94 [8/8] (7.30ns)   --->   "%gmem_in_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_in_addr, i32 1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 94 'readreq' 'gmem_in_load_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 95 [7/8] (7.30ns)   --->   "%gmem_in_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_in_addr, i32 1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 95 'readreq' 'gmem_in_load_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 96 [6/8] (7.30ns)   --->   "%gmem_in_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_in_addr, i32 1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 96 'readreq' 'gmem_in_load_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 97 [5/8] (7.30ns)   --->   "%gmem_in_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_in_addr, i32 1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 97 'readreq' 'gmem_in_load_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 98 [4/8] (7.30ns)   --->   "%gmem_in_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_in_addr, i32 1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 98 'readreq' 'gmem_in_load_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 99 [3/8] (7.30ns)   --->   "%gmem_in_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_in_addr, i32 1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 99 'readreq' 'gmem_in_load_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 100 [2/8] (7.30ns)   --->   "%gmem_in_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_in_addr, i32 1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 100 'readreq' 'gmem_in_load_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 7.30>
ST_11 : Operation 101 [1/8] (7.30ns)   --->   "%gmem_in_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_in_addr, i32 1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 101 'readreq' 'gmem_in_load_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 102 [1/1] (7.30ns)   --->   "%gmem_in_addr_read = read i32 @_ssdm_op_Read.m_axi.i32P1A, i32 %gmem_in_addr" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 102 'read' 'gmem_in_addr_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 2.30>
ST_13 : Operation 103 [1/1] (0.00ns)   --->   "%bitcast_ln86 = bitcast i32 %gmem_in_addr_read" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 103 'bitcast' 'bitcast_ln86' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 104 [2/2] (2.30ns)   --->   "%pf = fpext i32 %bitcast_ln86" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 104 'fpext' 'pf' <Predicate = true> <Delay = 2.30> <CoreInst = "Float2Double">   --->   Core 64 'Float2Double' <Latency = 1> <II = 1> <Delay = 2.30> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>

State 14 <SV = 13> <Delay = 6.96>
ST_14 : Operation 105 [1/2] (2.30ns)   --->   "%pf = fpext i32 %bitcast_ln86" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 105 'fpext' 'pf' <Predicate = true> <Delay = 2.30> <CoreInst = "Float2Double">   --->   Core 64 'Float2Double' <Latency = 1> <II = 1> <Delay = 2.30> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>
ST_14 : Operation 106 [1/1] (0.00ns)   --->   "%bitcast_ln724 = bitcast i64 %pf" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 106 'bitcast' 'bitcast_ln724' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 107 [1/1] (0.00ns)   --->   "%trunc_ln86_1 = trunc i64 %bitcast_ln724" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 107 'trunc' 'trunc_ln86_1' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 108 [1/1] (0.00ns)   --->   "%tmp_75 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %bitcast_ln724, i32 63" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 108 'bitselect' 'tmp_75' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 109 [1/1] (0.00ns)   --->   "%tmp_i = partselect i11 @_ssdm_op_PartSelect.i11.i64.i32.i32, i64 %bitcast_ln724, i32 52, i32 62" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 109 'partselect' 'tmp_i' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 110 [1/1] (0.00ns)   --->   "%zext_ln86_3 = zext i11 %tmp_i" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 110 'zext' 'zext_ln86_3' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 111 [1/1] (0.00ns)   --->   "%trunc_ln86_2 = trunc i64 %bitcast_ln724" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 111 'trunc' 'trunc_ln86_2' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 112 [1/1] (0.00ns)   --->   "%zext_ln86_4_cast = bitconcatenate i53 @_ssdm_op_BitConcatenate.i53.i1.i52, i1 1, i52 %trunc_ln86_2" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 112 'bitconcatenate' 'zext_ln86_4_cast' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 113 [1/1] (0.00ns)   --->   "%zext_ln86_4 = zext i53 %zext_ln86_4_cast" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 113 'zext' 'zext_ln86_4' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 114 [1/1] (1.10ns)   --->   "%sub_ln86_1 = sub i54 0, i54 %zext_ln86_4" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 114 'sub' 'sub_ln86_1' <Predicate = true> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 115 [1/1] (0.40ns)   --->   "%select_ln86 = select i1 %tmp_75, i54 %sub_ln86_1, i54 %zext_ln86_4" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 115 'select' 'select_ln86' <Predicate = true> <Delay = 0.40> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 116 [1/1] (1.08ns)   --->   "%icmp_ln86 = icmp_eq  i63 %trunc_ln86_1, i63 0" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 116 'icmp' 'icmp_ln86' <Predicate = true> <Delay = 1.08> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 117 [1/1] (0.80ns)   --->   "%sub_ln86_2 = sub i12 1075, i12 %zext_ln86_3" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 117 'sub' 'sub_ln86_2' <Predicate = true> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 118 [1/1] (0.00ns)   --->   "%trunc_ln86_3 = trunc i12 %sub_ln86_2" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 118 'trunc' 'trunc_ln86_3' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 119 [1/1] (0.80ns)   --->   "%icmp_ln86_1 = icmp_sgt  i12 %sub_ln86_2, i12 14" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 119 'icmp' 'icmp_ln86_1' <Predicate = true> <Delay = 0.80> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 120 [1/1] (0.80ns)   --->   "%add_ln86_2 = add i12 %sub_ln86_2, i12 4082" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 120 'add' 'add_ln86_2' <Predicate = true> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 121 [1/1] (0.80ns)   --->   "%sub_ln86_3 = sub i12 14, i12 %sub_ln86_2" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 121 'sub' 'sub_ln86_3' <Predicate = true> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 122 [1/1] (0.37ns)   --->   "%select_ln86_1 = select i1 %icmp_ln86_1, i12 %add_ln86_2, i12 %sub_ln86_3" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 122 'select' 'select_ln86_1' <Predicate = true> <Delay = 0.37> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 123 [1/1] (0.80ns)   --->   "%icmp_ln86_2 = icmp_eq  i12 %sub_ln86_2, i12 14" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 123 'icmp' 'icmp_ln86_2' <Predicate = true> <Delay = 0.80> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 124 [1/1] (0.00ns)   --->   "%trunc_ln86_4 = trunc i54 %select_ln86" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 124 'trunc' 'trunc_ln86_4' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 125 [1/1] (0.80ns)   --->   "%icmp_ln86_4 = icmp_sgt  i12 %add_ln86_2, i12 54" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 125 'icmp' 'icmp_ln86_4' <Predicate = true> <Delay = 0.80> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 126 [1/1] (0.00ns)   --->   "%tmp_77 = partselect i8 @_ssdm_op_PartSelect.i8.i12.i32.i32, i12 %select_ln86_1, i32 4, i32 11" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 126 'partselect' 'tmp_77' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 127 [1/1] (0.76ns)   --->   "%icmp_ln86_5 = icmp_eq  i8 %tmp_77, i8 0" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 127 'icmp' 'icmp_ln86_5' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 128 [1/1] (0.79ns)   --->   "%add_ln86_3 = add i11 %trunc_ln86_3, i11 2033" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 128 'add' 'add_ln86_3' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 129 [1/1] (0.00ns)   --->   "%zext_ln86_6 = zext i11 %add_ln86_3" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 129 'zext' 'zext_ln86_6' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 130 [1/1] (0.00ns)   --->   "%bit_select59_i_i = bitselect i1 @_ssdm_op_BitSelect.i1.i54.i32, i54 %select_ln86, i32 %zext_ln86_6" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 130 'bitselect' 'bit_select59_i_i' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 131 [1/1] (0.00ns)   --->   "%tmp_78 = partselect i8 @_ssdm_op_PartSelect.i8.i12.i32.i32, i12 %sub_ln86_2, i32 4, i32 11" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 131 'partselect' 'tmp_78' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 132 [1/1] (0.76ns)   --->   "%icmp_ln86_6 = icmp_sgt  i8 %tmp_78, i8 0" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 132 'icmp' 'icmp_ln86_6' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 133 [1/1] (0.00ns)   --->   "%trunc_ln86_8 = trunc i12 %sub_ln86_2" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 133 'trunc' 'trunc_ln86_8' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 134 [1/1] (0.80ns)   --->   "%add_ln86_4 = add i12 %sub_ln86_2, i12 4080" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 134 'add' 'add_ln86_4' <Predicate = true> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 135 [1/1] (0.80ns)   --->   "%icmp_ln86_7 = icmp_sgt  i12 %add_ln86_4, i12 53" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 135 'icmp' 'icmp_ln86_7' <Predicate = true> <Delay = 0.80> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 136 [1/1] (0.78ns)   --->   "%sub_ln86_4 = sub i6 5, i6 %trunc_ln86_8" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 136 'sub' 'sub_ln86_4' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln86_2)   --->   "%select_ln86_18 = select i1 %icmp_ln86_7, i6 0, i6 %sub_ln86_4" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 137 'select' 'select_ln86_18' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln86_2)   --->   "%zext_ln86_8 = zext i6 %select_ln86_18" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 138 'zext' 'zext_ln86_8' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 139 [1/1] (0.73ns) (out node of the LUT)   --->   "%lshr_ln86_2 = lshr i54 18014398509481983, i54 %zext_ln86_8" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 139 'lshr' 'lshr_ln86_2' <Predicate = true> <Delay = 0.73> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln86_8)   --->   "%and_ln86_16 = and i54 %select_ln86, i54 %lshr_ln86_2" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 140 'and' 'and_ln86_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 141 [1/1] (1.09ns) (out node of the LUT)   --->   "%icmp_ln86_8 = icmp_ne  i54 %and_ln86_16, i54 0" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 141 'icmp' 'icmp_ln86_8' <Predicate = true> <Delay = 1.09> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 142 [1/1] (0.80ns)   --->   "%icmp_ln86_9 = icmp_slt  i12 %sub_ln86_2, i12 14" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 142 'icmp' 'icmp_ln86_9' <Predicate = true> <Delay = 0.80> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 143 [1/1] (0.80ns)   --->   "%add_ln86_6 = add i12 %sub_ln86_2, i12 2" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 143 'add' 'add_ln86_6' <Predicate = true> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 144 [1/1] (0.00ns)   --->   "%sext_ln86_4 = sext i12 %add_ln86_6" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 144 'sext' 'sext_ln86_4' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 145 [1/1] (0.80ns)   --->   "%add_ln86_7 = add i12 %sub_ln86_2, i12 3" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 145 'add' 'add_ln86_7' <Predicate = true> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 146 [1/1] (0.80ns)   --->   "%icmp_ln86_10 = icmp_slt  i12 %add_ln86_6, i12 54" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 146 'icmp' 'icmp_ln86_10' <Predicate = true> <Delay = 0.80> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 147 [1/1] (0.00ns)   --->   "%tmp_82 = bitselect i1 @_ssdm_op_BitSelect.i1.i12.i32, i12 %add_ln86_6, i32 11" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 147 'bitselect' 'tmp_82' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 148 [1/1] (0.28ns)   --->   "%xor_ln86_7 = xor i1 %tmp_82, i1 1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 148 'xor' 'xor_ln86_7' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 149 [1/1] (0.80ns)   --->   "%icmp_ln86_11 = icmp_ult  i12 %add_ln86_6, i12 54" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 149 'icmp' 'icmp_ln86_11' <Predicate = true> <Delay = 0.80> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 150 [1/1] (0.00ns)   --->   "%tobool_i_i = bitselect i1 @_ssdm_op_BitSelect.i1.i54.i32, i54 %select_ln86, i32 %sext_ln86_4" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 150 'bitselect' 'tobool_i_i' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 151 [1/1] (0.28ns)   --->   "%and_ln86_10 = and i1 %icmp_ln86_11, i1 %tobool_i_i" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 151 'and' 'and_ln86_10' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 152 [1/1] (0.80ns)   --->   "%icmp_ln86_12 = icmp_slt  i12 %add_ln86_7, i12 54" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 152 'icmp' 'icmp_ln86_12' <Predicate = true> <Delay = 0.80> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 153 [1/1] (0.80ns)   --->   "%icmp_ln86_13 = icmp_ult  i12 %add_ln86_7, i12 54" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 153 'icmp' 'icmp_ln86_13' <Predicate = true> <Delay = 0.80> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 154 [1/1] (0.78ns)   --->   "%add_ln86_8 = add i6 %trunc_ln86_8, i6 3" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 154 'add' 'add_ln86_8' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 155 [1/1] (0.00ns)   --->   "%zext_ln86_10 = zext i6 %add_ln86_8" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 155 'zext' 'zext_ln86_10' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 156 [1/1] (1.50ns)   --->   "%lshr_ln86 = lshr i54 %select_ln86, i54 %zext_ln86_10" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 156 'lshr' 'lshr_ln86' <Predicate = true> <Delay = 1.50> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.50> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 157 [1/1] (0.73ns)   --->   "%lshr_ln86_1 = lshr i54 18014398509481983, i54 %zext_ln86_10" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 157 'lshr' 'lshr_ln86_1' <Predicate = true> <Delay = 0.73> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 158 [1/1] (1.09ns)   --->   "%icmp_ln86_14 = icmp_eq  i54 %lshr_ln86, i54 %lshr_ln86_1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 158 'icmp' 'icmp_ln86_14' <Predicate = true> <Delay = 1.09> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_3)   --->   "%tmp_83 = bitselect i1 @_ssdm_op_BitSelect.i1.i12.i32, i12 %add_ln86_7, i32 11" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 159 'bitselect' 'tmp_83' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 160 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_3)   --->   "%xor_ln86_8 = xor i1 %tmp_83, i1 1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 160 'xor' 'xor_ln86_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 161 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_3)   --->   "%select_ln86_12 = select i1 %icmp_ln86_13, i1 %icmp_ln86_14, i1 %xor_ln86_8" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 161 'select' 'select_ln86_12' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 162 [1/1] (0.28ns)   --->   "%and_ln86_2 = and i1 %icmp_ln86_12, i1 %xor_ln86_7" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 162 'and' 'and_ln86_2' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 163 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln86_3 = and i1 %select_ln86_12, i1 %and_ln86_10" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 163 'and' 'and_ln86_3' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 164 [1/1] (0.28ns)   --->   "%xor_ln86 = xor i1 %and_ln86_10, i1 1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 164 'xor' 'xor_ln86' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 165 [1/1] (1.09ns)   --->   "%icmp_ln86_15 = icmp_eq  i54 %lshr_ln86, i54 0" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 165 'icmp' 'icmp_ln86_15' <Predicate = true> <Delay = 1.09> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node select_ln86_14)   --->   "%and_ln86_4 = and i1 %icmp_ln86_15, i1 %xor_ln86" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 166 'and' 'and_ln86_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 167 [1/1] (0.80ns)   --->   "%icmp_ln86_16 = icmp_eq  i12 %add_ln86_7, i12 54" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 167 'icmp' 'icmp_ln86_16' <Predicate = true> <Delay = 0.80> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 168 [1/1] (0.00ns) (grouped into LUT with out node select_ln86_13)   --->   "%select_ln86_4 = select i1 %icmp_ln86_16, i1 %and_ln86_10, i1 %xor_ln86_7" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 168 'select' 'select_ln86_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 169 [1/1] (0.00ns) (grouped into LUT with out node select_ln86_14)   --->   "%select_ln86_5 = select i1 %icmp_ln86_16, i1 %xor_ln86, i1 %xor_ln86_7" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 169 'select' 'select_ln86_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 170 [1/1] (0.17ns) (out node of the LUT)   --->   "%select_ln86_13 = select i1 %and_ln86_2, i1 %and_ln86_3, i1 %select_ln86_4" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 170 'select' 'select_ln86_13' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 171 [1/1] (0.28ns) (out node of the LUT)   --->   "%select_ln86_14 = select i1 %and_ln86_2, i1 %and_ln86_4, i1 %select_ln86_5" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 171 'select' 'select_ln86_14' <Predicate = true> <Delay = 0.28> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 15 <SV = 14> <Delay = 6.39>
ST_15 : Operation 172 [1/1] (0.00ns)   --->   "%specloopname_ln82 = specloopname void @_ssdm_op_SpecLoopName, void @empty_23" [src/srcnn.cpp:82->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 172 'specloopname' 'specloopname_ln82' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 173 [1/1] (0.00ns)   --->   "%sext_ln86_1 = sext i12 %select_ln86_1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 173 'sext' 'sext_ln86_1' <Predicate = (!icmp_ln86)> <Delay = 0.00>
ST_15 : Operation 174 [1/1] (0.80ns)   --->   "%icmp_ln86_3 = icmp_ult  i12 %select_ln86_1, i12 54" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 174 'icmp' 'icmp_ln86_3' <Predicate = (!icmp_ln86)> <Delay = 0.80> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 175 [1/1] (0.00ns) (grouped into LUT with out node select_ln86_2)   --->   "%tmp_76 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %gmem_in_addr_read, i32 31" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 175 'bitselect' 'tmp_76' <Predicate = (!icmp_ln86)> <Delay = 0.00>
ST_15 : Operation 176 [1/1] (0.00ns) (grouped into LUT with out node select_ln86_2)   --->   "%select_ln86_3 = select i1 %tmp_76, i16 65535, i16 0" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 176 'select' 'select_ln86_3' <Predicate = (!icmp_ln86)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 177 [1/1] (0.00ns)   --->   "%sext_ln86_6 = sext i12 %select_ln86_1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 177 'sext' 'sext_ln86_6' <Predicate = (!icmp_ln86)> <Delay = 0.00>
ST_15 : Operation 178 [1/1] (0.00ns)   --->   "%zext_ln86_5 = zext i32 %sext_ln86_6" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 178 'zext' 'zext_ln86_5' <Predicate = (!icmp_ln86)> <Delay = 0.00>
ST_15 : Operation 179 [1/1] (1.50ns)   --->   "%ashr_ln86 = ashr i54 %select_ln86, i54 %zext_ln86_5" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 179 'ashr' 'ashr_ln86' <Predicate = (!icmp_ln86)> <Delay = 1.50> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.50> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 180 [1/1] (0.00ns) (grouped into LUT with out node select_ln86_2)   --->   "%trunc_ln86_5 = trunc i54 %ashr_ln86" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 180 'trunc' 'trunc_ln86_5' <Predicate = (!icmp_ln86)> <Delay = 0.00>
ST_15 : Operation 181 [1/1] (0.35ns) (out node of the LUT)   --->   "%select_ln86_2 = select i1 %icmp_ln86_3, i16 %trunc_ln86_5, i16 %select_ln86_3" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 181 'select' 'select_ln86_2' <Predicate = (!icmp_ln86)> <Delay = 0.35> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 182 [1/1] (0.00ns) (grouped into LUT with out node and_ln86)   --->   "%trunc_ln86_6 = trunc i16 %select_ln86_2" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 182 'trunc' 'trunc_ln86_6' <Predicate = (!icmp_ln86)> <Delay = 0.00>
ST_15 : Operation 183 [1/1] (0.00ns)   --->   "%sext_ln86_1cast = trunc i31 %sext_ln86_1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 183 'trunc' 'sext_ln86_1cast' <Predicate = (!icmp_ln86)> <Delay = 0.00>
ST_15 : Operation 184 [1/1] (0.90ns)   --->   "%shl_ln86 = shl i16 %trunc_ln86_4, i16 %sext_ln86_1cast" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 184 'shl' 'shl_ln86' <Predicate = (!icmp_ln86)> <Delay = 0.90> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.90> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 185 [1/1] (0.00ns) (grouped into LUT with out node and_ln86)   --->   "%select_ln86_8 = select i1 %icmp_ln86_4, i1 %tmp_75, i1 %bit_select59_i_i" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 185 'select' 'select_ln86_8' <Predicate = (!icmp_ln86)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 186 [1/1] (0.00ns) (grouped into LUT with out node and_ln86)   --->   "%and_ln86_1 = and i1 %icmp_ln86_6, i1 %icmp_ln86_8" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 186 'and' 'and_ln86_1' <Predicate = (!icmp_ln86)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 187 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_9)   --->   "%tmp_79 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %select_ln86_2, i32 15" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 187 'bitselect' 'tmp_79' <Predicate = (!icmp_ln86)> <Delay = 0.00>
ST_15 : Operation 188 [1/1] (0.00ns) (grouped into LUT with out node and_ln86)   --->   "%or_ln86 = or i1 %trunc_ln86_6, i1 %and_ln86_1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 188 'or' 'or_ln86' <Predicate = (!icmp_ln86)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 189 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln86 = and i1 %or_ln86, i1 %select_ln86_8" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 189 'and' 'and_ln86' <Predicate = (!icmp_ln86)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 190 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_5)   --->   "%zext_ln86_9 = zext i1 %and_ln86" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 190 'zext' 'zext_ln86_9' <Predicate = (!icmp_ln86)> <Delay = 0.00>
ST_15 : Operation 191 [1/1] (0.85ns) (out node of the LUT)   --->   "%add_ln86_5 = add i16 %select_ln86_2, i16 %zext_ln86_9" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 191 'add' 'add_ln86_5' <Predicate = (!icmp_ln86)> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 192 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_9)   --->   "%tmp_80 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %add_ln86_5, i32 15" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 192 'bitselect' 'tmp_80' <Predicate = (!icmp_ln86)> <Delay = 0.00>
ST_15 : Operation 193 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_9)   --->   "%xor_ln86_6 = xor i1 %tmp_80, i1 1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 193 'xor' 'xor_ln86_6' <Predicate = (!icmp_ln86)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 194 [1/1] (0.00ns) (grouped into LUT with out node select_ln86_10)   --->   "%select_ln86_9 = select i1 %icmp_ln86_2, i16 %trunc_ln86_4, i16 0" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 194 'select' 'select_ln86_9' <Predicate = (!icmp_ln86)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 195 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_6)   --->   "%xor_ln86_1 = xor i1 %icmp_ln86_2, i1 1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 195 'xor' 'xor_ln86_1' <Predicate = (!icmp_ln86)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 196 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln86_6 = and i1 %icmp_ln86_1, i1 %xor_ln86_1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 196 'and' 'and_ln86_6' <Predicate = (!icmp_ln86)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 197 [1/1] (0.35ns) (out node of the LUT)   --->   "%select_ln86_10 = select i1 %and_ln86_6, i16 %add_ln86_5, i16 %select_ln86_9" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 197 'select' 'select_ln86_10' <Predicate = (!icmp_ln86)> <Delay = 0.35> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 198 [1/1] (0.00ns) (grouped into LUT with out node select_ln86_11)   --->   "%and_ln86_7 = and i1 %icmp_ln86_9, i1 %icmp_ln86_5" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 198 'and' 'and_ln86_7' <Predicate = (!icmp_ln86)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 199 [1/1] (0.35ns) (out node of the LUT)   --->   "%select_ln86_11 = select i1 %and_ln86_7, i16 %shl_ln86, i16 %select_ln86_10" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 199 'select' 'select_ln86_11' <Predicate = (!icmp_ln86)> <Delay = 0.35> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 200 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_9)   --->   "%and_ln86_8 = and i1 %tmp_79, i1 %xor_ln86_6" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 200 'and' 'and_ln86_8' <Predicate = (!icmp_ln86)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 201 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln86_9 = and i1 %and_ln86_8, i1 %and_ln86_6" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 201 'and' 'and_ln86_9' <Predicate = (!icmp_ln86)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 202 [1/1] (0.00ns) (grouped into LUT with out node select_ln86_15)   --->   "%tmp_81 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %select_ln86_11, i32 15" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 202 'bitselect' 'tmp_81' <Predicate = (!icmp_ln86)> <Delay = 0.00>
ST_15 : Operation 203 [1/1] (0.17ns) (out node of the LUT)   --->   "%select_ln86_6 = select i1 %and_ln86_9, i1 %select_ln86_13, i1 %select_ln86_14" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 203 'select' 'select_ln86_6' <Predicate = (!icmp_ln86)> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 204 [1/1] (0.00ns) (grouped into LUT with out node xor_ln86_2)   --->   "%and_ln86_5 = and i1 %and_ln86_9, i1 %select_ln86_13" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 204 'and' 'and_ln86_5' <Predicate = (!icmp_ln86)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 205 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln86_2 = xor i1 %and_ln86_5, i1 1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 205 'xor' 'xor_ln86_2' <Predicate = (!icmp_ln86)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 206 [1/1] (0.28ns)   --->   "%xor_ln86_3 = xor i1 %icmp_ln86_10, i1 1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 206 'xor' 'xor_ln86_3' <Predicate = (!icmp_ln86)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 207 [1/1] (0.00ns) (grouped into LUT with out node select_ln86_15)   --->   "%and_ln86_11 = and i1 %tmp_81, i1 %xor_ln86_3" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 207 'and' 'and_ln86_11' <Predicate = (!icmp_ln86)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 208 [1/1] (0.00ns) (grouped into LUT with out node select_ln86_15)   --->   "%and_ln86_12 = and i1 %and_ln86_11, i1 %tmp_75" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 208 'and' 'and_ln86_12' <Predicate = (!icmp_ln86)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 209 [1/1] (0.28ns)   --->   "%and_ln86_13 = and i1 %icmp_ln86_10, i1 %tmp_75" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 209 'and' 'and_ln86_13' <Predicate = (!icmp_ln86)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 210 [1/1] (0.00ns) (grouped into LUT with out node select_ln86_15)   --->   "%and_ln86_14 = and i1 %and_ln86_13, i1 %select_ln86_6" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 210 'and' 'and_ln86_14' <Predicate = (!icmp_ln86)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 211 [1/1] (0.28ns) (out node of the LUT)   --->   "%select_ln86_15 = select i1 %and_ln86_14, i1 %xor_ln86_2, i1 %and_ln86_12" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 211 'select' 'select_ln86_15' <Predicate = (!icmp_ln86)> <Delay = 0.28> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 212 [1/1] (0.00ns) (grouped into LUT with out node or_ln86_1)   --->   "%xor_ln86_4 = xor i1 %select_ln86_6, i1 1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 212 'xor' 'xor_ln86_4' <Predicate = (!icmp_ln86)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 213 [1/1] (0.00ns) (grouped into LUT with out node or_ln86_1)   --->   "%and_ln86_15 = and i1 %and_ln86_13, i1 %xor_ln86_4" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 213 'and' 'and_ln86_15' <Predicate = (!icmp_ln86)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 214 [1/1] (0.00ns) (grouped into LUT with out node or_ln86_1)   --->   "%select_ln86_16 = select i1 %and_ln86_15, i1 %xor_ln86_2, i1 %select_ln86_15" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 214 'select' 'select_ln86_16' <Predicate = (!icmp_ln86)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 215 [1/1] (0.00ns) (grouped into LUT with out node xor_ln86_5)   --->   "%or_ln86_2 = or i1 %select_ln86_6, i1 %xor_ln86_3" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 215 'or' 'or_ln86_2' <Predicate = (!icmp_ln86)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 216 [1/1] (0.00ns) (grouped into LUT with out node xor_ln86_5)   --->   "%or_ln86_3 = or i1 %or_ln86_2, i1 %tmp_75" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 216 'or' 'or_ln86_3' <Predicate = (!icmp_ln86)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 217 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln86_5 = xor i1 %or_ln86_3, i1 1" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 217 'xor' 'xor_ln86_5' <Predicate = (!icmp_ln86)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 218 [1/1] (0.28ns) (out node of the LUT)   --->   "%or_ln86_1 = or i1 %select_ln86_16, i1 %xor_ln86_5" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 218 'or' 'or_ln86_1' <Predicate = (!icmp_ln86)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 219 [1/1] (0.00ns) (grouped into LUT with out node select_ln86_17)   --->   "%select_ln86_19 = select i1 %xor_ln86_5, i16 65535, i16 0" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 219 'select' 'select_ln86_19' <Predicate = (!icmp_ln86)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 220 [1/1] (0.00ns) (grouped into LUT with out node select_ln86_17)   --->   "%select_ln86_7 = select i1 %or_ln86_1, i16 %select_ln86_19, i16 %select_ln86_11" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 220 'select' 'select_ln86_7' <Predicate = (!icmp_ln86)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 221 [1/1] (0.35ns) (out node of the LUT)   --->   "%select_ln86_17 = select i1 %icmp_ln86, i16 0, i16 %select_ln86_7" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 221 'select' 'select_ln86_17' <Predicate = true> <Delay = 0.35> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 222 [1/1] (1.75ns)   --->   "%write_ln86 = write void @_ssdm_op_Write.ap_fifo.volatile.i16P0A, i16 %s_pix_i, i16 %select_ln86_17" [src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 222 'write' 'write_ln86' <Predicate = true> <Delay = 1.75> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 16> <Depth = 1024> <FIFO>
ST_15 : Operation 223 [1/1] (0.00ns)   --->   "%br_ln82 = br void %for.body10.i" [src/srcnn.cpp:82->src/srcnn.cpp:636->src/srcnn.cpp:623]   --->   Operation 223 'br' 'br_ln82' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 3.676ns
The critical path consists of the following:
	wire read operation ('p_read_2') on port 'p_read' [11]  (1.838 ns)
	fifo write operation ('write_ln65', src/srcnn.cpp:65->src/srcnn.cpp:636->src/srcnn.cpp:623) on port 'tw_eff_loc_i_c2' (src/srcnn.cpp:65->src/srcnn.cpp:636->src/srcnn.cpp:623) [20]  (1.838 ns)

 <State 2>: 3.243ns
The critical path consists of the following:
	'load' operation ('py', src/srcnn.cpp:76->src/srcnn.cpp:636->src/srcnn.cpp:623) on local variable 'py' [43]  (0.000 ns)
	'add' operation ('iy', src/srcnn.cpp:77->src/srcnn.cpp:636->src/srcnn.cpp:623) [51]  (0.787 ns)
	'select' operation ('iy', src/srcnn.cpp:78->src/srcnn.cpp:636->src/srcnn.cpp:623) [54]  (0.403 ns)
	'icmp' operation ('icmp_ln79', src/srcnn.cpp:79->src/srcnn.cpp:636->src/srcnn.cpp:623) [56]  (0.787 ns)
	'select' operation ('iy', src/srcnn.cpp:79->src/srcnn.cpp:636->src/srcnn.cpp:623) [57]  (0.393 ns)
	'sub' operation ('sub_ln86', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [62]  (0.873 ns)

 <State 3>: 3.935ns
The critical path consists of the following:
	'phi' operation ('px') with incoming values : ('px', src/srcnn.cpp:82->src/srcnn.cpp:636->src/srcnn.cpp:623) [66]  (0.000 ns)
	'add' operation ('ix', src/srcnn.cpp:83->src/srcnn.cpp:636->src/srcnn.cpp:623) [75]  (0.776 ns)
	'select' operation ('ix', src/srcnn.cpp:84->src/srcnn.cpp:636->src/srcnn.cpp:623) [78]  (0.403 ns)
	'icmp' operation ('icmp_ln85', src/srcnn.cpp:85->src/srcnn.cpp:636->src/srcnn.cpp:623) [79]  (0.787 ns)
	'select' operation ('select_ln85', src/srcnn.cpp:85->src/srcnn.cpp:636->src/srcnn.cpp:623) [81]  (0.000 ns)
	'add' operation ('add_ln86', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [84]  (0.884 ns)
	'add' operation ('add_ln86_1', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [86]  (1.085 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem_in_load_req', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) on port 'gmem_in' (src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [90]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem_in_load_req', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) on port 'gmem_in' (src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [90]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem_in_load_req', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) on port 'gmem_in' (src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [90]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem_in_load_req', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) on port 'gmem_in' (src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [90]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem_in_load_req', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) on port 'gmem_in' (src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [90]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem_in_load_req', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) on port 'gmem_in' (src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [90]  (7.300 ns)

 <State 10>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem_in_load_req', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) on port 'gmem_in' (src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [90]  (7.300 ns)

 <State 11>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem_in_load_req', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) on port 'gmem_in' (src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [90]  (7.300 ns)

 <State 12>: 7.300ns
The critical path consists of the following:
	bus read operation ('gmem_in_addr_read', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) on port 'gmem_in' (src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [91]  (7.300 ns)

 <State 13>: 2.306ns
The critical path consists of the following:
	'fpext' operation ('pf', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [93]  (2.306 ns)

 <State 14>: 6.966ns
The critical path consists of the following:
	'fpext' operation ('pf', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [93]  (2.306 ns)
	'sub' operation ('sub_ln86_2', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [105]  (0.809 ns)
	'add' operation ('add_ln86_8', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [172]  (0.781 ns)
	'lshr' operation ('lshr_ln86', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [174]  (1.506 ns)
	'icmp' operation ('icmp_ln86_14', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [176]  (1.099 ns)
	'select' operation ('select_ln86_12', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [179]  (0.000 ns)
	'and' operation ('and_ln86_3', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [181]  (0.287 ns)
	'select' operation ('select_ln86_13', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [188]  (0.179 ns)

 <State 15>: 6.398ns
The critical path consists of the following:
	'ashr' operation ('ashr_ln86', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [119]  (1.506 ns)
	'select' operation ('select_ln86_2', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [121]  (0.357 ns)
	'or' operation ('or_ln86', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [145]  (0.000 ns)
	'and' operation ('and_ln86', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [146]  (0.287 ns)
	'add' operation ('add_ln86_5', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [148]  (0.853 ns)
	'select' operation ('select_ln86_10', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [154]  (0.357 ns)
	'select' operation ('select_ln86_11', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [157]  (0.357 ns)
	'and' operation ('and_ln86_11', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [194]  (0.000 ns)
	'and' operation ('and_ln86_12', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [195]  (0.000 ns)
	'select' operation ('select_ln86_15', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [198]  (0.287 ns)
	'select' operation ('select_ln86_16', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [201]  (0.000 ns)
	'or' operation ('or_ln86_1', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [205]  (0.287 ns)
	'select' operation ('select_ln86_7', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [207]  (0.000 ns)
	'select' operation ('select_ln86_17', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [208]  (0.357 ns)
	fifo write operation ('write_ln86', src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) on port 's_pix_i' (src/srcnn.cpp:86->src/srcnn.cpp:636->src/srcnn.cpp:623) [209]  (1.750 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
