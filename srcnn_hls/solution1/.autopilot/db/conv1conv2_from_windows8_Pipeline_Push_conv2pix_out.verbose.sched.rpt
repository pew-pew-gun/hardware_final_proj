

================================================================
== Vitis HLS Report for 'conv1conv2_from_windows8_Pipeline_Push_conv2pix_out'
================================================================
* Date:           Tue Oct 28 00:02:19 2025

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        srcnn_hls
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xck26-sfvc784-2LV-c


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.468 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       35|       35|  0.350 us|  0.350 us|   35|   35|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                     |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Push_conv2pix_out  |       33|       33|         6|          4|          4|     8|       yes|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 4, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 4, D = 6, States = { 1 2 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.20>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%n2 = alloca i32 1"   --->   Operation 9 'alloca' 'n2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.42ns)   --->   "%store_ln0 = store i6 0, i6 %n2"   --->   Operation 10 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body71.i"   --->   Operation 11 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%n2_1 = load i6 %n2" [src/srcnn.cpp:285->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 12 'load' 'n2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i6.i32, i6 %n2_1, i32 5" [src/srcnn.cpp:285->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 13 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%br_ln285 = br i1 %tmp, void %for.body71.split.i, void %for.inc80.i.exitStub" [src/srcnn.cpp:285->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 14 'br' 'br_ln285' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%lshr_ln1 = partselect i3 @_ssdm_op_PartSelect.i3.i6.i32.i32, i6 %n2_1, i32 2, i32 4" [src/srcnn.cpp:285->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 15 'partselect' 'lshr_ln1' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%zext_ln285_1 = zext i3 %lshr_ln1" [src/srcnn.cpp:285->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 16 'zext' 'zext_ln285_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%acc2_addr = getelementptr i32 %acc2, i64 0, i64 %zext_ln285_1" [src/srcnn.cpp:288->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 17 'getelementptr' 'acc2_addr' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 18 [2/2] (0.67ns)   --->   "%t2 = load i3 %acc2_addr" [src/srcnn.cpp:288->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 18 'load' 't2' <Predicate = (!tmp)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%acc2_1_addr = getelementptr i32 %acc2_1, i64 0, i64 %zext_ln285_1" [src/srcnn.cpp:288->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 19 'getelementptr' 'acc2_1_addr' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 20 [2/2] (0.67ns)   --->   "%t2_1 = load i3 %acc2_1_addr" [src/srcnn.cpp:288->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 20 'load' 't2_1' <Predicate = (!tmp)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%acc2_2_addr = getelementptr i32 %acc2_2, i64 0, i64 %zext_ln285_1" [src/srcnn.cpp:288->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 21 'getelementptr' 'acc2_2_addr' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 22 [2/2] (0.67ns)   --->   "%t2_2 = load i3 %acc2_2_addr" [src/srcnn.cpp:288->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 22 'load' 't2_2' <Predicate = (!tmp)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%acc2_3_addr = getelementptr i32 %acc2_3, i64 0, i64 %zext_ln285_1" [src/srcnn.cpp:288->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 23 'getelementptr' 'acc2_3_addr' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 24 [2/2] (0.67ns)   --->   "%t2_3 = load i3 %acc2_3_addr" [src/srcnn.cpp:288->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 24 'load' 't2_3' <Predicate = (!tmp)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_1 : Operation 25 [1/1] (0.78ns)   --->   "%add_ln285 = add i6 %n2_1, i6 4" [src/srcnn.cpp:285->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 25 'add' 'add_ln285' <Predicate = (!tmp)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.42ns)   --->   "%store_ln285 = store i6 %add_ln285, i6 %n2" [src/srcnn.cpp:285->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 26 'store' 'store_ln285' <Predicate = (!tmp)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 3.45>
ST_2 : Operation 27 [1/2] (0.67ns)   --->   "%t2 = load i3 %acc2_addr" [src/srcnn.cpp:288->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 27 'load' 't2' <Predicate = (!tmp)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : [1/1] (0.57ns)   --->   Input mux for Operation 28 '%tmp_5 = fcmp_ogt  i32 %t2, i32 0'
ST_2 : Operation 28 [2/2] (2.20ns)   --->   "%tmp_5 = fcmp_ogt  i32 %t2, i32 0" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 28 'fcmp' 'tmp_5' <Predicate = (!tmp)> <Delay = 2.20> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/2] (0.67ns)   --->   "%t2_1 = load i3 %acc2_1_addr" [src/srcnn.cpp:288->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 29 'load' 't2_1' <Predicate = (!tmp)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 30 [1/2] (0.67ns)   --->   "%t2_2 = load i3 %acc2_2_addr" [src/srcnn.cpp:288->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 30 'load' 't2_2' <Predicate = (!tmp)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 31 [1/2] (0.67ns)   --->   "%t2_3 = load i3 %acc2_3_addr" [src/srcnn.cpp:288->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 31 'load' 't2_3' <Predicate = (!tmp)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 91 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 91 'ret' 'ret_ln0' <Predicate = (tmp)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 4.46>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln285 = zext i6 %n2_1" [src/srcnn.cpp:285->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 32 'zext' 'zext_ln285' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%trunc_ln285 = trunc i6 %n2_1" [src/srcnn.cpp:285->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 33 'trunc' 'trunc_ln285' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%bitcast_ln289 = bitcast i32 %t2" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 34 'bitcast' 'bitcast_ln289' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%tmp_2 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln289, i32 23, i32 30" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 35 'partselect' 'tmp_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%trunc_ln289 = trunc i32 %bitcast_ln289" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 36 'trunc' 'trunc_ln289' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.76ns)   --->   "%icmp_ln289 = icmp_ne  i8 %tmp_2, i8 255" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 37 'icmp' 'icmp_ln289' <Predicate = (!tmp)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (0.92ns)   --->   "%icmp_ln289_1 = icmp_eq  i23 %trunc_ln289, i23 0" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 38 'icmp' 'icmp_ln289_1' <Predicate = (!tmp)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node select_ln289)   --->   "%or_ln289 = or i1 %icmp_ln289_1, i1 %icmp_ln289" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 39 'or' 'or_ln289' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 40 [1/2] (2.78ns)   --->   "%tmp_5 = fcmp_ogt  i32 %t2, i32 0" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 40 'fcmp' 'tmp_5' <Predicate = (!tmp)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node select_ln289)   --->   "%and_ln289 = and i1 %or_ln289, i1 %tmp_5" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 41 'and' 'and_ln289' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 42 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln289 = select i1 %and_ln289, i32 %t2, i32 0" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 42 'select' 'select_ln289' <Predicate = (!tmp)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%outpix_addr = getelementptr i32 %outpix, i64 0, i64 %zext_ln285" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 43 'getelementptr' 'outpix_addr' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (1.23ns)   --->   "%store_ln289 = store i32 %select_ln289, i5 %outpix_addr" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 44 'store' 'store_ln289' <Predicate = (!tmp)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_3 : [1/1] (0.57ns)   --->   Input mux for Operation 45 '%tmp_7 = fcmp_ogt  i32 %t2_1, i32 0'
ST_3 : Operation 45 [2/2] (2.20ns)   --->   "%tmp_7 = fcmp_ogt  i32 %t2_1, i32 0" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 45 'fcmp' 'tmp_7' <Predicate = (!tmp)> <Delay = 2.20> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 4.46>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%or_ln285 = or i5 %trunc_ln285, i5 1" [src/srcnn.cpp:285->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 46 'or' 'or_ln285' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln288 = zext i5 %or_ln285" [src/srcnn.cpp:288->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 47 'zext' 'zext_ln288' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%bitcast_ln289_1 = bitcast i32 %t2_1" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 48 'bitcast' 'bitcast_ln289_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_6 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln289_1, i32 23, i32 30" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 49 'partselect' 'tmp_6' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%trunc_ln289_1 = trunc i32 %bitcast_ln289_1" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 50 'trunc' 'trunc_ln289_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.76ns)   --->   "%icmp_ln289_2 = icmp_ne  i8 %tmp_6, i8 255" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 51 'icmp' 'icmp_ln289_2' <Predicate = (!tmp)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 52 [1/1] (0.92ns)   --->   "%icmp_ln289_3 = icmp_eq  i23 %trunc_ln289_1, i23 0" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 52 'icmp' 'icmp_ln289_3' <Predicate = (!tmp)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node select_ln289_1)   --->   "%or_ln289_1 = or i1 %icmp_ln289_3, i1 %icmp_ln289_2" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 53 'or' 'or_ln289_1' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 54 [1/2] (2.78ns)   --->   "%tmp_7 = fcmp_ogt  i32 %t2_1, i32 0" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 54 'fcmp' 'tmp_7' <Predicate = (!tmp)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node select_ln289_1)   --->   "%and_ln289_1 = and i1 %or_ln289_1, i1 %tmp_7" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 55 'and' 'and_ln289_1' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 56 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln289_1 = select i1 %and_ln289_1, i32 %t2_1, i32 0" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 56 'select' 'select_ln289_1' <Predicate = (!tmp)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%outpix_addr_1 = getelementptr i32 %outpix, i64 0, i64 %zext_ln288" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 57 'getelementptr' 'outpix_addr_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (1.23ns)   --->   "%store_ln289 = store i32 %select_ln289_1, i5 %outpix_addr_1" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 58 'store' 'store_ln289' <Predicate = (!tmp)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_4 : [1/1] (0.57ns)   --->   Input mux for Operation 59 '%tmp_9 = fcmp_ogt  i32 %t2_2, i32 0'
ST_4 : Operation 59 [2/2] (2.20ns)   --->   "%tmp_9 = fcmp_ogt  i32 %t2_2, i32 0" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 59 'fcmp' 'tmp_9' <Predicate = (!tmp)> <Delay = 2.20> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 4.46>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%or_ln285_1 = or i5 %trunc_ln285, i5 2" [src/srcnn.cpp:285->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 60 'or' 'or_ln285_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln288_1 = zext i5 %or_ln285_1" [src/srcnn.cpp:288->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 61 'zext' 'zext_ln288_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "%bitcast_ln289_2 = bitcast i32 %t2_2" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 62 'bitcast' 'bitcast_ln289_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%tmp_8 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln289_2, i32 23, i32 30" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 63 'partselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%trunc_ln289_2 = trunc i32 %bitcast_ln289_2" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 64 'trunc' 'trunc_ln289_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (0.76ns)   --->   "%icmp_ln289_4 = icmp_ne  i8 %tmp_8, i8 255" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 65 'icmp' 'icmp_ln289_4' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 66 [1/1] (0.92ns)   --->   "%icmp_ln289_5 = icmp_eq  i23 %trunc_ln289_2, i23 0" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 66 'icmp' 'icmp_ln289_5' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node select_ln289_2)   --->   "%or_ln289_2 = or i1 %icmp_ln289_5, i1 %icmp_ln289_4" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 67 'or' 'or_ln289_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 68 [1/2] (2.78ns)   --->   "%tmp_9 = fcmp_ogt  i32 %t2_2, i32 0" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 68 'fcmp' 'tmp_9' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node select_ln289_2)   --->   "%and_ln289_2 = and i1 %or_ln289_2, i1 %tmp_9" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 69 'and' 'and_ln289_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 70 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln289_2 = select i1 %and_ln289_2, i32 %t2_2, i32 0" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 70 'select' 'select_ln289_2' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 71 [1/1] (0.00ns)   --->   "%outpix_addr_2 = getelementptr i32 %outpix, i64 0, i64 %zext_ln288_1" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 71 'getelementptr' 'outpix_addr_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 72 [1/1] (1.23ns)   --->   "%store_ln289 = store i32 %select_ln289_2, i5 %outpix_addr_2" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 72 'store' 'store_ln289' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_5 : [1/1] (0.57ns)   --->   Input mux for Operation 73 '%tmp_1 = fcmp_ogt  i32 %t2_3, i32 0'
ST_5 : Operation 73 [2/2] (2.20ns)   --->   "%tmp_1 = fcmp_ogt  i32 %t2_3, i32 0" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 73 'fcmp' 'tmp_1' <Predicate = true> <Delay = 2.20> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 4.46>
ST_6 : Operation 74 [1/1] (0.00ns)   --->   "%specpipeline_ln286 = specpipeline void @_ssdm_op_SpecPipeline, i32 4, i32 0, i32 0, i32 0, void @empty_85" [src/srcnn.cpp:286->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 74 'specpipeline' 'specpipeline_ln286' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 75 [1/1] (0.00ns)   --->   "%speclooptripcount_ln285 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 8, i64 8, i64 8" [src/srcnn.cpp:285->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 75 'speclooptripcount' 'speclooptripcount_ln285' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 76 [1/1] (0.00ns)   --->   "%specloopname_ln285 = specloopname void @_ssdm_op_SpecLoopName, void @empty_103" [src/srcnn.cpp:285->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 76 'specloopname' 'specloopname_ln285' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 77 [1/1] (0.00ns)   --->   "%or_ln285_2 = or i5 %trunc_ln285, i5 3" [src/srcnn.cpp:285->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 77 'or' 'or_ln285_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 78 [1/1] (0.00ns)   --->   "%zext_ln288_2 = zext i5 %or_ln285_2" [src/srcnn.cpp:288->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 78 'zext' 'zext_ln288_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 79 [1/1] (0.00ns)   --->   "%bitcast_ln289_3 = bitcast i32 %t2_3" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 79 'bitcast' 'bitcast_ln289_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 80 [1/1] (0.00ns)   --->   "%tmp_s = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln289_3, i32 23, i32 30" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 80 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 81 [1/1] (0.00ns)   --->   "%trunc_ln289_3 = trunc i32 %bitcast_ln289_3" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 81 'trunc' 'trunc_ln289_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 82 [1/1] (0.76ns)   --->   "%icmp_ln289_6 = icmp_ne  i8 %tmp_s, i8 255" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 82 'icmp' 'icmp_ln289_6' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 83 [1/1] (0.92ns)   --->   "%icmp_ln289_7 = icmp_eq  i23 %trunc_ln289_3, i23 0" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 83 'icmp' 'icmp_ln289_7' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node select_ln289_3)   --->   "%or_ln289_3 = or i1 %icmp_ln289_7, i1 %icmp_ln289_6" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 84 'or' 'or_ln289_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 85 [1/2] (2.78ns)   --->   "%tmp_1 = fcmp_ogt  i32 %t2_3, i32 0" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 85 'fcmp' 'tmp_1' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node select_ln289_3)   --->   "%and_ln289_3 = and i1 %or_ln289_3, i1 %tmp_1" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 86 'and' 'and_ln289_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 87 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln289_3 = select i1 %and_ln289_3, i32 %t2_3, i32 0" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 87 'select' 'select_ln289_3' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 88 [1/1] (0.00ns)   --->   "%outpix_addr_3 = getelementptr i32 %outpix, i64 0, i64 %zext_ln288_2" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 88 'getelementptr' 'outpix_addr_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 89 [1/1] (1.23ns)   --->   "%store_ln289 = store i32 %select_ln289_3, i5 %outpix_addr_3" [src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 89 'store' 'store_ln289' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_6 : Operation 90 [1/1] (0.00ns)   --->   "%br_ln285 = br void %for.body71.i" [src/srcnn.cpp:285->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677]   --->   Operation 90 'br' 'br_ln285' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.208ns
The critical path consists of the following:
	'alloca' operation ('n2') [6]  (0.000 ns)
	'load' operation ('n2', src/srcnn.cpp:285->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677) on local variable 'n2' [10]  (0.000 ns)
	'add' operation ('add_ln285', src/srcnn.cpp:285->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677) [79]  (0.781 ns)
	'store' operation ('store_ln285', src/srcnn.cpp:285->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677) of variable 'add_ln285', src/srcnn.cpp:285->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677 on local variable 'n2' [80]  (0.427 ns)

 <State 2>: 3.459ns
The critical path consists of the following:
	'load' operation ('t2', src/srcnn.cpp:288->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677) on array 'acc2' [22]  (0.677 ns)
	multiplexor before operation 'fcmp' with delay (0.574 ns)
'fcmp' operation ('tmp_5', src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677) [29]  (2.208 ns)

 <State 3>: 4.468ns
The critical path consists of the following:
	'fcmp' operation ('tmp_5', src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677) [29]  (2.782 ns)
	'and' operation ('and_ln289', src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677) [30]  (0.000 ns)
	'select' operation ('select_ln289', src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677) [31]  (0.449 ns)
	'store' operation ('store_ln289', src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677) of variable 'select_ln289', src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677 on array 'outpix' [33]  (1.237 ns)

 <State 4>: 4.468ns
The critical path consists of the following:
	'fcmp' operation ('tmp_7', src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677) [44]  (2.782 ns)
	'and' operation ('and_ln289_1', src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677) [45]  (0.000 ns)
	'select' operation ('select_ln289_1', src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677) [46]  (0.449 ns)
	'store' operation ('store_ln289', src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677) of variable 'select_ln289_1', src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677 on array 'outpix' [48]  (1.237 ns)

 <State 5>: 4.468ns
The critical path consists of the following:
	'fcmp' operation ('tmp_9', src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677) [59]  (2.782 ns)
	'and' operation ('and_ln289_2', src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677) [60]  (0.000 ns)
	'select' operation ('select_ln289_2', src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677) [61]  (0.449 ns)
	'store' operation ('store_ln289', src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677) of variable 'select_ln289_2', src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677 on array 'outpix' [63]  (1.237 ns)

 <State 6>: 4.468ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1', src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677) [74]  (2.782 ns)
	'and' operation ('and_ln289_3', src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677) [75]  (0.000 ns)
	'select' operation ('select_ln289_3', src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677) [76]  (0.449 ns)
	'store' operation ('store_ln289', src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677) of variable 'select_ln289_3', src/srcnn.cpp:289->src/srcnn.cpp:315->src/srcnn.cpp:691->src/srcnn.cpp:677 on array 'outpix' [78]  (1.237 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
