

================================================================
== Vitis HLS Report for 'store_tile_mm_Loop_Out_writey_proc_Pipeline_Out_writex'
================================================================
* Date:           Tue Oct 21 03:22:06 2025

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        srcnn_hls
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xck26-sfvc784-2LV-c


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                         |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |        Loop Name        |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Out_writey_Out_writex  |        ?|        ?|         8|          1|          1|     ?|       yes|
        +-------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 8


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 8
* Pipeline : 1
  Pipeline-0 : II = 1, D = 8, States = { 1 2 3 4 5 6 7 8 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.96>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%x = alloca i32 1"   --->   Operation 11 'alloca' 'x' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%y = alloca i32 1"   --->   Operation 12 'alloca' 'y' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 13 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%output_ftmap_load_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %output_ftmap_load"   --->   Operation 14 'read' 'output_ftmap_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%p_read_1 = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %p_read1"   --->   Operation 15 'read' 'p_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%p_read_2 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read2"   --->   Operation 16 'read' 'p_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%select_ln532_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %select_ln532"   --->   Operation 17 'read' 'select_ln532_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%p_read_3 = read i60 @_ssdm_op_Read.ap_auto.i60, i60 %p_read3"   --->   Operation 18 'read' 'p_read_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%bound_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %bound"   --->   Operation 19 'read' 'bound_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%p_read_4 = read i10 @_ssdm_op_Read.ap_auto.i10, i10 %p_read"   --->   Operation 20 'read' 'p_read_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i32 %outbuf, i64 666, i64 18, i64 18446744073709551615"   --->   Operation 21 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem_out, void @empty_12, i32 0, i32 0, void @empty_13, i32 0, i32 65025, void @empty_26, void @empty_10, void @empty_13, i32 16, i32 16, i32 16, i32 16, void @empty_13, void @empty_13, i32 4294967295, i32 0"   --->   Operation 22 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.42ns)   --->   "%store_ln0 = store i16 0, i16 %indvar_flatten"   --->   Operation 23 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 24 [1/1] (0.42ns)   --->   "%store_ln0 = store i8 0, i8 %y"   --->   Operation 24 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 25 [1/1] (0.42ns)   --->   "%store_ln0 = store i8 0, i8 %x"   --->   Operation 25 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 26 [1/1] (0.42ns)   --->   "%br_ln0 = br void %for.inc.i.i.i"   --->   Operation 26 'br' 'br_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%first_iter_0 = phi i1 1, void %newFuncRoot, i1 0, void %new.latch.for.inc.split.i.i.i"   --->   Operation 27 'phi' 'first_iter_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%y_1 = load i8 %y" [src/srcnn.cpp:333]   --->   Operation 28 'load' 'y_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i16 %indvar_flatten" [src/srcnn.cpp:333]   --->   Operation 29 'load' 'indvar_flatten_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln333 = zext i8 %y_1" [src/srcnn.cpp:333]   --->   Operation 30 'zext' 'zext_ln333' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.78ns)   --->   "%add_ln333 = add i10 %zext_ln333, i10 %p_read_4" [src/srcnn.cpp:333]   --->   Operation 31 'add' 'add_ln333' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i20 @_ssdm_op_BitConcatenate.i20.i10.i10, i10 %add_ln333, i10 0" [src/srcnn.cpp:333]   --->   Operation 32 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln333_1 = zext i20 %shl_ln" [src/srcnn.cpp:333]   --->   Operation 33 'zext' 'zext_ln333_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%shl_ln333_1 = bitconcatenate i12 @_ssdm_op_BitConcatenate.i12.i10.i2, i10 %add_ln333, i2 0" [src/srcnn.cpp:333]   --->   Operation 34 'bitconcatenate' 'shl_ln333_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln333_2 = zext i12 %shl_ln333_1" [src/srcnn.cpp:333]   --->   Operation 35 'zext' 'zext_ln333_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.89ns)   --->   "%sub_ln333 = sub i21 %zext_ln333_1, i21 %zext_ln333_2" [src/srcnn.cpp:333]   --->   Operation 36 'sub' 'sub_ln333' <Predicate = true> <Delay = 0.89> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.85ns)   --->   "%icmp_ln333 = icmp_eq  i16 %indvar_flatten_load, i16 %bound_read" [src/srcnn.cpp:333]   --->   Operation 37 'icmp' 'icmp_ln333' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.85ns)   --->   "%add_ln333_5 = add i16 %indvar_flatten_load, i16 1" [src/srcnn.cpp:333]   --->   Operation 38 'add' 'add_ln333_5' <Predicate = true> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%br_ln333 = br i1 %icmp_ln333, void %for.inc13.loopexit.i.i.i, void %store_tile_mm_Loop_Out_writey_proc.exit.exitStub" [src/srcnn.cpp:333]   --->   Operation 39 'br' 'br_ln333' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%x_load = load i8 %x" [src/srcnn.cpp:336]   --->   Operation 40 'load' 'x_load' <Predicate = (!icmp_ln333)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.76ns)   --->   "%add_ln333_1 = add i8 %y_1, i8 1" [src/srcnn.cpp:333]   --->   Operation 41 'add' 'add_ln333_1' <Predicate = (!icmp_ln333)> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.76ns)   --->   "%icmp_ln336 = icmp_eq  i8 %x_load, i8 %select_ln532_read" [src/srcnn.cpp:336]   --->   Operation 42 'icmp' 'icmp_ln336' <Predicate = (!icmp_ln333)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (0.28ns)   --->   "%or_ln333 = or i1 %icmp_ln336, i1 %first_iter_0" [src/srcnn.cpp:333]   --->   Operation 43 'or' 'or_ln333' <Predicate = (!icmp_ln333)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.39ns)   --->   "%select_ln333 = select i1 %icmp_ln336, i8 0, i8 %x_load" [src/srcnn.cpp:333]   --->   Operation 44 'select' 'select_ln333' <Predicate = (!icmp_ln333)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln333_3 = zext i8 %add_ln333_1" [src/srcnn.cpp:333]   --->   Operation 45 'zext' 'zext_ln333_3' <Predicate = (!icmp_ln333)> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.39ns)   --->   "%select_ln333_1 = select i1 %icmp_ln336, i8 %add_ln333_1, i8 %y_1" [src/srcnn.cpp:333]   --->   Operation 46 'select' 'select_ln333_1' <Predicate = (!icmp_ln333)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 47 [1/1] (0.78ns)   --->   "%add_ln333_2 = add i10 %zext_ln333_3, i10 %p_read_4" [src/srcnn.cpp:333]   --->   Operation 47 'add' 'add_ln333_2' <Predicate = (!icmp_ln333)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%shl_ln333_mid1 = bitconcatenate i20 @_ssdm_op_BitConcatenate.i20.i10.i10, i10 %add_ln333_2, i10 0" [src/srcnn.cpp:333]   --->   Operation 48 'bitconcatenate' 'shl_ln333_mid1' <Predicate = (!icmp_ln333)> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln333_4 = zext i20 %shl_ln333_mid1" [src/srcnn.cpp:333]   --->   Operation 49 'zext' 'zext_ln333_4' <Predicate = (!icmp_ln333)> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%shl_ln333_1_mid1 = bitconcatenate i12 @_ssdm_op_BitConcatenate.i12.i10.i2, i10 %add_ln333_2, i2 0" [src/srcnn.cpp:333]   --->   Operation 50 'bitconcatenate' 'shl_ln333_1_mid1' <Predicate = (!icmp_ln333)> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln333_5 = zext i12 %shl_ln333_1_mid1" [src/srcnn.cpp:333]   --->   Operation 51 'zext' 'zext_ln333_5' <Predicate = (!icmp_ln333)> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.89ns)   --->   "%sub_ln333_1 = sub i21 %zext_ln333_4, i21 %zext_ln333_5" [src/srcnn.cpp:333]   --->   Operation 52 'sub' 'sub_ln333_1' <Predicate = (!icmp_ln333)> <Delay = 0.89> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 53 [1/1] (0.35ns)   --->   "%select_ln333_2 = select i1 %icmp_ln336, i21 %sub_ln333_1, i21 %sub_ln333" [src/srcnn.cpp:333]   --->   Operation 53 'select' 'select_ln333_2' <Predicate = (!icmp_ln333)> <Delay = 0.35> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%sext_ln333 = sext i21 %select_ln333_2" [src/srcnn.cpp:333]   --->   Operation 54 'sext' 'sext_ln333' <Predicate = (!icmp_ln333)> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln333_3 = add i64 %sext_ln333, i64 %p_read_1" [src/srcnn.cpp:333]   --->   Operation 55 'add' 'add_ln333_3' <Predicate = (!icmp_ln333)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 56 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln333_4 = add i64 %add_ln333_3, i64 %output_ftmap_load_read" [src/srcnn.cpp:333]   --->   Operation 56 'add' 'add_ln333_4' <Predicate = (!icmp_ln333)> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%sext_ln336_mid2_v = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln333_4, i32 2, i32 63" [src/srcnn.cpp:333]   --->   Operation 57 'partselect' 'sext_ln336_mid2_v' <Predicate = (!icmp_ln333)> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln336 = zext i8 %select_ln333" [src/srcnn.cpp:336]   --->   Operation 58 'zext' 'zext_ln336' <Predicate = (!icmp_ln333)> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%br_ln336 = br i1 %or_ln333, void %for.inc.split.i.i.i, void %for.first.iter.for.inc.i.i.i" [src/srcnn.cpp:336]   --->   Operation 59 'br' 'br_ln336' <Predicate = (!icmp_ln333)> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%trunc_ln339 = trunc i60 %p_read_3" [src/srcnn.cpp:339]   --->   Operation 60 'trunc' 'trunc_ln339' <Predicate = (!icmp_ln333)> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i1.i4, i1 %trunc_ln339, i4 0" [src/srcnn.cpp:339]   --->   Operation 61 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln333)> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%trunc_ln339_1 = trunc i8 %select_ln333_1" [src/srcnn.cpp:339]   --->   Operation 62 'trunc' 'trunc_ln339_1' <Predicate = (!icmp_ln333)> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.78ns)   --->   "%add_ln339 = add i5 %tmp, i5 %trunc_ln339_1" [src/srcnn.cpp:339]   --->   Operation 63 'add' 'add_ln339' <Predicate = (!icmp_ln333)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_3 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i5.i4, i5 %add_ln339, i4 0" [src/srcnn.cpp:339]   --->   Operation 64 'bitconcatenate' 'tmp_3' <Predicate = (!icmp_ln333)> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.77ns)   --->   "%add_ln339_1 = add i9 %tmp_3, i9 %zext_ln336" [src/srcnn.cpp:339]   --->   Operation 65 'add' 'add_ln339_1' <Predicate = (!icmp_ln333)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%zext_ln339 = zext i9 %add_ln339_1" [src/srcnn.cpp:339]   --->   Operation 66 'zext' 'zext_ln339' <Predicate = (!icmp_ln333)> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%outbuf_addr = getelementptr i32 %outbuf, i64 0, i64 %zext_ln339" [src/srcnn.cpp:339]   --->   Operation 67 'getelementptr' 'outbuf_addr' <Predicate = (!icmp_ln333)> <Delay = 0.00>
ST_1 : Operation 68 [2/2] (1.23ns)   --->   "%outbuf_load = load i9 %outbuf_addr" [src/srcnn.cpp:339]   --->   Operation 68 'load' 'outbuf_load' <Predicate = (!icmp_ln333)> <Delay = 1.23> <CoreInst = "RAM_1P_BRAM">   --->   Core 90 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 512> <RAM>
ST_1 : Operation 69 [1/1] (0.76ns)   --->   "%add_ln336 = add i8 %select_ln333, i8 1" [src/srcnn.cpp:336]   --->   Operation 69 'add' 'add_ln336' <Predicate = (!icmp_ln333)> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 70 [1/1] (0.76ns)   --->   "%icmp_ln336_1 = icmp_eq  i8 %add_ln336, i8 %select_ln532_read" [src/srcnn.cpp:336]   --->   Operation 70 'icmp' 'icmp_ln336_1' <Predicate = (!icmp_ln333)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%br_ln336 = br i1 %icmp_ln336_1, void %new.latch.for.inc.split.i.i.i, void %last.iter.for.inc.split.i.i.i" [src/srcnn.cpp:336]   --->   Operation 71 'br' 'br_ln336' <Predicate = (!icmp_ln333)> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.42ns)   --->   "%store_ln336 = store i16 %add_ln333_5, i16 %indvar_flatten" [src/srcnn.cpp:336]   --->   Operation 72 'store' 'store_ln336' <Predicate = (!icmp_ln333)> <Delay = 0.42>
ST_1 : Operation 73 [1/1] (0.42ns)   --->   "%store_ln336 = store i8 %select_ln333_1, i8 %y" [src/srcnn.cpp:336]   --->   Operation 73 'store' 'store_ln336' <Predicate = (!icmp_ln333)> <Delay = 0.42>
ST_1 : Operation 74 [1/1] (0.42ns)   --->   "%store_ln336 = store i8 %add_ln336, i8 %x" [src/srcnn.cpp:336]   --->   Operation 74 'store' 'store_ln336' <Predicate = (!icmp_ln333)> <Delay = 0.42>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%br_ln336 = br void %for.inc.i.i.i" [src/srcnn.cpp:336]   --->   Operation 75 'br' 'br_ln336' <Predicate = (!icmp_ln333)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @Out_writey_Out_writex_str"   --->   Operation 76 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "%sext_ln333_1 = sext i62 %sext_ln336_mid2_v" [src/srcnn.cpp:333]   --->   Operation 77 'sext' 'sext_ln333_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%gmem_out_addr = getelementptr i32 %gmem_out, i64 %sext_ln333_1" [src/srcnn.cpp:336]   --->   Operation 78 'getelementptr' 'gmem_out_addr' <Predicate = (or_ln333)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (7.30ns)   --->   "%empty_72 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i32, i32 %gmem_out_addr, i32 %p_read_2" [src/srcnn.cpp:336]   --->   Operation 79 'writereq' 'empty_72' <Predicate = (or_ln333)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%br_ln336 = br void %for.inc.split.i.i.i" [src/srcnn.cpp:336]   --->   Operation 80 'br' 'br_ln336' <Predicate = (or_ln333)> <Delay = 0.00>
ST_2 : Operation 81 [1/2] (1.23ns)   --->   "%outbuf_load = load i9 %outbuf_addr" [src/srcnn.cpp:339]   --->   Operation 81 'load' 'outbuf_load' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM_1P_BRAM">   --->   Core 90 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 512> <RAM>
ST_2 : Operation 82 [1/1] (0.00ns)   --->   "%gmem_out_addr_1 = getelementptr i32 %gmem_out, i64 %sext_ln333_1" [src/srcnn.cpp:336]   --->   Operation 82 'getelementptr' 'gmem_out_addr_1' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%specpipeline_ln338 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_13" [src/srcnn.cpp:338]   --->   Operation 83 'specpipeline' 'specpipeline_ln338' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%specloopname_ln336 = specloopname void @_ssdm_op_SpecLoopName, void @empty_3" [src/srcnn.cpp:336]   --->   Operation 84 'specloopname' 'specloopname_ln336' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%bitcast_ln339 = bitcast i32 %outbuf_load" [src/srcnn.cpp:339]   --->   Operation 85 'bitcast' 'bitcast_ln339' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (7.30ns)   --->   "%write_ln339 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_out_addr_1, i32 %bitcast_ln339, i4 15" [src/srcnn.cpp:339]   --->   Operation 86 'write' 'write_ln339' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 87 [5/5] (7.30ns)   --->   "%empty = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_out_addr_1" [src/srcnn.cpp:333]   --->   Operation 87 'writeresp' 'empty' <Predicate = (icmp_ln336_1)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 88 [4/5] (7.30ns)   --->   "%empty = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_out_addr_1" [src/srcnn.cpp:333]   --->   Operation 88 'writeresp' 'empty' <Predicate = (icmp_ln336_1)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 89 [3/5] (7.30ns)   --->   "%empty = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_out_addr_1" [src/srcnn.cpp:333]   --->   Operation 89 'writeresp' 'empty' <Predicate = (icmp_ln336_1)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 90 [2/5] (7.30ns)   --->   "%empty = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_out_addr_1" [src/srcnn.cpp:333]   --->   Operation 90 'writeresp' 'empty' <Predicate = (icmp_ln336_1)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 93 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 93 'ret' 'ret_ln0' <Predicate = (icmp_ln333)> <Delay = 0.00>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 91 [1/5] (7.30ns)   --->   "%empty = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_out_addr_1" [src/srcnn.cpp:333]   --->   Operation 91 'writeresp' 'empty' <Predicate = (icmp_ln336_1)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 92 [1/1] (0.00ns)   --->   "%br_ln336 = br void %new.latch.for.inc.split.i.i.i" [src/srcnn.cpp:336]   --->   Operation 92 'br' 'br_ln336' <Predicate = (icmp_ln336_1)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 3.960ns
The critical path consists of the following:
	'alloca' operation ('x') [10]  (0.000 ns)
	'load' operation ('x_load', src/srcnn.cpp:336) on local variable 'x' [41]  (0.000 ns)
	'icmp' operation ('icmp_ln336', src/srcnn.cpp:336) [44]  (0.765 ns)
	'select' operation ('select_ln333_1', src/srcnn.cpp:333) [48]  (0.393 ns)
	'add' operation ('add_ln339', src/srcnn.cpp:339) [73]  (0.789 ns)
	'add' operation ('add_ln339_1', src/srcnn.cpp:339) [75]  (0.776 ns)
	'getelementptr' operation ('outbuf_addr', src/srcnn.cpp:339) [77]  (0.000 ns)
	'load' operation ('outbuf_load', src/srcnn.cpp:339) on array 'outbuf' [78]  (1.237 ns)

 <State 2>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_out_addr', src/srcnn.cpp:336) [64]  (0.000 ns)
	bus request operation ('empty_72', src/srcnn.cpp:336) on port 'gmem_out' (src/srcnn.cpp:336) [65]  (7.300 ns)

 <State 3>: 7.300ns
The critical path consists of the following:
	bus write operation ('write_ln339', src/srcnn.cpp:339) on port 'gmem_out' (src/srcnn.cpp:339) [81]  (7.300 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty', src/srcnn.cpp:333) on port 'gmem_out' (src/srcnn.cpp:333) [86]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty', src/srcnn.cpp:333) on port 'gmem_out' (src/srcnn.cpp:333) [86]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty', src/srcnn.cpp:333) on port 'gmem_out' (src/srcnn.cpp:333) [86]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty', src/srcnn.cpp:333) on port 'gmem_out' (src/srcnn.cpp:333) [86]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty', src/srcnn.cpp:333) on port 'gmem_out' (src/srcnn.cpp:333) [86]  (7.300 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
