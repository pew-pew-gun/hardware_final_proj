// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_compute_tile_Pipeline_Update_linebuf32 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        zext_ln167,
        linebuf_address0,
        linebuf_ce0,
        linebuf_q0,
        linebuf_address1,
        linebuf_ce1,
        linebuf_we1,
        linebuf_d1,
        linebuf_1_address0,
        linebuf_1_ce0,
        linebuf_1_q0,
        linebuf_1_address1,
        linebuf_1_ce1,
        linebuf_1_we1,
        linebuf_1_d1,
        linebuf_2_address0,
        linebuf_2_ce0,
        linebuf_2_q0,
        linebuf_2_address1,
        linebuf_2_ce1,
        linebuf_2_we1,
        linebuf_2_d1,
        linebuf_3_address1,
        linebuf_3_ce1,
        linebuf_3_we1,
        linebuf_3_d1,
        linebuf_4_address0,
        linebuf_4_ce0,
        linebuf_4_q0,
        linebuf_4_address1,
        linebuf_4_ce1,
        linebuf_4_we1,
        linebuf_4_d1,
        linebuf_5_address0,
        linebuf_5_ce0,
        linebuf_5_q0,
        linebuf_5_address1,
        linebuf_5_ce1,
        linebuf_5_we1,
        linebuf_5_d1,
        linebuf_6_address0,
        linebuf_6_ce0,
        linebuf_6_q0,
        linebuf_6_address1,
        linebuf_6_ce1,
        linebuf_6_we1,
        linebuf_6_d1,
        linebuf_7_address1,
        linebuf_7_ce1,
        linebuf_7_we1,
        linebuf_7_d1,
        linebuf_8_address0,
        linebuf_8_ce0,
        linebuf_8_q0,
        linebuf_8_address1,
        linebuf_8_ce1,
        linebuf_8_we1,
        linebuf_8_d1,
        linebuf_9_address0,
        linebuf_9_ce0,
        linebuf_9_q0,
        linebuf_9_address1,
        linebuf_9_ce1,
        linebuf_9_we1,
        linebuf_9_d1,
        linebuf_10_address0,
        linebuf_10_ce0,
        linebuf_10_q0,
        linebuf_10_address1,
        linebuf_10_ce1,
        linebuf_10_we1,
        linebuf_10_d1,
        linebuf_11_address1,
        linebuf_11_ce1,
        linebuf_11_we1,
        linebuf_11_d1,
        linebuf_12_address0,
        linebuf_12_ce0,
        linebuf_12_q0,
        linebuf_12_address1,
        linebuf_12_ce1,
        linebuf_12_we1,
        linebuf_12_d1,
        linebuf_13_address0,
        linebuf_13_ce0,
        linebuf_13_q0,
        linebuf_13_address1,
        linebuf_13_ce1,
        linebuf_13_we1,
        linebuf_13_d1,
        linebuf_14_address0,
        linebuf_14_ce0,
        linebuf_14_q0,
        linebuf_14_address1,
        linebuf_14_ce1,
        linebuf_14_we1,
        linebuf_14_d1,
        linebuf_15_address1,
        linebuf_15_ce1,
        linebuf_15_we1,
        linebuf_15_d1,
        linebuf_16_address0,
        linebuf_16_ce0,
        linebuf_16_q0,
        linebuf_16_address1,
        linebuf_16_ce1,
        linebuf_16_we1,
        linebuf_16_d1,
        linebuf_17_address0,
        linebuf_17_ce0,
        linebuf_17_q0,
        linebuf_17_address1,
        linebuf_17_ce1,
        linebuf_17_we1,
        linebuf_17_d1,
        linebuf_18_address0,
        linebuf_18_ce0,
        linebuf_18_q0,
        linebuf_18_address1,
        linebuf_18_ce1,
        linebuf_18_we1,
        linebuf_18_d1,
        linebuf_19_address1,
        linebuf_19_ce1,
        linebuf_19_we1,
        linebuf_19_d1,
        linebuf_20_address0,
        linebuf_20_ce0,
        linebuf_20_q0,
        linebuf_20_address1,
        linebuf_20_ce1,
        linebuf_20_we1,
        linebuf_20_d1,
        linebuf_21_address0,
        linebuf_21_ce0,
        linebuf_21_q0,
        linebuf_21_address1,
        linebuf_21_ce1,
        linebuf_21_we1,
        linebuf_21_d1,
        linebuf_22_address0,
        linebuf_22_ce0,
        linebuf_22_q0,
        linebuf_22_address1,
        linebuf_22_ce1,
        linebuf_22_we1,
        linebuf_22_d1,
        linebuf_23_address1,
        linebuf_23_ce1,
        linebuf_23_we1,
        linebuf_23_d1,
        linebuf_24_address0,
        linebuf_24_ce0,
        linebuf_24_q0,
        linebuf_24_address1,
        linebuf_24_ce1,
        linebuf_24_we1,
        linebuf_24_d1,
        linebuf_25_address0,
        linebuf_25_ce0,
        linebuf_25_q0,
        linebuf_25_address1,
        linebuf_25_ce1,
        linebuf_25_we1,
        linebuf_25_d1,
        linebuf_26_address0,
        linebuf_26_ce0,
        linebuf_26_q0,
        linebuf_26_address1,
        linebuf_26_ce1,
        linebuf_26_we1,
        linebuf_26_d1,
        linebuf_27_address1,
        linebuf_27_ce1,
        linebuf_27_we1,
        linebuf_27_d1,
        linebuf_28_address0,
        linebuf_28_ce0,
        linebuf_28_q0,
        linebuf_28_address1,
        linebuf_28_ce1,
        linebuf_28_we1,
        linebuf_28_d1,
        linebuf_29_address0,
        linebuf_29_ce0,
        linebuf_29_q0,
        linebuf_29_address1,
        linebuf_29_ce1,
        linebuf_29_we1,
        linebuf_29_d1,
        linebuf_30_address0,
        linebuf_30_ce0,
        linebuf_30_q0,
        linebuf_30_address1,
        linebuf_30_ce1,
        linebuf_30_we1,
        linebuf_30_d1,
        linebuf_31_address1,
        linebuf_31_ce1,
        linebuf_31_we1,
        linebuf_31_d1,
        f2_address0,
        f2_ce0,
        f2_q0,
        f2_1_address0,
        f2_1_ce0,
        f2_1_q0,
        f2_2_address0,
        f2_2_ce0,
        f2_2_q0,
        f2_3_address0,
        f2_3_ce0,
        f2_3_q0,
        f2_4_address0,
        f2_4_ce0,
        f2_4_q0,
        f2_5_address0,
        f2_5_ce0,
        f2_5_q0,
        f2_6_address0,
        f2_6_ce0,
        f2_6_q0,
        f2_7_address0,
        f2_7_ce0,
        f2_7_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [6:0] zext_ln167;
output  [6:0] linebuf_address0;
output   linebuf_ce0;
input  [31:0] linebuf_q0;
output  [6:0] linebuf_address1;
output   linebuf_ce1;
output   linebuf_we1;
output  [31:0] linebuf_d1;
output  [6:0] linebuf_1_address0;
output   linebuf_1_ce0;
input  [31:0] linebuf_1_q0;
output  [6:0] linebuf_1_address1;
output   linebuf_1_ce1;
output   linebuf_1_we1;
output  [31:0] linebuf_1_d1;
output  [6:0] linebuf_2_address0;
output   linebuf_2_ce0;
input  [31:0] linebuf_2_q0;
output  [6:0] linebuf_2_address1;
output   linebuf_2_ce1;
output   linebuf_2_we1;
output  [31:0] linebuf_2_d1;
output  [6:0] linebuf_3_address1;
output   linebuf_3_ce1;
output   linebuf_3_we1;
output  [31:0] linebuf_3_d1;
output  [6:0] linebuf_4_address0;
output   linebuf_4_ce0;
input  [31:0] linebuf_4_q0;
output  [6:0] linebuf_4_address1;
output   linebuf_4_ce1;
output   linebuf_4_we1;
output  [31:0] linebuf_4_d1;
output  [6:0] linebuf_5_address0;
output   linebuf_5_ce0;
input  [31:0] linebuf_5_q0;
output  [6:0] linebuf_5_address1;
output   linebuf_5_ce1;
output   linebuf_5_we1;
output  [31:0] linebuf_5_d1;
output  [6:0] linebuf_6_address0;
output   linebuf_6_ce0;
input  [31:0] linebuf_6_q0;
output  [6:0] linebuf_6_address1;
output   linebuf_6_ce1;
output   linebuf_6_we1;
output  [31:0] linebuf_6_d1;
output  [6:0] linebuf_7_address1;
output   linebuf_7_ce1;
output   linebuf_7_we1;
output  [31:0] linebuf_7_d1;
output  [6:0] linebuf_8_address0;
output   linebuf_8_ce0;
input  [31:0] linebuf_8_q0;
output  [6:0] linebuf_8_address1;
output   linebuf_8_ce1;
output   linebuf_8_we1;
output  [31:0] linebuf_8_d1;
output  [6:0] linebuf_9_address0;
output   linebuf_9_ce0;
input  [31:0] linebuf_9_q0;
output  [6:0] linebuf_9_address1;
output   linebuf_9_ce1;
output   linebuf_9_we1;
output  [31:0] linebuf_9_d1;
output  [6:0] linebuf_10_address0;
output   linebuf_10_ce0;
input  [31:0] linebuf_10_q0;
output  [6:0] linebuf_10_address1;
output   linebuf_10_ce1;
output   linebuf_10_we1;
output  [31:0] linebuf_10_d1;
output  [6:0] linebuf_11_address1;
output   linebuf_11_ce1;
output   linebuf_11_we1;
output  [31:0] linebuf_11_d1;
output  [6:0] linebuf_12_address0;
output   linebuf_12_ce0;
input  [31:0] linebuf_12_q0;
output  [6:0] linebuf_12_address1;
output   linebuf_12_ce1;
output   linebuf_12_we1;
output  [31:0] linebuf_12_d1;
output  [6:0] linebuf_13_address0;
output   linebuf_13_ce0;
input  [31:0] linebuf_13_q0;
output  [6:0] linebuf_13_address1;
output   linebuf_13_ce1;
output   linebuf_13_we1;
output  [31:0] linebuf_13_d1;
output  [6:0] linebuf_14_address0;
output   linebuf_14_ce0;
input  [31:0] linebuf_14_q0;
output  [6:0] linebuf_14_address1;
output   linebuf_14_ce1;
output   linebuf_14_we1;
output  [31:0] linebuf_14_d1;
output  [6:0] linebuf_15_address1;
output   linebuf_15_ce1;
output   linebuf_15_we1;
output  [31:0] linebuf_15_d1;
output  [6:0] linebuf_16_address0;
output   linebuf_16_ce0;
input  [31:0] linebuf_16_q0;
output  [6:0] linebuf_16_address1;
output   linebuf_16_ce1;
output   linebuf_16_we1;
output  [31:0] linebuf_16_d1;
output  [6:0] linebuf_17_address0;
output   linebuf_17_ce0;
input  [31:0] linebuf_17_q0;
output  [6:0] linebuf_17_address1;
output   linebuf_17_ce1;
output   linebuf_17_we1;
output  [31:0] linebuf_17_d1;
output  [6:0] linebuf_18_address0;
output   linebuf_18_ce0;
input  [31:0] linebuf_18_q0;
output  [6:0] linebuf_18_address1;
output   linebuf_18_ce1;
output   linebuf_18_we1;
output  [31:0] linebuf_18_d1;
output  [6:0] linebuf_19_address1;
output   linebuf_19_ce1;
output   linebuf_19_we1;
output  [31:0] linebuf_19_d1;
output  [6:0] linebuf_20_address0;
output   linebuf_20_ce0;
input  [31:0] linebuf_20_q0;
output  [6:0] linebuf_20_address1;
output   linebuf_20_ce1;
output   linebuf_20_we1;
output  [31:0] linebuf_20_d1;
output  [6:0] linebuf_21_address0;
output   linebuf_21_ce0;
input  [31:0] linebuf_21_q0;
output  [6:0] linebuf_21_address1;
output   linebuf_21_ce1;
output   linebuf_21_we1;
output  [31:0] linebuf_21_d1;
output  [6:0] linebuf_22_address0;
output   linebuf_22_ce0;
input  [31:0] linebuf_22_q0;
output  [6:0] linebuf_22_address1;
output   linebuf_22_ce1;
output   linebuf_22_we1;
output  [31:0] linebuf_22_d1;
output  [6:0] linebuf_23_address1;
output   linebuf_23_ce1;
output   linebuf_23_we1;
output  [31:0] linebuf_23_d1;
output  [6:0] linebuf_24_address0;
output   linebuf_24_ce0;
input  [31:0] linebuf_24_q0;
output  [6:0] linebuf_24_address1;
output   linebuf_24_ce1;
output   linebuf_24_we1;
output  [31:0] linebuf_24_d1;
output  [6:0] linebuf_25_address0;
output   linebuf_25_ce0;
input  [31:0] linebuf_25_q0;
output  [6:0] linebuf_25_address1;
output   linebuf_25_ce1;
output   linebuf_25_we1;
output  [31:0] linebuf_25_d1;
output  [6:0] linebuf_26_address0;
output   linebuf_26_ce0;
input  [31:0] linebuf_26_q0;
output  [6:0] linebuf_26_address1;
output   linebuf_26_ce1;
output   linebuf_26_we1;
output  [31:0] linebuf_26_d1;
output  [6:0] linebuf_27_address1;
output   linebuf_27_ce1;
output   linebuf_27_we1;
output  [31:0] linebuf_27_d1;
output  [6:0] linebuf_28_address0;
output   linebuf_28_ce0;
input  [31:0] linebuf_28_q0;
output  [6:0] linebuf_28_address1;
output   linebuf_28_ce1;
output   linebuf_28_we1;
output  [31:0] linebuf_28_d1;
output  [6:0] linebuf_29_address0;
output   linebuf_29_ce0;
input  [31:0] linebuf_29_q0;
output  [6:0] linebuf_29_address1;
output   linebuf_29_ce1;
output   linebuf_29_we1;
output  [31:0] linebuf_29_d1;
output  [6:0] linebuf_30_address0;
output   linebuf_30_ce0;
input  [31:0] linebuf_30_q0;
output  [6:0] linebuf_30_address1;
output   linebuf_30_ce1;
output   linebuf_30_we1;
output  [31:0] linebuf_30_d1;
output  [6:0] linebuf_31_address1;
output   linebuf_31_ce1;
output   linebuf_31_we1;
output  [31:0] linebuf_31_d1;
output  [1:0] f2_address0;
output   f2_ce0;
input  [31:0] f2_q0;
output  [1:0] f2_1_address0;
output   f2_1_ce0;
input  [31:0] f2_1_q0;
output  [1:0] f2_2_address0;
output   f2_2_ce0;
input  [31:0] f2_2_q0;
output  [1:0] f2_3_address0;
output   f2_3_ce0;
input  [31:0] f2_3_q0;
output  [1:0] f2_4_address0;
output   f2_4_ce0;
input  [31:0] f2_4_q0;
output  [1:0] f2_5_address0;
output   f2_5_ce0;
input  [31:0] f2_5_q0;
output  [1:0] f2_6_address0;
output   f2_6_ce0;
input  [31:0] f2_6_q0;
output  [1:0] f2_7_address0;
output   f2_7_ce0;
input  [31:0] f2_7_q0;

reg ap_idle;
reg linebuf_ce0;
reg linebuf_ce1;
reg linebuf_we1;
reg linebuf_1_ce0;
reg linebuf_1_ce1;
reg linebuf_1_we1;
reg linebuf_2_ce0;
reg linebuf_2_ce1;
reg linebuf_2_we1;
reg linebuf_3_ce1;
reg linebuf_3_we1;
reg linebuf_4_ce0;
reg linebuf_4_ce1;
reg linebuf_4_we1;
reg linebuf_5_ce0;
reg linebuf_5_ce1;
reg linebuf_5_we1;
reg linebuf_6_ce0;
reg linebuf_6_ce1;
reg linebuf_6_we1;
reg linebuf_7_ce1;
reg linebuf_7_we1;
reg linebuf_8_ce0;
reg linebuf_8_ce1;
reg linebuf_8_we1;
reg linebuf_9_ce0;
reg linebuf_9_ce1;
reg linebuf_9_we1;
reg linebuf_10_ce0;
reg linebuf_10_ce1;
reg linebuf_10_we1;
reg linebuf_11_ce1;
reg linebuf_11_we1;
reg linebuf_12_ce0;
reg linebuf_12_ce1;
reg linebuf_12_we1;
reg linebuf_13_ce0;
reg linebuf_13_ce1;
reg linebuf_13_we1;
reg linebuf_14_ce0;
reg linebuf_14_ce1;
reg linebuf_14_we1;
reg linebuf_15_ce1;
reg linebuf_15_we1;
reg linebuf_16_ce0;
reg linebuf_16_ce1;
reg linebuf_16_we1;
reg linebuf_17_ce0;
reg linebuf_17_ce1;
reg linebuf_17_we1;
reg linebuf_18_ce0;
reg linebuf_18_ce1;
reg linebuf_18_we1;
reg linebuf_19_ce1;
reg linebuf_19_we1;
reg linebuf_20_ce0;
reg linebuf_20_ce1;
reg linebuf_20_we1;
reg linebuf_21_ce0;
reg linebuf_21_ce1;
reg linebuf_21_we1;
reg linebuf_22_ce0;
reg linebuf_22_ce1;
reg linebuf_22_we1;
reg linebuf_23_ce1;
reg linebuf_23_we1;
reg linebuf_24_ce0;
reg linebuf_24_ce1;
reg linebuf_24_we1;
reg linebuf_25_ce0;
reg linebuf_25_ce1;
reg linebuf_25_we1;
reg linebuf_26_ce0;
reg linebuf_26_ce1;
reg linebuf_26_we1;
reg linebuf_27_ce1;
reg linebuf_27_we1;
reg linebuf_28_ce0;
reg linebuf_28_ce1;
reg linebuf_28_we1;
reg linebuf_29_ce0;
reg linebuf_29_ce1;
reg linebuf_29_we1;
reg linebuf_30_ce0;
reg linebuf_30_ce1;
reg linebuf_30_we1;
reg linebuf_31_ce1;
reg linebuf_31_we1;
reg f2_ce0;
reg f2_1_ce0;
reg f2_2_ce0;
reg f2_3_ce0;
reg f2_4_ce0;
reg f2_5_ce0;
reg f2_6_ce0;
reg f2_7_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] tmp_fu_828_p3;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [63:0] zext_ln196_1_fu_878_p1;
reg   [63:0] zext_ln196_1_reg_927;
wire    ap_block_pp0_stage0_11001;
reg   [6:0] linebuf_addr_reg_939;
reg   [6:0] linebuf_1_addr_reg_945;
reg   [6:0] linebuf_2_addr_reg_951;
reg   [6:0] linebuf_4_addr_reg_957;
reg   [6:0] linebuf_5_addr_reg_963;
reg   [6:0] linebuf_6_addr_reg_969;
reg   [6:0] linebuf_8_addr_reg_975;
reg   [6:0] linebuf_9_addr_reg_981;
reg   [6:0] linebuf_10_addr_reg_987;
reg   [6:0] linebuf_12_addr_reg_993;
reg   [6:0] linebuf_13_addr_reg_999;
reg   [6:0] linebuf_14_addr_reg_1005;
reg   [6:0] linebuf_16_addr_reg_1011;
reg   [6:0] linebuf_17_addr_reg_1017;
reg   [6:0] linebuf_18_addr_reg_1023;
reg   [6:0] linebuf_20_addr_reg_1029;
reg   [6:0] linebuf_21_addr_reg_1035;
reg   [6:0] linebuf_22_addr_reg_1041;
reg   [6:0] linebuf_24_addr_reg_1047;
reg   [6:0] linebuf_25_addr_reg_1053;
reg   [6:0] linebuf_26_addr_reg_1059;
reg   [6:0] linebuf_28_addr_reg_1065;
reg   [6:0] linebuf_29_addr_reg_1071;
reg   [6:0] linebuf_30_addr_reg_1077;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln191_fu_846_p1;
reg   [5:0] n2_fu_130;
wire   [5:0] add_ln191_fu_906_p2;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_n2_1;
wire   [1:0] lshr_ln4_fu_836_p4;
wire   [5:0] or_ln_fu_858_p4;
wire   [6:0] zext_ln196_fu_868_p1;
wire   [6:0] add_ln196_fu_872_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

srcnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((tmp_fu_828_p3 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            n2_fu_130 <= add_ln191_fu_906_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            n2_fu_130 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_828_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_10_addr_reg_987 <= zext_ln196_1_fu_878_p1;
        linebuf_12_addr_reg_993 <= zext_ln196_1_fu_878_p1;
        linebuf_13_addr_reg_999 <= zext_ln196_1_fu_878_p1;
        linebuf_14_addr_reg_1005 <= zext_ln196_1_fu_878_p1;
        linebuf_16_addr_reg_1011 <= zext_ln196_1_fu_878_p1;
        linebuf_17_addr_reg_1017 <= zext_ln196_1_fu_878_p1;
        linebuf_18_addr_reg_1023 <= zext_ln196_1_fu_878_p1;
        linebuf_1_addr_reg_945 <= zext_ln196_1_fu_878_p1;
        linebuf_20_addr_reg_1029 <= zext_ln196_1_fu_878_p1;
        linebuf_21_addr_reg_1035 <= zext_ln196_1_fu_878_p1;
        linebuf_22_addr_reg_1041 <= zext_ln196_1_fu_878_p1;
        linebuf_24_addr_reg_1047 <= zext_ln196_1_fu_878_p1;
        linebuf_25_addr_reg_1053 <= zext_ln196_1_fu_878_p1;
        linebuf_26_addr_reg_1059 <= zext_ln196_1_fu_878_p1;
        linebuf_28_addr_reg_1065 <= zext_ln196_1_fu_878_p1;
        linebuf_29_addr_reg_1071 <= zext_ln196_1_fu_878_p1;
        linebuf_2_addr_reg_951 <= zext_ln196_1_fu_878_p1;
        linebuf_30_addr_reg_1077 <= zext_ln196_1_fu_878_p1;
        linebuf_4_addr_reg_957 <= zext_ln196_1_fu_878_p1;
        linebuf_5_addr_reg_963 <= zext_ln196_1_fu_878_p1;
        linebuf_6_addr_reg_969 <= zext_ln196_1_fu_878_p1;
        linebuf_8_addr_reg_975 <= zext_ln196_1_fu_878_p1;
        linebuf_9_addr_reg_981 <= zext_ln196_1_fu_878_p1;
        linebuf_addr_reg_939 <= zext_ln196_1_fu_878_p1;
        zext_ln196_1_reg_927[6 : 0] <= zext_ln196_1_fu_878_p1[6 : 0];
    end
end

always @ (*) begin
    if (((tmp_fu_828_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_n2_1 = 6'd0;
    end else begin
        ap_sig_allocacmp_n2_1 = n2_fu_130;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f2_1_ce0 = 1'b1;
    end else begin
        f2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f2_2_ce0 = 1'b1;
    end else begin
        f2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f2_3_ce0 = 1'b1;
    end else begin
        f2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f2_4_ce0 = 1'b1;
    end else begin
        f2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f2_5_ce0 = 1'b1;
    end else begin
        f2_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f2_6_ce0 = 1'b1;
    end else begin
        f2_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f2_7_ce0 = 1'b1;
    end else begin
        f2_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f2_ce0 = 1'b1;
    end else begin
        f2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_10_ce0 = 1'b1;
    end else begin
        linebuf_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_10_ce1 = 1'b1;
    end else begin
        linebuf_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_10_we1 = 1'b1;
    end else begin
        linebuf_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_11_ce1 = 1'b1;
    end else begin
        linebuf_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_11_we1 = 1'b1;
    end else begin
        linebuf_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_12_ce0 = 1'b1;
    end else begin
        linebuf_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_12_ce1 = 1'b1;
    end else begin
        linebuf_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_12_we1 = 1'b1;
    end else begin
        linebuf_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_13_ce0 = 1'b1;
    end else begin
        linebuf_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_13_ce1 = 1'b1;
    end else begin
        linebuf_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_13_we1 = 1'b1;
    end else begin
        linebuf_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_14_ce0 = 1'b1;
    end else begin
        linebuf_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_14_ce1 = 1'b1;
    end else begin
        linebuf_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_14_we1 = 1'b1;
    end else begin
        linebuf_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_15_ce1 = 1'b1;
    end else begin
        linebuf_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_15_we1 = 1'b1;
    end else begin
        linebuf_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_16_ce0 = 1'b1;
    end else begin
        linebuf_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_16_ce1 = 1'b1;
    end else begin
        linebuf_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_16_we1 = 1'b1;
    end else begin
        linebuf_16_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_17_ce0 = 1'b1;
    end else begin
        linebuf_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_17_ce1 = 1'b1;
    end else begin
        linebuf_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_17_we1 = 1'b1;
    end else begin
        linebuf_17_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_18_ce0 = 1'b1;
    end else begin
        linebuf_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_18_ce1 = 1'b1;
    end else begin
        linebuf_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_18_we1 = 1'b1;
    end else begin
        linebuf_18_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_19_ce1 = 1'b1;
    end else begin
        linebuf_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_19_we1 = 1'b1;
    end else begin
        linebuf_19_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_1_ce0 = 1'b1;
    end else begin
        linebuf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_1_ce1 = 1'b1;
    end else begin
        linebuf_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_1_we1 = 1'b1;
    end else begin
        linebuf_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_20_ce0 = 1'b1;
    end else begin
        linebuf_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_20_ce1 = 1'b1;
    end else begin
        linebuf_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_20_we1 = 1'b1;
    end else begin
        linebuf_20_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_21_ce0 = 1'b1;
    end else begin
        linebuf_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_21_ce1 = 1'b1;
    end else begin
        linebuf_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_21_we1 = 1'b1;
    end else begin
        linebuf_21_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_22_ce0 = 1'b1;
    end else begin
        linebuf_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_22_ce1 = 1'b1;
    end else begin
        linebuf_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_22_we1 = 1'b1;
    end else begin
        linebuf_22_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_23_ce1 = 1'b1;
    end else begin
        linebuf_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_23_we1 = 1'b1;
    end else begin
        linebuf_23_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_24_ce0 = 1'b1;
    end else begin
        linebuf_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_24_ce1 = 1'b1;
    end else begin
        linebuf_24_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_24_we1 = 1'b1;
    end else begin
        linebuf_24_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_25_ce0 = 1'b1;
    end else begin
        linebuf_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_25_ce1 = 1'b1;
    end else begin
        linebuf_25_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_25_we1 = 1'b1;
    end else begin
        linebuf_25_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_26_ce0 = 1'b1;
    end else begin
        linebuf_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_26_ce1 = 1'b1;
    end else begin
        linebuf_26_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_26_we1 = 1'b1;
    end else begin
        linebuf_26_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_27_ce1 = 1'b1;
    end else begin
        linebuf_27_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_27_we1 = 1'b1;
    end else begin
        linebuf_27_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_28_ce0 = 1'b1;
    end else begin
        linebuf_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_28_ce1 = 1'b1;
    end else begin
        linebuf_28_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_28_we1 = 1'b1;
    end else begin
        linebuf_28_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_29_ce0 = 1'b1;
    end else begin
        linebuf_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_29_ce1 = 1'b1;
    end else begin
        linebuf_29_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_29_we1 = 1'b1;
    end else begin
        linebuf_29_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_2_ce0 = 1'b1;
    end else begin
        linebuf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_2_ce1 = 1'b1;
    end else begin
        linebuf_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_2_we1 = 1'b1;
    end else begin
        linebuf_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_30_ce0 = 1'b1;
    end else begin
        linebuf_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_30_ce1 = 1'b1;
    end else begin
        linebuf_30_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_30_we1 = 1'b1;
    end else begin
        linebuf_30_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_31_ce1 = 1'b1;
    end else begin
        linebuf_31_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_31_we1 = 1'b1;
    end else begin
        linebuf_31_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_3_ce1 = 1'b1;
    end else begin
        linebuf_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_3_we1 = 1'b1;
    end else begin
        linebuf_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_4_ce0 = 1'b1;
    end else begin
        linebuf_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_4_ce1 = 1'b1;
    end else begin
        linebuf_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_4_we1 = 1'b1;
    end else begin
        linebuf_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_5_ce0 = 1'b1;
    end else begin
        linebuf_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_5_ce1 = 1'b1;
    end else begin
        linebuf_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_5_we1 = 1'b1;
    end else begin
        linebuf_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_6_ce0 = 1'b1;
    end else begin
        linebuf_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_6_ce1 = 1'b1;
    end else begin
        linebuf_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_6_we1 = 1'b1;
    end else begin
        linebuf_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_7_ce1 = 1'b1;
    end else begin
        linebuf_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_7_we1 = 1'b1;
    end else begin
        linebuf_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_8_ce0 = 1'b1;
    end else begin
        linebuf_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_8_ce1 = 1'b1;
    end else begin
        linebuf_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_8_we1 = 1'b1;
    end else begin
        linebuf_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_9_ce0 = 1'b1;
    end else begin
        linebuf_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_9_ce1 = 1'b1;
    end else begin
        linebuf_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_9_we1 = 1'b1;
    end else begin
        linebuf_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_ce0 = 1'b1;
    end else begin
        linebuf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_ce1 = 1'b1;
    end else begin
        linebuf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_we1 = 1'b1;
    end else begin
        linebuf_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln191_fu_906_p2 = (ap_sig_allocacmp_n2_1 + 6'd8);

assign add_ln196_fu_872_p2 = (zext_ln196_fu_868_p1 + zext_ln167);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign f2_1_address0 = zext_ln191_fu_846_p1;

assign f2_2_address0 = zext_ln191_fu_846_p1;

assign f2_3_address0 = zext_ln191_fu_846_p1;

assign f2_4_address0 = zext_ln191_fu_846_p1;

assign f2_5_address0 = zext_ln191_fu_846_p1;

assign f2_6_address0 = zext_ln191_fu_846_p1;

assign f2_7_address0 = zext_ln191_fu_846_p1;

assign f2_address0 = zext_ln191_fu_846_p1;

assign linebuf_10_address0 = zext_ln196_1_fu_878_p1;

assign linebuf_10_address1 = linebuf_10_addr_reg_987;

assign linebuf_10_d1 = linebuf_9_q0;

assign linebuf_11_address1 = zext_ln196_1_reg_927;

assign linebuf_11_d1 = linebuf_10_q0;

assign linebuf_12_address0 = zext_ln196_1_fu_878_p1;

assign linebuf_12_address1 = linebuf_12_addr_reg_993;

assign linebuf_12_d1 = f2_3_q0;

assign linebuf_13_address0 = zext_ln196_1_fu_878_p1;

assign linebuf_13_address1 = linebuf_13_addr_reg_999;

assign linebuf_13_d1 = linebuf_12_q0;

assign linebuf_14_address0 = zext_ln196_1_fu_878_p1;

assign linebuf_14_address1 = linebuf_14_addr_reg_1005;

assign linebuf_14_d1 = linebuf_13_q0;

assign linebuf_15_address1 = zext_ln196_1_reg_927;

assign linebuf_15_d1 = linebuf_14_q0;

assign linebuf_16_address0 = zext_ln196_1_fu_878_p1;

assign linebuf_16_address1 = linebuf_16_addr_reg_1011;

assign linebuf_16_d1 = f2_4_q0;

assign linebuf_17_address0 = zext_ln196_1_fu_878_p1;

assign linebuf_17_address1 = linebuf_17_addr_reg_1017;

assign linebuf_17_d1 = linebuf_16_q0;

assign linebuf_18_address0 = zext_ln196_1_fu_878_p1;

assign linebuf_18_address1 = linebuf_18_addr_reg_1023;

assign linebuf_18_d1 = linebuf_17_q0;

assign linebuf_19_address1 = zext_ln196_1_reg_927;

assign linebuf_19_d1 = linebuf_18_q0;

assign linebuf_1_address0 = zext_ln196_1_fu_878_p1;

assign linebuf_1_address1 = linebuf_1_addr_reg_945;

assign linebuf_1_d1 = linebuf_q0;

assign linebuf_20_address0 = zext_ln196_1_fu_878_p1;

assign linebuf_20_address1 = linebuf_20_addr_reg_1029;

assign linebuf_20_d1 = f2_5_q0;

assign linebuf_21_address0 = zext_ln196_1_fu_878_p1;

assign linebuf_21_address1 = linebuf_21_addr_reg_1035;

assign linebuf_21_d1 = linebuf_20_q0;

assign linebuf_22_address0 = zext_ln196_1_fu_878_p1;

assign linebuf_22_address1 = linebuf_22_addr_reg_1041;

assign linebuf_22_d1 = linebuf_21_q0;

assign linebuf_23_address1 = zext_ln196_1_reg_927;

assign linebuf_23_d1 = linebuf_22_q0;

assign linebuf_24_address0 = zext_ln196_1_fu_878_p1;

assign linebuf_24_address1 = linebuf_24_addr_reg_1047;

assign linebuf_24_d1 = f2_6_q0;

assign linebuf_25_address0 = zext_ln196_1_fu_878_p1;

assign linebuf_25_address1 = linebuf_25_addr_reg_1053;

assign linebuf_25_d1 = linebuf_24_q0;

assign linebuf_26_address0 = zext_ln196_1_fu_878_p1;

assign linebuf_26_address1 = linebuf_26_addr_reg_1059;

assign linebuf_26_d1 = linebuf_25_q0;

assign linebuf_27_address1 = zext_ln196_1_reg_927;

assign linebuf_27_d1 = linebuf_26_q0;

assign linebuf_28_address0 = zext_ln196_1_fu_878_p1;

assign linebuf_28_address1 = linebuf_28_addr_reg_1065;

assign linebuf_28_d1 = f2_7_q0;

assign linebuf_29_address0 = zext_ln196_1_fu_878_p1;

assign linebuf_29_address1 = linebuf_29_addr_reg_1071;

assign linebuf_29_d1 = linebuf_28_q0;

assign linebuf_2_address0 = zext_ln196_1_fu_878_p1;

assign linebuf_2_address1 = linebuf_2_addr_reg_951;

assign linebuf_2_d1 = linebuf_1_q0;

assign linebuf_30_address0 = zext_ln196_1_fu_878_p1;

assign linebuf_30_address1 = linebuf_30_addr_reg_1077;

assign linebuf_30_d1 = linebuf_29_q0;

assign linebuf_31_address1 = zext_ln196_1_reg_927;

assign linebuf_31_d1 = linebuf_30_q0;

assign linebuf_3_address1 = zext_ln196_1_reg_927;

assign linebuf_3_d1 = linebuf_2_q0;

assign linebuf_4_address0 = zext_ln196_1_fu_878_p1;

assign linebuf_4_address1 = linebuf_4_addr_reg_957;

assign linebuf_4_d1 = f2_1_q0;

assign linebuf_5_address0 = zext_ln196_1_fu_878_p1;

assign linebuf_5_address1 = linebuf_5_addr_reg_963;

assign linebuf_5_d1 = linebuf_4_q0;

assign linebuf_6_address0 = zext_ln196_1_fu_878_p1;

assign linebuf_6_address1 = linebuf_6_addr_reg_969;

assign linebuf_6_d1 = linebuf_5_q0;

assign linebuf_7_address1 = zext_ln196_1_reg_927;

assign linebuf_7_d1 = linebuf_6_q0;

assign linebuf_8_address0 = zext_ln196_1_fu_878_p1;

assign linebuf_8_address1 = linebuf_8_addr_reg_975;

assign linebuf_8_d1 = f2_2_q0;

assign linebuf_9_address0 = zext_ln196_1_fu_878_p1;

assign linebuf_9_address1 = linebuf_9_addr_reg_981;

assign linebuf_9_d1 = linebuf_8_q0;

assign linebuf_address0 = zext_ln196_1_fu_878_p1;

assign linebuf_address1 = linebuf_addr_reg_939;

assign linebuf_d1 = f2_q0;

assign lshr_ln4_fu_836_p4 = {{ap_sig_allocacmp_n2_1[4:3]}};

assign or_ln_fu_858_p4 = {{{lshr_ln4_fu_836_p4}, {lshr_ln4_fu_836_p4}}, {2'd0}};

assign tmp_fu_828_p3 = ap_sig_allocacmp_n2_1[32'd5];

assign zext_ln191_fu_846_p1 = lshr_ln4_fu_836_p4;

assign zext_ln196_1_fu_878_p1 = add_ln196_fu_872_p2;

assign zext_ln196_fu_868_p1 = or_ln_fu_858_p4;

always @ (posedge ap_clk) begin
    zext_ln196_1_reg_927[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //srcnn_compute_tile_Pipeline_Update_linebuf32
