// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_srcnn_Pipeline_CopyW2_inft (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_w2_AWVALID,
        m_axi_gmem_w2_AWREADY,
        m_axi_gmem_w2_AWADDR,
        m_axi_gmem_w2_AWID,
        m_axi_gmem_w2_AWLEN,
        m_axi_gmem_w2_AWSIZE,
        m_axi_gmem_w2_AWBURST,
        m_axi_gmem_w2_AWLOCK,
        m_axi_gmem_w2_AWCACHE,
        m_axi_gmem_w2_AWPROT,
        m_axi_gmem_w2_AWQOS,
        m_axi_gmem_w2_AWREGION,
        m_axi_gmem_w2_AWUSER,
        m_axi_gmem_w2_WVALID,
        m_axi_gmem_w2_WREADY,
        m_axi_gmem_w2_WDATA,
        m_axi_gmem_w2_WSTRB,
        m_axi_gmem_w2_WLAST,
        m_axi_gmem_w2_WID,
        m_axi_gmem_w2_WUSER,
        m_axi_gmem_w2_ARVALID,
        m_axi_gmem_w2_ARREADY,
        m_axi_gmem_w2_ARADDR,
        m_axi_gmem_w2_ARID,
        m_axi_gmem_w2_ARLEN,
        m_axi_gmem_w2_ARSIZE,
        m_axi_gmem_w2_ARBURST,
        m_axi_gmem_w2_ARLOCK,
        m_axi_gmem_w2_ARCACHE,
        m_axi_gmem_w2_ARPROT,
        m_axi_gmem_w2_ARQOS,
        m_axi_gmem_w2_ARREGION,
        m_axi_gmem_w2_ARUSER,
        m_axi_gmem_w2_RVALID,
        m_axi_gmem_w2_RREADY,
        m_axi_gmem_w2_RDATA,
        m_axi_gmem_w2_RLAST,
        m_axi_gmem_w2_RID,
        m_axi_gmem_w2_RFIFONUM,
        m_axi_gmem_w2_RUSER,
        m_axi_gmem_w2_RRESP,
        m_axi_gmem_w2_BVALID,
        m_axi_gmem_w2_BREADY,
        m_axi_gmem_w2_BRESP,
        m_axi_gmem_w2_BID,
        m_axi_gmem_w2_BUSER,
        zext_ln499_1,
        zext_ln489_1,
        sext_ln489,
        trunc_ln489_3,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_39_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_39_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_39_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_39_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_38_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_38_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_38_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_38_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_37_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_37_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_37_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_37_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_d0,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_address0,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_ce0,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_we0,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_d0,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_11_address0,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_11_ce0,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_11_we0,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_11_d0,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_address0,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_ce0,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_we0,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_d0,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_13_address0,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_13_ce0,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_13_we0,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_13_d0,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_address0,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_ce0,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_we0,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_d0,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_address0,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_ce0,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_we0,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_w2_AWVALID;
input   m_axi_gmem_w2_AWREADY;
output  [63:0] m_axi_gmem_w2_AWADDR;
output  [0:0] m_axi_gmem_w2_AWID;
output  [31:0] m_axi_gmem_w2_AWLEN;
output  [2:0] m_axi_gmem_w2_AWSIZE;
output  [1:0] m_axi_gmem_w2_AWBURST;
output  [1:0] m_axi_gmem_w2_AWLOCK;
output  [3:0] m_axi_gmem_w2_AWCACHE;
output  [2:0] m_axi_gmem_w2_AWPROT;
output  [3:0] m_axi_gmem_w2_AWQOS;
output  [3:0] m_axi_gmem_w2_AWREGION;
output  [0:0] m_axi_gmem_w2_AWUSER;
output   m_axi_gmem_w2_WVALID;
input   m_axi_gmem_w2_WREADY;
output  [31:0] m_axi_gmem_w2_WDATA;
output  [3:0] m_axi_gmem_w2_WSTRB;
output   m_axi_gmem_w2_WLAST;
output  [0:0] m_axi_gmem_w2_WID;
output  [0:0] m_axi_gmem_w2_WUSER;
output   m_axi_gmem_w2_ARVALID;
input   m_axi_gmem_w2_ARREADY;
output  [63:0] m_axi_gmem_w2_ARADDR;
output  [0:0] m_axi_gmem_w2_ARID;
output  [31:0] m_axi_gmem_w2_ARLEN;
output  [2:0] m_axi_gmem_w2_ARSIZE;
output  [1:0] m_axi_gmem_w2_ARBURST;
output  [1:0] m_axi_gmem_w2_ARLOCK;
output  [3:0] m_axi_gmem_w2_ARCACHE;
output  [2:0] m_axi_gmem_w2_ARPROT;
output  [3:0] m_axi_gmem_w2_ARQOS;
output  [3:0] m_axi_gmem_w2_ARREGION;
output  [0:0] m_axi_gmem_w2_ARUSER;
input   m_axi_gmem_w2_RVALID;
output   m_axi_gmem_w2_RREADY;
input  [31:0] m_axi_gmem_w2_RDATA;
input   m_axi_gmem_w2_RLAST;
input  [0:0] m_axi_gmem_w2_RID;
input  [8:0] m_axi_gmem_w2_RFIFONUM;
input  [0:0] m_axi_gmem_w2_RUSER;
input  [1:0] m_axi_gmem_w2_RRESP;
input   m_axi_gmem_w2_BVALID;
output   m_axi_gmem_w2_BREADY;
input  [1:0] m_axi_gmem_w2_BRESP;
input  [0:0] m_axi_gmem_w2_BID;
input  [0:0] m_axi_gmem_w2_BUSER;
input  [6:0] zext_ln499_1;
input  [10:0] zext_ln489_1;
input  [61:0] sext_ln489;
input  [3:0] trunc_ln489_3;
output  [6:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_39_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_39_ce0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_39_we0;
output  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_39_d0;
output  [6:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_ce0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_we0;
output  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_d0;
output  [6:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_ce0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_we0;
output  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_d0;
output  [6:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_ce0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_we0;
output  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_d0;
output  [6:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_ce0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_we0;
output  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_d0;
output  [6:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_ce0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_we0;
output  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_d0;
output  [6:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_38_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_38_ce0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_38_we0;
output  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_38_d0;
output  [6:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_37_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_37_ce0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_37_we0;
output  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_37_d0;
output  [6:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_ce0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_we0;
output  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_d0;
output  [6:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_ce0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_we0;
output  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_d0;
output  [6:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_address0;
output   p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_ce0;
output   p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_we0;
output  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_d0;
output  [6:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_11_address0;
output   p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_11_ce0;
output   p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_11_we0;
output  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_11_d0;
output  [6:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_address0;
output   p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_ce0;
output   p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_we0;
output  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_d0;
output  [6:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_13_address0;
output   p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_13_ce0;
output   p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_13_we0;
output  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_13_d0;
output  [6:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_address0;
output   p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_ce0;
output   p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_we0;
output  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_d0;
output  [6:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_address0;
output   p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_ce0;
output   p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_we0;
output  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_d0;

reg ap_idle;
reg m_axi_gmem_w2_ARVALID;
reg m_axi_gmem_w2_RREADY;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_39_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_39_we0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_we0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_we0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_we0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_we0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_we0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_38_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_38_we0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_37_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_37_we0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_we0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_we0;
reg p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_ce0;
reg p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_we0;
reg p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_11_ce0;
reg p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_11_we0;
reg p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_ce0;
reg p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_we0;
reg p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_13_ce0;
reg p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_13_we0;
reg p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_ce0;
reg p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_we0;
reg p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_ce0;
reg p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
reg    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln493_fu_396_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_w2_blk_n_AR;
wire    ap_block_pp0_stage0;
reg    gmem_w2_blk_n_R;
wire   [3:0] trunc_ln489_3_read_reg_479;
reg    ap_block_pp0_stage0_11001;
wire   [6:0] add_ln499_2_fu_412_p2;
reg   [6:0] add_ln499_2_reg_487;
reg   [6:0] add_ln499_2_reg_487_pp0_iter1_reg;
reg   [6:0] add_ln499_2_reg_487_pp0_iter2_reg;
reg   [6:0] add_ln499_2_reg_487_pp0_iter3_reg;
reg   [6:0] add_ln499_2_reg_487_pp0_iter4_reg;
reg   [6:0] add_ln499_2_reg_487_pp0_iter5_reg;
reg   [6:0] add_ln499_2_reg_487_pp0_iter6_reg;
reg   [6:0] add_ln499_2_reg_487_pp0_iter7_reg;
reg   [6:0] add_ln499_2_reg_487_pp0_iter8_reg;
reg   [6:0] add_ln499_2_reg_487_pp0_iter9_reg;
reg   [63:0] gmem_w2_addr_reg_492;
wire   [31:0] bitcast_ln499_fu_449_p1;
reg   [31:0] bitcast_ln499_reg_498;
wire   [63:0] zext_ln499_2_fu_453_p1;
wire  signed [63:0] sext_ln499_fu_434_p1;
reg   [6:0] i2_fu_132;
wire   [6:0] add_ln493_fu_402_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_i2_1;
wire   [11:0] zext_ln489_1_cast_fu_384_p1;
wire   [11:0] zext_ln493_fu_408_p1;
wire   [11:0] add_ln499_1_fu_418_p2;
wire   [62:0] zext_ln499_fu_424_p1;
wire  signed [62:0] sext_ln489_cast_fu_380_p1;
wire   [62:0] add_ln499_fu_428_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_done_reg = 1'b0;
end

srcnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter9_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln493_fu_396_p2 == 1'd0))) begin
            i2_fu_132 <= add_ln493_fu_402_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i2_fu_132 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln493_fu_396_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln499_2_reg_487 <= add_ln499_2_fu_412_p2;
        gmem_w2_addr_reg_492 <= sext_ln499_fu_434_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln499_2_reg_487_pp0_iter1_reg <= add_ln499_2_reg_487;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln499_2_reg_487_pp0_iter2_reg <= add_ln499_2_reg_487_pp0_iter1_reg;
        add_ln499_2_reg_487_pp0_iter3_reg <= add_ln499_2_reg_487_pp0_iter2_reg;
        add_ln499_2_reg_487_pp0_iter4_reg <= add_ln499_2_reg_487_pp0_iter3_reg;
        add_ln499_2_reg_487_pp0_iter5_reg <= add_ln499_2_reg_487_pp0_iter4_reg;
        add_ln499_2_reg_487_pp0_iter6_reg <= add_ln499_2_reg_487_pp0_iter5_reg;
        add_ln499_2_reg_487_pp0_iter7_reg <= add_ln499_2_reg_487_pp0_iter6_reg;
        add_ln499_2_reg_487_pp0_iter8_reg <= add_ln499_2_reg_487_pp0_iter7_reg;
        add_ln499_2_reg_487_pp0_iter9_reg <= add_ln499_2_reg_487_pp0_iter8_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        bitcast_ln499_reg_498 <= bitcast_ln499_fu_449_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln493_fu_396_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter9_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i2_1 = 7'd0;
    end else begin
        ap_sig_allocacmp_i2_1 = i2_fu_132;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        gmem_w2_blk_n_AR = m_axi_gmem_w2_ARREADY;
    end else begin
        gmem_w2_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        gmem_w2_blk_n_R = m_axi_gmem_w2_RVALID;
    end else begin
        gmem_w2_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem_w2_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_w2_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem_w2_RREADY = 1'b1;
    end else begin
        m_axi_gmem_w2_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_ce0 = 1'b1;
    end else begin
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln489_3_read_reg_479 == 4'd10) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_we0 = 1'b1;
    end else begin
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_11_ce0 = 1'b1;
    end else begin
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln489_3_read_reg_479 == 4'd11) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_11_we0 = 1'b1;
    end else begin
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_ce0 = 1'b1;
    end else begin
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln489_3_read_reg_479 == 4'd12) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_we0 = 1'b1;
    end else begin
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_13_ce0 = 1'b1;
    end else begin
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln489_3_read_reg_479 == 4'd13) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_13_we0 = 1'b1;
    end else begin
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_ce0 = 1'b1;
    end else begin
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln489_3_read_reg_479 == 4'd14) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_we0 = 1'b1;
    end else begin
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_ce0 = 1'b1;
    end else begin
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln489_3_read_reg_479 == 4'd15) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_we0 = 1'b1;
    end else begin
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln489_3_read_reg_479 == 4'd5) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_we0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln489_3_read_reg_479 == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_we0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln489_3_read_reg_479 == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_we0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln489_3_read_reg_479 == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_we0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln489_3_read_reg_479 == 4'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_we0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln489_3_read_reg_479 == 4'd9) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_we0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln489_3_read_reg_479 == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_we0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_37_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln489_3_read_reg_479 == 4'd7) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_37_we0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_37_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_38_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln489_3_read_reg_479 == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_38_we0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_38_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_39_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln489_3_read_reg_479 == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_39_we0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_39_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln493_fu_402_p2 = (ap_sig_allocacmp_i2_1 + 7'd1);

assign add_ln499_1_fu_418_p2 = (zext_ln489_1_cast_fu_384_p1 + zext_ln493_fu_408_p1);

assign add_ln499_2_fu_412_p2 = (zext_ln499_1 + ap_sig_allocacmp_i2_1);

assign add_ln499_fu_428_p2 = ($signed(zext_ln499_fu_424_p1) + $signed(sext_ln489_cast_fu_380_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((m_axi_gmem_w2_RVALID == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((m_axi_gmem_w2_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((m_axi_gmem_w2_RVALID == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((m_axi_gmem_w2_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter9 = (m_axi_gmem_w2_RVALID == 1'b0);
end

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln499_fu_449_p1 = m_axi_gmem_w2_RDATA;

assign icmp_ln493_fu_396_p2 = ((ap_sig_allocacmp_i2_1 == 7'd64) ? 1'b1 : 1'b0);

assign m_axi_gmem_w2_ARADDR = gmem_w2_addr_reg_492;

assign m_axi_gmem_w2_ARBURST = 2'd0;

assign m_axi_gmem_w2_ARCACHE = 4'd0;

assign m_axi_gmem_w2_ARID = 1'd0;

assign m_axi_gmem_w2_ARLEN = 32'd1;

assign m_axi_gmem_w2_ARLOCK = 2'd0;

assign m_axi_gmem_w2_ARPROT = 3'd0;

assign m_axi_gmem_w2_ARQOS = 4'd0;

assign m_axi_gmem_w2_ARREGION = 4'd0;

assign m_axi_gmem_w2_ARSIZE = 3'd0;

assign m_axi_gmem_w2_ARUSER = 1'd0;

assign m_axi_gmem_w2_AWADDR = 64'd0;

assign m_axi_gmem_w2_AWBURST = 2'd0;

assign m_axi_gmem_w2_AWCACHE = 4'd0;

assign m_axi_gmem_w2_AWID = 1'd0;

assign m_axi_gmem_w2_AWLEN = 32'd0;

assign m_axi_gmem_w2_AWLOCK = 2'd0;

assign m_axi_gmem_w2_AWPROT = 3'd0;

assign m_axi_gmem_w2_AWQOS = 4'd0;

assign m_axi_gmem_w2_AWREGION = 4'd0;

assign m_axi_gmem_w2_AWSIZE = 3'd0;

assign m_axi_gmem_w2_AWUSER = 1'd0;

assign m_axi_gmem_w2_AWVALID = 1'b0;

assign m_axi_gmem_w2_BREADY = 1'b0;

assign m_axi_gmem_w2_WDATA = 32'd0;

assign m_axi_gmem_w2_WID = 1'd0;

assign m_axi_gmem_w2_WLAST = 1'b0;

assign m_axi_gmem_w2_WSTRB = 4'd0;

assign m_axi_gmem_w2_WUSER = 1'd0;

assign m_axi_gmem_w2_WVALID = 1'b0;

assign p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_address0 = zext_ln499_2_fu_453_p1;

assign p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_d0 = bitcast_ln499_reg_498;

assign p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_11_address0 = zext_ln499_2_fu_453_p1;

assign p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_11_d0 = bitcast_ln499_reg_498;

assign p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_address0 = zext_ln499_2_fu_453_p1;

assign p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_d0 = bitcast_ln499_reg_498;

assign p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_13_address0 = zext_ln499_2_fu_453_p1;

assign p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_13_d0 = bitcast_ln499_reg_498;

assign p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_address0 = zext_ln499_2_fu_453_p1;

assign p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_d0 = bitcast_ln499_reg_498;

assign p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_address0 = zext_ln499_2_fu_453_p1;

assign p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_d0 = bitcast_ln499_reg_498;

assign sext_ln489_cast_fu_380_p1 = $signed(sext_ln489);

assign sext_ln499_fu_434_p1 = $signed(add_ln499_fu_428_p2);

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_address0 = zext_ln499_2_fu_453_p1;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_d0 = bitcast_ln499_reg_498;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_address0 = zext_ln499_2_fu_453_p1;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_d0 = bitcast_ln499_reg_498;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_address0 = zext_ln499_2_fu_453_p1;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_d0 = bitcast_ln499_reg_498;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_address0 = zext_ln499_2_fu_453_p1;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_d0 = bitcast_ln499_reg_498;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_address0 = zext_ln499_2_fu_453_p1;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_d0 = bitcast_ln499_reg_498;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_address0 = zext_ln499_2_fu_453_p1;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_d0 = bitcast_ln499_reg_498;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_address0 = zext_ln499_2_fu_453_p1;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_d0 = bitcast_ln499_reg_498;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_37_address0 = zext_ln499_2_fu_453_p1;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_37_d0 = bitcast_ln499_reg_498;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_38_address0 = zext_ln499_2_fu_453_p1;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_38_d0 = bitcast_ln499_reg_498;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_39_address0 = zext_ln499_2_fu_453_p1;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_39_d0 = bitcast_ln499_reg_498;

assign trunc_ln489_3_read_reg_479 = trunc_ln489_3;

assign zext_ln489_1_cast_fu_384_p1 = zext_ln489_1;

assign zext_ln493_fu_408_p1 = ap_sig_allocacmp_i2_1;

assign zext_ln499_2_fu_453_p1 = add_ln499_2_reg_487_pp0_iter9_reg;

assign zext_ln499_fu_424_p1 = add_ln499_1_fu_418_p2;

endmodule //srcnn_srcnn_Pipeline_CopyW2_inft
