// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_fuse_9x9_1x1_Pipeline_VITIS_LOOP_95_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        acc2_7_address0,
        acc2_7_ce0,
        acc2_7_we0,
        acc2_7_d0,
        acc2_6_address0,
        acc2_6_ce0,
        acc2_6_we0,
        acc2_6_d0,
        acc2_5_address0,
        acc2_5_ce0,
        acc2_5_we0,
        acc2_5_d0,
        acc2_4_address0,
        acc2_4_ce0,
        acc2_4_we0,
        acc2_4_d0,
        acc2_3_address0,
        acc2_3_ce0,
        acc2_3_we0,
        acc2_3_d0,
        acc2_2_address0,
        acc2_2_ce0,
        acc2_2_we0,
        acc2_2_d0,
        acc2_1_address0,
        acc2_1_ce0,
        acc2_1_we0,
        acc2_1_d0,
        acc2_address0,
        acc2_ce0,
        acc2_we0,
        acc2_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_55,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_56,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_16_s,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_24_s,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_57,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_58,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_17_s,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_25_s,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_59,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_10_s,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_18_s,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_26_s,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_60,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_b2_loc_62,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_19_s,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_27_s,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_61,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_12_s,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_20_s,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_28_s,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_62,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_13_s,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_b2_loc_63,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_29_s,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_63,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_14_s,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_22_s,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_30_s,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_64,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_15_s,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_23_s,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_b2_loc
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] acc2_7_address0;
output   acc2_7_ce0;
output   acc2_7_we0;
output  [31:0] acc2_7_d0;
output  [1:0] acc2_6_address0;
output   acc2_6_ce0;
output   acc2_6_we0;
output  [31:0] acc2_6_d0;
output  [1:0] acc2_5_address0;
output   acc2_5_ce0;
output   acc2_5_we0;
output  [31:0] acc2_5_d0;
output  [1:0] acc2_4_address0;
output   acc2_4_ce0;
output   acc2_4_we0;
output  [31:0] acc2_4_d0;
output  [1:0] acc2_3_address0;
output   acc2_3_ce0;
output   acc2_3_we0;
output  [31:0] acc2_3_d0;
output  [1:0] acc2_2_address0;
output   acc2_2_ce0;
output   acc2_2_we0;
output  [31:0] acc2_2_d0;
output  [1:0] acc2_1_address0;
output   acc2_1_ce0;
output   acc2_1_we0;
output  [31:0] acc2_1_d0;
output  [1:0] acc2_address0;
output   acc2_ce0;
output   acc2_we0;
output  [31:0] acc2_d0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_55;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_56;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_16_s;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_24_s;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_57;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_58;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_17_s;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_25_s;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_59;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_10_s;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_18_s;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_26_s;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_60;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_b2_loc_62;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_19_s;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_27_s;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_61;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_12_s;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_20_s;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_28_s;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_62;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_13_s;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_b2_loc_63;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_29_s;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_63;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_14_s;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_22_s;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_30_s;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_64;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_15_s;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_23_s;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_b2_loc;

reg ap_idle;
reg acc2_7_ce0;
reg acc2_7_we0;
reg acc2_6_ce0;
reg acc2_6_we0;
reg acc2_5_ce0;
reg acc2_5_we0;
reg acc2_4_ce0;
reg acc2_4_we0;
reg acc2_3_ce0;
reg acc2_3_we0;
reg acc2_2_ce0;
reg acc2_2_we0;
reg acc2_1_ce0;
reg acc2_1_we0;
reg acc2_ce0;
reg acc2_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] tmp_fu_428_p3;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [63:0] zext_ln95_fu_450_p1;
reg   [5:0] n2_fu_120;
wire   [5:0] add_ln95_fu_918_p2;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_n2_1;
wire   [31:0] tmp_i_i_fu_462_p27;
wire   [31:0] tmp_1_i_i_fu_519_p27;
wire   [31:0] tmp_2_i_i_fu_576_p27;
wire   [31:0] tmp_3_i_i_fu_633_p27;
wire   [31:0] tmp_4_i_i_fu_690_p27;
wire   [31:0] tmp_5_i_i_fu_747_p27;
wire   [31:0] tmp_6_i_i_fu_804_p27;
wire   [31:0] tmp_7_i_i_fu_861_p27;
wire   [1:0] lshr_ln_fu_440_p4;
wire   [4:0] trunc_ln95_fu_436_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_done_reg = 1'b0;
end

srcnn_mux_25_5_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_25_5_32_1_1_U261(
    .din0(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_55),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd0),
    .din5(32'd0),
    .din6(32'd0),
    .din7(32'd0),
    .din8(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_56),
    .din9(32'd0),
    .din10(32'd0),
    .din11(32'd0),
    .din12(32'd0),
    .din13(32'd0),
    .din14(32'd0),
    .din15(32'd0),
    .din16(p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_16_s),
    .din17(32'd0),
    .din18(32'd0),
    .din19(32'd0),
    .din20(32'd0),
    .din21(32'd0),
    .din22(32'd0),
    .din23(32'd0),
    .din24(p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_24_s),
    .din25(trunc_ln95_fu_436_p1),
    .dout(tmp_i_i_fu_462_p27)
);

srcnn_mux_25_5_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_25_5_32_1_1_U262(
    .din0(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_57),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd0),
    .din5(32'd0),
    .din6(32'd0),
    .din7(32'd0),
    .din8(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_58),
    .din9(32'd0),
    .din10(32'd0),
    .din11(32'd0),
    .din12(32'd0),
    .din13(32'd0),
    .din14(32'd0),
    .din15(32'd0),
    .din16(p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_17_s),
    .din17(32'd0),
    .din18(32'd0),
    .din19(32'd0),
    .din20(32'd0),
    .din21(32'd0),
    .din22(32'd0),
    .din23(32'd0),
    .din24(p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_25_s),
    .din25(trunc_ln95_fu_436_p1),
    .dout(tmp_1_i_i_fu_519_p27)
);

srcnn_mux_25_5_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_25_5_32_1_1_U263(
    .din0(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_59),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd0),
    .din5(32'd0),
    .din6(32'd0),
    .din7(32'd0),
    .din8(p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_10_s),
    .din9(32'd0),
    .din10(32'd0),
    .din11(32'd0),
    .din12(32'd0),
    .din13(32'd0),
    .din14(32'd0),
    .din15(32'd0),
    .din16(p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_18_s),
    .din17(32'd0),
    .din18(32'd0),
    .din19(32'd0),
    .din20(32'd0),
    .din21(32'd0),
    .din22(32'd0),
    .din23(32'd0),
    .din24(p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_26_s),
    .din25(trunc_ln95_fu_436_p1),
    .dout(tmp_2_i_i_fu_576_p27)
);

srcnn_mux_25_5_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_25_5_32_1_1_U264(
    .din0(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_60),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd0),
    .din5(32'd0),
    .din6(32'd0),
    .din7(32'd0),
    .din8(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_b2_loc_62),
    .din9(32'd0),
    .din10(32'd0),
    .din11(32'd0),
    .din12(32'd0),
    .din13(32'd0),
    .din14(32'd0),
    .din15(32'd0),
    .din16(p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_19_s),
    .din17(32'd0),
    .din18(32'd0),
    .din19(32'd0),
    .din20(32'd0),
    .din21(32'd0),
    .din22(32'd0),
    .din23(32'd0),
    .din24(p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_27_s),
    .din25(trunc_ln95_fu_436_p1),
    .dout(tmp_3_i_i_fu_633_p27)
);

srcnn_mux_25_5_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_25_5_32_1_1_U265(
    .din0(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_61),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd0),
    .din5(32'd0),
    .din6(32'd0),
    .din7(32'd0),
    .din8(p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_12_s),
    .din9(32'd0),
    .din10(32'd0),
    .din11(32'd0),
    .din12(32'd0),
    .din13(32'd0),
    .din14(32'd0),
    .din15(32'd0),
    .din16(p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_20_s),
    .din17(32'd0),
    .din18(32'd0),
    .din19(32'd0),
    .din20(32'd0),
    .din21(32'd0),
    .din22(32'd0),
    .din23(32'd0),
    .din24(p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_28_s),
    .din25(trunc_ln95_fu_436_p1),
    .dout(tmp_4_i_i_fu_690_p27)
);

srcnn_mux_25_5_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_25_5_32_1_1_U266(
    .din0(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_62),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd0),
    .din5(32'd0),
    .din6(32'd0),
    .din7(32'd0),
    .din8(p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_13_s),
    .din9(32'd0),
    .din10(32'd0),
    .din11(32'd0),
    .din12(32'd0),
    .din13(32'd0),
    .din14(32'd0),
    .din15(32'd0),
    .din16(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_b2_loc_63),
    .din17(32'd0),
    .din18(32'd0),
    .din19(32'd0),
    .din20(32'd0),
    .din21(32'd0),
    .din22(32'd0),
    .din23(32'd0),
    .din24(p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_29_s),
    .din25(trunc_ln95_fu_436_p1),
    .dout(tmp_5_i_i_fu_747_p27)
);

srcnn_mux_25_5_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_25_5_32_1_1_U267(
    .din0(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_63),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd0),
    .din5(32'd0),
    .din6(32'd0),
    .din7(32'd0),
    .din8(p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_14_s),
    .din9(32'd0),
    .din10(32'd0),
    .din11(32'd0),
    .din12(32'd0),
    .din13(32'd0),
    .din14(32'd0),
    .din15(32'd0),
    .din16(p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_22_s),
    .din17(32'd0),
    .din18(32'd0),
    .din19(32'd0),
    .din20(32'd0),
    .din21(32'd0),
    .din22(32'd0),
    .din23(32'd0),
    .din24(p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_30_s),
    .din25(trunc_ln95_fu_436_p1),
    .dout(tmp_6_i_i_fu_804_p27)
);

srcnn_mux_25_5_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_25_5_32_1_1_U268(
    .din0(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_64),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd0),
    .din5(32'd0),
    .din6(32'd0),
    .din7(32'd0),
    .din8(p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_15_s),
    .din9(32'd0),
    .din10(32'd0),
    .din11(32'd0),
    .din12(32'd0),
    .din13(32'd0),
    .din14(32'd0),
    .din15(32'd0),
    .din16(p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_23_s),
    .din17(32'd0),
    .din18(32'd0),
    .din19(32'd0),
    .din20(32'd0),
    .din21(32'd0),
    .din22(32'd0),
    .din23(32'd0),
    .din24(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_b2_loc),
    .din25(trunc_ln95_fu_436_p1),
    .dout(tmp_7_i_i_fu_861_p27)
);

srcnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((tmp_fu_428_p3 == 1'd0)) begin
            n2_fu_120 <= add_ln95_fu_918_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            n2_fu_120 <= 6'd0;
        end
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_1_ce0 = 1'b1;
    end else begin
        acc2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_428_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_1_we0 = 1'b1;
    end else begin
        acc2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_2_ce0 = 1'b1;
    end else begin
        acc2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_428_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_2_we0 = 1'b1;
    end else begin
        acc2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_3_ce0 = 1'b1;
    end else begin
        acc2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_428_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_3_we0 = 1'b1;
    end else begin
        acc2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_4_ce0 = 1'b1;
    end else begin
        acc2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_428_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_4_we0 = 1'b1;
    end else begin
        acc2_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_5_ce0 = 1'b1;
    end else begin
        acc2_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_428_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_5_we0 = 1'b1;
    end else begin
        acc2_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_6_ce0 = 1'b1;
    end else begin
        acc2_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_428_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_6_we0 = 1'b1;
    end else begin
        acc2_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_7_ce0 = 1'b1;
    end else begin
        acc2_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_428_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_7_we0 = 1'b1;
    end else begin
        acc2_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_ce0 = 1'b1;
    end else begin
        acc2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_428_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_we0 = 1'b1;
    end else begin
        acc2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_428_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_n2_1 = 6'd0;
    end else begin
        ap_sig_allocacmp_n2_1 = n2_fu_120;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc2_1_address0 = zext_ln95_fu_450_p1;

assign acc2_1_d0 = tmp_1_i_i_fu_519_p27;

assign acc2_2_address0 = zext_ln95_fu_450_p1;

assign acc2_2_d0 = tmp_2_i_i_fu_576_p27;

assign acc2_3_address0 = zext_ln95_fu_450_p1;

assign acc2_3_d0 = tmp_3_i_i_fu_633_p27;

assign acc2_4_address0 = zext_ln95_fu_450_p1;

assign acc2_4_d0 = tmp_4_i_i_fu_690_p27;

assign acc2_5_address0 = zext_ln95_fu_450_p1;

assign acc2_5_d0 = tmp_5_i_i_fu_747_p27;

assign acc2_6_address0 = zext_ln95_fu_450_p1;

assign acc2_6_d0 = tmp_6_i_i_fu_804_p27;

assign acc2_7_address0 = zext_ln95_fu_450_p1;

assign acc2_7_d0 = tmp_7_i_i_fu_861_p27;

assign acc2_address0 = zext_ln95_fu_450_p1;

assign acc2_d0 = tmp_i_i_fu_462_p27;

assign add_ln95_fu_918_p2 = (ap_sig_allocacmp_n2_1 + 6'd8);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign lshr_ln_fu_440_p4 = {{ap_sig_allocacmp_n2_1[4:3]}};

assign tmp_fu_428_p3 = ap_sig_allocacmp_n2_1[32'd5];

assign trunc_ln95_fu_436_p1 = ap_sig_allocacmp_n2_1[4:0];

assign zext_ln95_fu_450_p1 = lshr_ln_fu_440_p4;

endmodule //srcnn_fuse_9x9_1x1_Pipeline_VITIS_LOOP_95_1
