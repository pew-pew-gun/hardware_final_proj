// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_compute_tile_Pipeline_Conv1_ky (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        add_ln172,
        y0_cast_i_i,
        tmp_24_i_i,
        tmp_25_i_i,
        tmp_26_i_i,
        tmp_27_i_i,
        tmp_28_i_i,
        tmp_29_i_i,
        tmp_30_i_i,
        tmp_31_i_i,
        tmp_32_i_i,
        tmp_33_i_i,
        tmp_34_i_i,
        tmp_35_i_i,
        tmp_36_i_i,
        tmp_37_i_i,
        tmp_38_i_i,
        tmp_39_i_i,
        tmp_40_i_i,
        tmp_41_i_i,
        tmp_42_i_i,
        tmp_43_i_i,
        tmp_44_i_i,
        tmp_45_i_i,
        tmp_46_i_i,
        tmp_47_i_i,
        tmp_48_i_i,
        tmp_49_i_i,
        tmp_22_i_i,
        tmp_23_i_i,
        tmp_52_i_i,
        tmp_53_i_i,
        tmp_54_i_i,
        tmp_55_i_i,
        tmp_56_i_i,
        tmp_57_i_i,
        tmp_58_i_i,
        tmp_59_i_i,
        tmp_60_i_i,
        tmp_61_i_i,
        tmp_62_i_i,
        tmp_63_i_i,
        tmp_64_i_i,
        tmp_65_i_i,
        tmp_66_i_i,
        tmp_67_i_i,
        tmp_68_i_i,
        tmp_69_i_i,
        tmp_70_i_i,
        tmp_71_i_i,
        tmp_72_i_i,
        tmp_73_i_i,
        tmp_74_i_i,
        tmp_75_i_i,
        tmp_76_i_i,
        tmp_77_i_i,
        tmp_50_i_i,
        tmp_51_i_i,
        tmp_80_i_i,
        tmp_81_i_i,
        tmp_82_i_i,
        tmp_83_i_i,
        tmp_84_i_i,
        tmp_85_i_i,
        tmp_86_i_i,
        tmp_87_i_i,
        tmp_88_i_i,
        tmp_89_i_i,
        tmp_90_i_i,
        tmp_91_i_i,
        tmp_92_i_i,
        tmp_93_i_i,
        tmp_94_i_i,
        tmp_95_i_i,
        tmp_96_i_i,
        tmp_97_i_i,
        tmp_98_i_i,
        tmp_99_i_i,
        tmp_100_i_i,
        tmp_101_i_i,
        tmp_102_i_i,
        tmp_103_i_i,
        tmp_104_i_i,
        tmp_105_i_i,
        tmp_78_i_i,
        tmp_79_i_i,
        tmp_108_i_i,
        tmp_109_i_i,
        tmp_110_i_i,
        tmp_111_i_i,
        tmp_112_i_i,
        tmp_113_i_i,
        tmp_114_i_i,
        tmp_115_i_i,
        tmp_116_i_i,
        tmp_117_i_i,
        tmp_118_i_i,
        tmp_119_i_i,
        tmp_120_i_i,
        tmp_121_i_i,
        tmp_122_i_i,
        tmp_123_i_i,
        tmp_124_i_i,
        tmp_125_i_i,
        tmp_126_i_i,
        tmp_127_i_i,
        tmp_128_i_i,
        tmp_129_i_i,
        tmp_130_i_i,
        tmp_131_i_i,
        tmp_132_i_i,
        tmp_133_i_i,
        tmp_106_i_i,
        tmp_107_i_i,
        tmp_136_i_i,
        tmp_137_i_i,
        tmp_138_i_i,
        tmp_139_i_i,
        tmp_140_i_i,
        tmp_141_i_i,
        tmp_142_i_i,
        tmp_143_i_i,
        tmp_144_i_i,
        tmp_145_i_i,
        tmp_146_i_i,
        tmp_147_i_i,
        tmp_148_i_i,
        tmp_149_i_i,
        tmp_150_i_i,
        tmp_151_i_i,
        tmp_152_i_i,
        tmp_153_i_i,
        tmp_154_i_i,
        tmp_155_i_i,
        tmp_156_i_i,
        tmp_157_i_i,
        tmp_158_i_i,
        tmp_159_i_i,
        tmp_160_i_i,
        tmp_161_i_i,
        tmp_134_i_i,
        tmp_135_i_i,
        tmp_164_i_i,
        tmp_165_i_i,
        tmp_166_i_i,
        tmp_167_i_i,
        tmp_168_i_i,
        tmp_169_i_i,
        tmp_170_i_i,
        tmp_171_i_i,
        tmp_172_i_i,
        tmp_173_i_i,
        tmp_174_i_i,
        tmp_175_i_i,
        tmp_176_i_i,
        tmp_177_i_i,
        tmp_178_i_i,
        tmp_179_i_i,
        tmp_180_i_i,
        tmp_181_i_i,
        tmp_182_i_i,
        tmp_183_i_i,
        tmp_184_i_i,
        tmp_185_i_i,
        tmp_186_i_i,
        tmp_187_i_i,
        tmp_188_i_i,
        tmp_189_i_i,
        tmp_162_i_i,
        tmp_163_i_i,
        tmp_192_i_i,
        tmp_193_i_i,
        tmp_194_i_i,
        tmp_195_i_i,
        tmp_196_i_i,
        tmp_197_i_i,
        tmp_198_i_i,
        tmp_199_i_i,
        tmp_200_i_i,
        tmp_201_i_i,
        tmp_202_i_i,
        tmp_203_i_i,
        tmp_204_i_i,
        tmp_205_i_i,
        tmp_206_i_i,
        tmp_207_i_i,
        tmp_208_i_i,
        tmp_209_i_i,
        tmp_210_i_i,
        tmp_211_i_i,
        tmp_212_i_i,
        tmp_213_i_i,
        tmp_214_i_i,
        tmp_215_i_i,
        tmp_216_i_i,
        tmp_217_i_i,
        tmp_190_i_i,
        tmp_191_i_i,
        tmp_220_i_i,
        tmp_221_i_i,
        tmp_222_i_i,
        tmp_223_i_i,
        tmp_224_i_i,
        tmp_225_i_i,
        tmp_226_i_i,
        tmp_227_i_i,
        tmp_228_i_i,
        tmp_229_i_i,
        tmp_230_i_i,
        tmp_231_i_i,
        tmp_232_i_i,
        tmp_233_i_i,
        tmp_234_i_i,
        tmp_235_i_i,
        tmp_236_i_i,
        tmp_237_i_i,
        tmp_238_i_i,
        tmp_239_i_i,
        tmp_240_i_i,
        tmp_241_i_i,
        tmp_242_i_i,
        tmp_243_i_i,
        tmp_244_i_i,
        tmp_245_i_i,
        tmp_218_i_i,
        tmp_219_i_i,
        tmp_248_i_i,
        tmp_249_i_i,
        tmp_250_i_i,
        tmp_251_i_i,
        tmp_252_i_i,
        tmp_253_i_i,
        tmp_254_i_i,
        tmp_255_i_i,
        tmp_256_i_i,
        tmp_257_i_i,
        tmp_258_i_i,
        tmp_259_i_i,
        tmp_260_i_i,
        tmp_261_i_i,
        tmp_262_i_i,
        tmp_263_i_i,
        tmp_264_i_i,
        tmp_265_i_i,
        tmp_266_i_i,
        tmp_267_i_i,
        tmp_268_i_i,
        tmp_269_i_i,
        tmp_270_i_i,
        tmp_271_i_i,
        tmp_272_i_i,
        tmp_273_i_i,
        tmp_246_i_i,
        tmp_247_i_i,
        add51_8250_i_i_out,
        add51_8250_i_i_out_ap_vld,
        add51_7249_i_i_out,
        add51_7249_i_i_out_ap_vld,
        add51_6248_i_i_out,
        add51_6248_i_i_out_ap_vld,
        add51_5247_i_i_out,
        add51_5247_i_i_out_ap_vld,
        add51_4246_i_i_out,
        add51_4246_i_i_out_ap_vld,
        add51_3245_i_i_out,
        add51_3245_i_i_out_ap_vld,
        add51_2244_i_i_out,
        add51_2244_i_i_out_ap_vld,
        add51_1243_i_i_out,
        add51_1243_i_i_out_ap_vld,
        add51242_i_i_out,
        add51242_i_i_out_ap_vld,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_q0,
        grp_fu_21203_p_din0,
        grp_fu_21203_p_din1,
        grp_fu_21203_p_opcode,
        grp_fu_21203_p_dout0,
        grp_fu_21203_p_ce,
        grp_fu_21207_p_din0,
        grp_fu_21207_p_din1,
        grp_fu_21207_p_opcode,
        grp_fu_21207_p_dout0,
        grp_fu_21207_p_ce,
        grp_fu_21211_p_din0,
        grp_fu_21211_p_din1,
        grp_fu_21211_p_opcode,
        grp_fu_21211_p_dout0,
        grp_fu_21211_p_ce,
        grp_fu_51944_p_din0,
        grp_fu_51944_p_din1,
        grp_fu_51944_p_dout0,
        grp_fu_51944_p_ce,
        grp_fu_51948_p_din0,
        grp_fu_51948_p_din1,
        grp_fu_51948_p_dout0,
        grp_fu_51948_p_ce,
        grp_fu_51952_p_din0,
        grp_fu_51952_p_din1,
        grp_fu_51952_p_dout0,
        grp_fu_51952_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [10:0] add_ln172;
input  [4:0] y0_cast_i_i;
input  [31:0] tmp_24_i_i;
input  [31:0] tmp_25_i_i;
input  [31:0] tmp_26_i_i;
input  [31:0] tmp_27_i_i;
input  [31:0] tmp_28_i_i;
input  [31:0] tmp_29_i_i;
input  [31:0] tmp_30_i_i;
input  [31:0] tmp_31_i_i;
input  [31:0] tmp_32_i_i;
input  [31:0] tmp_33_i_i;
input  [31:0] tmp_34_i_i;
input  [31:0] tmp_35_i_i;
input  [31:0] tmp_36_i_i;
input  [31:0] tmp_37_i_i;
input  [31:0] tmp_38_i_i;
input  [31:0] tmp_39_i_i;
input  [31:0] tmp_40_i_i;
input  [31:0] tmp_41_i_i;
input  [31:0] tmp_42_i_i;
input  [31:0] tmp_43_i_i;
input  [31:0] tmp_44_i_i;
input  [31:0] tmp_45_i_i;
input  [31:0] tmp_46_i_i;
input  [31:0] tmp_47_i_i;
input  [31:0] tmp_48_i_i;
input  [31:0] tmp_49_i_i;
input  [31:0] tmp_22_i_i;
input  [31:0] tmp_23_i_i;
input  [31:0] tmp_52_i_i;
input  [31:0] tmp_53_i_i;
input  [31:0] tmp_54_i_i;
input  [31:0] tmp_55_i_i;
input  [31:0] tmp_56_i_i;
input  [31:0] tmp_57_i_i;
input  [31:0] tmp_58_i_i;
input  [31:0] tmp_59_i_i;
input  [31:0] tmp_60_i_i;
input  [31:0] tmp_61_i_i;
input  [31:0] tmp_62_i_i;
input  [31:0] tmp_63_i_i;
input  [31:0] tmp_64_i_i;
input  [31:0] tmp_65_i_i;
input  [31:0] tmp_66_i_i;
input  [31:0] tmp_67_i_i;
input  [31:0] tmp_68_i_i;
input  [31:0] tmp_69_i_i;
input  [31:0] tmp_70_i_i;
input  [31:0] tmp_71_i_i;
input  [31:0] tmp_72_i_i;
input  [31:0] tmp_73_i_i;
input  [31:0] tmp_74_i_i;
input  [31:0] tmp_75_i_i;
input  [31:0] tmp_76_i_i;
input  [31:0] tmp_77_i_i;
input  [31:0] tmp_50_i_i;
input  [31:0] tmp_51_i_i;
input  [31:0] tmp_80_i_i;
input  [31:0] tmp_81_i_i;
input  [31:0] tmp_82_i_i;
input  [31:0] tmp_83_i_i;
input  [31:0] tmp_84_i_i;
input  [31:0] tmp_85_i_i;
input  [31:0] tmp_86_i_i;
input  [31:0] tmp_87_i_i;
input  [31:0] tmp_88_i_i;
input  [31:0] tmp_89_i_i;
input  [31:0] tmp_90_i_i;
input  [31:0] tmp_91_i_i;
input  [31:0] tmp_92_i_i;
input  [31:0] tmp_93_i_i;
input  [31:0] tmp_94_i_i;
input  [31:0] tmp_95_i_i;
input  [31:0] tmp_96_i_i;
input  [31:0] tmp_97_i_i;
input  [31:0] tmp_98_i_i;
input  [31:0] tmp_99_i_i;
input  [31:0] tmp_100_i_i;
input  [31:0] tmp_101_i_i;
input  [31:0] tmp_102_i_i;
input  [31:0] tmp_103_i_i;
input  [31:0] tmp_104_i_i;
input  [31:0] tmp_105_i_i;
input  [31:0] tmp_78_i_i;
input  [31:0] tmp_79_i_i;
input  [31:0] tmp_108_i_i;
input  [31:0] tmp_109_i_i;
input  [31:0] tmp_110_i_i;
input  [31:0] tmp_111_i_i;
input  [31:0] tmp_112_i_i;
input  [31:0] tmp_113_i_i;
input  [31:0] tmp_114_i_i;
input  [31:0] tmp_115_i_i;
input  [31:0] tmp_116_i_i;
input  [31:0] tmp_117_i_i;
input  [31:0] tmp_118_i_i;
input  [31:0] tmp_119_i_i;
input  [31:0] tmp_120_i_i;
input  [31:0] tmp_121_i_i;
input  [31:0] tmp_122_i_i;
input  [31:0] tmp_123_i_i;
input  [31:0] tmp_124_i_i;
input  [31:0] tmp_125_i_i;
input  [31:0] tmp_126_i_i;
input  [31:0] tmp_127_i_i;
input  [31:0] tmp_128_i_i;
input  [31:0] tmp_129_i_i;
input  [31:0] tmp_130_i_i;
input  [31:0] tmp_131_i_i;
input  [31:0] tmp_132_i_i;
input  [31:0] tmp_133_i_i;
input  [31:0] tmp_106_i_i;
input  [31:0] tmp_107_i_i;
input  [31:0] tmp_136_i_i;
input  [31:0] tmp_137_i_i;
input  [31:0] tmp_138_i_i;
input  [31:0] tmp_139_i_i;
input  [31:0] tmp_140_i_i;
input  [31:0] tmp_141_i_i;
input  [31:0] tmp_142_i_i;
input  [31:0] tmp_143_i_i;
input  [31:0] tmp_144_i_i;
input  [31:0] tmp_145_i_i;
input  [31:0] tmp_146_i_i;
input  [31:0] tmp_147_i_i;
input  [31:0] tmp_148_i_i;
input  [31:0] tmp_149_i_i;
input  [31:0] tmp_150_i_i;
input  [31:0] tmp_151_i_i;
input  [31:0] tmp_152_i_i;
input  [31:0] tmp_153_i_i;
input  [31:0] tmp_154_i_i;
input  [31:0] tmp_155_i_i;
input  [31:0] tmp_156_i_i;
input  [31:0] tmp_157_i_i;
input  [31:0] tmp_158_i_i;
input  [31:0] tmp_159_i_i;
input  [31:0] tmp_160_i_i;
input  [31:0] tmp_161_i_i;
input  [31:0] tmp_134_i_i;
input  [31:0] tmp_135_i_i;
input  [31:0] tmp_164_i_i;
input  [31:0] tmp_165_i_i;
input  [31:0] tmp_166_i_i;
input  [31:0] tmp_167_i_i;
input  [31:0] tmp_168_i_i;
input  [31:0] tmp_169_i_i;
input  [31:0] tmp_170_i_i;
input  [31:0] tmp_171_i_i;
input  [31:0] tmp_172_i_i;
input  [31:0] tmp_173_i_i;
input  [31:0] tmp_174_i_i;
input  [31:0] tmp_175_i_i;
input  [31:0] tmp_176_i_i;
input  [31:0] tmp_177_i_i;
input  [31:0] tmp_178_i_i;
input  [31:0] tmp_179_i_i;
input  [31:0] tmp_180_i_i;
input  [31:0] tmp_181_i_i;
input  [31:0] tmp_182_i_i;
input  [31:0] tmp_183_i_i;
input  [31:0] tmp_184_i_i;
input  [31:0] tmp_185_i_i;
input  [31:0] tmp_186_i_i;
input  [31:0] tmp_187_i_i;
input  [31:0] tmp_188_i_i;
input  [31:0] tmp_189_i_i;
input  [31:0] tmp_162_i_i;
input  [31:0] tmp_163_i_i;
input  [31:0] tmp_192_i_i;
input  [31:0] tmp_193_i_i;
input  [31:0] tmp_194_i_i;
input  [31:0] tmp_195_i_i;
input  [31:0] tmp_196_i_i;
input  [31:0] tmp_197_i_i;
input  [31:0] tmp_198_i_i;
input  [31:0] tmp_199_i_i;
input  [31:0] tmp_200_i_i;
input  [31:0] tmp_201_i_i;
input  [31:0] tmp_202_i_i;
input  [31:0] tmp_203_i_i;
input  [31:0] tmp_204_i_i;
input  [31:0] tmp_205_i_i;
input  [31:0] tmp_206_i_i;
input  [31:0] tmp_207_i_i;
input  [31:0] tmp_208_i_i;
input  [31:0] tmp_209_i_i;
input  [31:0] tmp_210_i_i;
input  [31:0] tmp_211_i_i;
input  [31:0] tmp_212_i_i;
input  [31:0] tmp_213_i_i;
input  [31:0] tmp_214_i_i;
input  [31:0] tmp_215_i_i;
input  [31:0] tmp_216_i_i;
input  [31:0] tmp_217_i_i;
input  [31:0] tmp_190_i_i;
input  [31:0] tmp_191_i_i;
input  [31:0] tmp_220_i_i;
input  [31:0] tmp_221_i_i;
input  [31:0] tmp_222_i_i;
input  [31:0] tmp_223_i_i;
input  [31:0] tmp_224_i_i;
input  [31:0] tmp_225_i_i;
input  [31:0] tmp_226_i_i;
input  [31:0] tmp_227_i_i;
input  [31:0] tmp_228_i_i;
input  [31:0] tmp_229_i_i;
input  [31:0] tmp_230_i_i;
input  [31:0] tmp_231_i_i;
input  [31:0] tmp_232_i_i;
input  [31:0] tmp_233_i_i;
input  [31:0] tmp_234_i_i;
input  [31:0] tmp_235_i_i;
input  [31:0] tmp_236_i_i;
input  [31:0] tmp_237_i_i;
input  [31:0] tmp_238_i_i;
input  [31:0] tmp_239_i_i;
input  [31:0] tmp_240_i_i;
input  [31:0] tmp_241_i_i;
input  [31:0] tmp_242_i_i;
input  [31:0] tmp_243_i_i;
input  [31:0] tmp_244_i_i;
input  [31:0] tmp_245_i_i;
input  [31:0] tmp_218_i_i;
input  [31:0] tmp_219_i_i;
input  [31:0] tmp_248_i_i;
input  [31:0] tmp_249_i_i;
input  [31:0] tmp_250_i_i;
input  [31:0] tmp_251_i_i;
input  [31:0] tmp_252_i_i;
input  [31:0] tmp_253_i_i;
input  [31:0] tmp_254_i_i;
input  [31:0] tmp_255_i_i;
input  [31:0] tmp_256_i_i;
input  [31:0] tmp_257_i_i;
input  [31:0] tmp_258_i_i;
input  [31:0] tmp_259_i_i;
input  [31:0] tmp_260_i_i;
input  [31:0] tmp_261_i_i;
input  [31:0] tmp_262_i_i;
input  [31:0] tmp_263_i_i;
input  [31:0] tmp_264_i_i;
input  [31:0] tmp_265_i_i;
input  [31:0] tmp_266_i_i;
input  [31:0] tmp_267_i_i;
input  [31:0] tmp_268_i_i;
input  [31:0] tmp_269_i_i;
input  [31:0] tmp_270_i_i;
input  [31:0] tmp_271_i_i;
input  [31:0] tmp_272_i_i;
input  [31:0] tmp_273_i_i;
input  [31:0] tmp_246_i_i;
input  [31:0] tmp_247_i_i;
output  [31:0] add51_8250_i_i_out;
output   add51_8250_i_i_out_ap_vld;
output  [31:0] add51_7249_i_i_out;
output   add51_7249_i_i_out_ap_vld;
output  [31:0] add51_6248_i_i_out;
output   add51_6248_i_i_out_ap_vld;
output  [31:0] add51_5247_i_i_out;
output   add51_5247_i_i_out_ap_vld;
output  [31:0] add51_4246_i_i_out;
output   add51_4246_i_i_out_ap_vld;
output  [31:0] add51_3245_i_i_out;
output   add51_3245_i_i_out_ap_vld;
output  [31:0] add51_2244_i_i_out;
output   add51_2244_i_i_out_ap_vld;
output  [31:0] add51_1243_i_i_out;
output   add51_1243_i_i_out_ap_vld;
output  [31:0] add51242_i_i_out;
output   add51242_i_i_out_ap_vld;
output  [10:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_q0;
output  [10:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_q0;
output  [10:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_q0;
output  [31:0] grp_fu_21203_p_din0;
output  [31:0] grp_fu_21203_p_din1;
output  [1:0] grp_fu_21203_p_opcode;
input  [31:0] grp_fu_21203_p_dout0;
output   grp_fu_21203_p_ce;
output  [31:0] grp_fu_21207_p_din0;
output  [31:0] grp_fu_21207_p_din1;
output  [1:0] grp_fu_21207_p_opcode;
input  [31:0] grp_fu_21207_p_dout0;
output   grp_fu_21207_p_ce;
output  [31:0] grp_fu_21211_p_din0;
output  [31:0] grp_fu_21211_p_din1;
output  [1:0] grp_fu_21211_p_opcode;
input  [31:0] grp_fu_21211_p_dout0;
output   grp_fu_21211_p_ce;
output  [31:0] grp_fu_51944_p_din0;
output  [31:0] grp_fu_51944_p_din1;
input  [31:0] grp_fu_51944_p_dout0;
output   grp_fu_51944_p_ce;
output  [31:0] grp_fu_51948_p_din0;
output  [31:0] grp_fu_51948_p_din1;
input  [31:0] grp_fu_51948_p_dout0;
output   grp_fu_51948_p_ce;
output  [31:0] grp_fu_51952_p_din0;
output  [31:0] grp_fu_51952_p_din1;
input  [31:0] grp_fu_51952_p_dout0;
output   grp_fu_51952_p_ce;

reg ap_idle;
reg add51_8250_i_i_out_ap_vld;
reg add51_7249_i_i_out_ap_vld;
reg add51_6248_i_i_out_ap_vld;
reg add51_5247_i_i_out_ap_vld;
reg add51_4246_i_i_out_ap_vld;
reg add51_3245_i_i_out_ap_vld;
reg add51_2244_i_i_out_ap_vld;
reg add51_1243_i_i_out_ap_vld;
reg add51242_i_i_out_ap_vld;
reg[10:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0;
reg[10:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0;
reg[10:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state6_pp0_stage2_iter1;
wire    ap_block_state9_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_subdone;
reg   [0:0] icmp_ln165_reg_3281;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln165_fu_2375_p2;
reg   [0:0] icmp_ln165_reg_3281_pp0_iter1_reg;
reg   [0:0] icmp_ln165_reg_3281_pp0_iter2_reg;
wire   [10:0] sub_ln172_fu_2403_p2;
reg   [10:0] sub_ln172_reg_3285;
wire   [31:0] tmp_274_i_i_fu_2426_p34;
reg   [31:0] tmp_274_i_i_reg_3306;
wire   [31:0] tmp_275_i_i_fu_2496_p34;
reg   [31:0] tmp_275_i_i_reg_3311;
wire   [31:0] tmp_276_i_i_fu_2566_p34;
reg   [31:0] tmp_276_i_i_reg_3316;
wire   [31:0] tmp_277_i_i_fu_2636_p34;
reg   [31:0] tmp_277_i_i_reg_3321;
wire   [31:0] tmp_278_i_i_fu_2706_p34;
reg   [31:0] tmp_278_i_i_reg_3326;
wire   [31:0] tmp_279_i_i_fu_2776_p34;
reg   [31:0] tmp_279_i_i_reg_3331;
wire   [31:0] tmp_280_i_i_fu_2846_p34;
reg   [31:0] tmp_280_i_i_reg_3336;
reg   [31:0] tmp_280_i_i_reg_3336_pp0_iter1_reg;
wire   [31:0] tmp_281_i_i_fu_2916_p34;
reg   [31:0] tmp_281_i_i_reg_3341;
reg   [31:0] tmp_281_i_i_reg_3341_pp0_iter1_reg;
wire   [31:0] tmp_282_i_i_fu_2986_p34;
reg   [31:0] tmp_282_i_i_reg_3346;
reg   [31:0] tmp_282_i_i_reg_3346_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state8_pp0_stage1_iter2;
wire    ap_block_state11_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_271_reg_3366;
reg   [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_272_reg_3371;
reg   [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_273_reg_3376;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_274_reg_3396;
reg   [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_275_reg_3401;
reg   [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_276_reg_3406;
reg   [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_277_reg_3411;
reg   [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_278_reg_3416;
reg   [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_279_reg_3421;
reg   [31:0] mul_i_i_reg_3426;
reg   [31:0] mul_1_i_i_reg_3431;
reg   [31:0] mul_2_i_i_reg_3436;
reg   [31:0] mul_3_i_i_reg_3456;
reg   [31:0] mul_4_i_i_reg_3461;
reg   [31:0] mul_5_i_i_reg_3466;
reg   [31:0] mul_6_i_i_reg_3486;
reg   [31:0] mul_7_i_i_reg_3491;
reg   [31:0] mul_8_i_i_reg_3496;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
wire   [63:0] zext_ln172_1_fu_2409_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln172_2_fu_3066_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln172_3_fu_3078_p1;
wire    ap_block_pp0_stage2;
reg   [31:0] add51242_i_i_fu_584;
reg   [31:0] ap_sig_allocacmp_add51242_i_i_load;
wire    ap_loop_init;
reg   [31:0] add51_1243_i_i_fu_588;
reg   [31:0] ap_sig_allocacmp_add51_1243_i_i_load;
reg   [31:0] add51_2244_i_i_fu_592;
reg   [31:0] ap_sig_allocacmp_add51_2244_i_i_load;
reg   [31:0] add51_3245_i_i_fu_596;
reg   [31:0] ap_sig_allocacmp_add51_3245_i_i_load;
reg   [31:0] add51_4246_i_i_fu_600;
reg   [31:0] ap_sig_allocacmp_add51_4246_i_i_load;
reg   [31:0] add51_5247_i_i_fu_604;
reg   [31:0] ap_sig_allocacmp_add51_5247_i_i_load;
reg   [31:0] add51_6248_i_i_fu_608;
reg   [31:0] ap_sig_allocacmp_add51_6248_i_i_load;
reg   [31:0] add51_7249_i_i_fu_612;
reg   [31:0] ap_sig_allocacmp_add51_7249_i_i_load;
reg   [31:0] add51_8250_i_i_fu_616;
reg   [31:0] ap_sig_allocacmp_add51_8250_i_i_load;
reg   [3:0] ky_fu_620;
wire   [3:0] add_ln165_fu_2381_p2;
reg   [3:0] ap_sig_allocacmp_ky_2;
wire    ap_block_pp0_stage1_01001;
reg   [31:0] grp_fu_2298_p0;
reg   [31:0] grp_fu_2298_p1;
reg   [31:0] grp_fu_2302_p0;
reg   [31:0] grp_fu_2302_p1;
reg   [31:0] grp_fu_2306_p0;
reg   [31:0] grp_fu_2306_p1;
reg   [31:0] grp_fu_2310_p0;
reg   [31:0] grp_fu_2310_p1;
reg   [31:0] grp_fu_2314_p0;
reg   [31:0] grp_fu_2314_p1;
reg   [31:0] grp_fu_2318_p0;
reg   [31:0] grp_fu_2318_p1;
wire   [10:0] zext_ln172_fu_2387_p1;
wire   [10:0] add_ln172_1_fu_2391_p2;
wire   [10:0] shl_ln172_fu_2397_p2;
wire   [4:0] ky_cast14_i_i_fu_2416_p1;
wire   [4:0] empty_fu_2420_p2;
wire   [10:0] add_ln172_2_fu_3061_p2;
wire   [10:0] add_ln172_3_fu_3073_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter2_stage1;
reg    ap_idle_pp0_0to1;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [2:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to3;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

srcnn_mux_32_5_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_32_5_32_1_1_U1867(
    .din0(tmp_24_i_i),
    .din1(tmp_25_i_i),
    .din2(tmp_26_i_i),
    .din3(tmp_27_i_i),
    .din4(tmp_28_i_i),
    .din5(tmp_29_i_i),
    .din6(tmp_30_i_i),
    .din7(tmp_31_i_i),
    .din8(tmp_32_i_i),
    .din9(tmp_33_i_i),
    .din10(tmp_34_i_i),
    .din11(tmp_35_i_i),
    .din12(tmp_36_i_i),
    .din13(tmp_37_i_i),
    .din14(tmp_38_i_i),
    .din15(tmp_39_i_i),
    .din16(tmp_40_i_i),
    .din17(tmp_41_i_i),
    .din18(tmp_42_i_i),
    .din19(tmp_43_i_i),
    .din20(tmp_44_i_i),
    .din21(tmp_45_i_i),
    .din22(tmp_46_i_i),
    .din23(tmp_47_i_i),
    .din24(tmp_48_i_i),
    .din25(tmp_49_i_i),
    .din26(32'd0),
    .din27(32'd0),
    .din28(32'd0),
    .din29(32'd0),
    .din30(tmp_22_i_i),
    .din31(tmp_23_i_i),
    .din32(empty_fu_2420_p2),
    .dout(tmp_274_i_i_fu_2426_p34)
);

srcnn_mux_32_5_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_32_5_32_1_1_U1868(
    .din0(tmp_52_i_i),
    .din1(tmp_53_i_i),
    .din2(tmp_54_i_i),
    .din3(tmp_55_i_i),
    .din4(tmp_56_i_i),
    .din5(tmp_57_i_i),
    .din6(tmp_58_i_i),
    .din7(tmp_59_i_i),
    .din8(tmp_60_i_i),
    .din9(tmp_61_i_i),
    .din10(tmp_62_i_i),
    .din11(tmp_63_i_i),
    .din12(tmp_64_i_i),
    .din13(tmp_65_i_i),
    .din14(tmp_66_i_i),
    .din15(tmp_67_i_i),
    .din16(tmp_68_i_i),
    .din17(tmp_69_i_i),
    .din18(tmp_70_i_i),
    .din19(tmp_71_i_i),
    .din20(tmp_72_i_i),
    .din21(tmp_73_i_i),
    .din22(tmp_74_i_i),
    .din23(tmp_75_i_i),
    .din24(tmp_76_i_i),
    .din25(tmp_77_i_i),
    .din26(32'd0),
    .din27(32'd0),
    .din28(32'd0),
    .din29(32'd0),
    .din30(tmp_50_i_i),
    .din31(tmp_51_i_i),
    .din32(empty_fu_2420_p2),
    .dout(tmp_275_i_i_fu_2496_p34)
);

srcnn_mux_32_5_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_32_5_32_1_1_U1869(
    .din0(tmp_80_i_i),
    .din1(tmp_81_i_i),
    .din2(tmp_82_i_i),
    .din3(tmp_83_i_i),
    .din4(tmp_84_i_i),
    .din5(tmp_85_i_i),
    .din6(tmp_86_i_i),
    .din7(tmp_87_i_i),
    .din8(tmp_88_i_i),
    .din9(tmp_89_i_i),
    .din10(tmp_90_i_i),
    .din11(tmp_91_i_i),
    .din12(tmp_92_i_i),
    .din13(tmp_93_i_i),
    .din14(tmp_94_i_i),
    .din15(tmp_95_i_i),
    .din16(tmp_96_i_i),
    .din17(tmp_97_i_i),
    .din18(tmp_98_i_i),
    .din19(tmp_99_i_i),
    .din20(tmp_100_i_i),
    .din21(tmp_101_i_i),
    .din22(tmp_102_i_i),
    .din23(tmp_103_i_i),
    .din24(tmp_104_i_i),
    .din25(tmp_105_i_i),
    .din26(32'd0),
    .din27(32'd0),
    .din28(32'd0),
    .din29(32'd0),
    .din30(tmp_78_i_i),
    .din31(tmp_79_i_i),
    .din32(empty_fu_2420_p2),
    .dout(tmp_276_i_i_fu_2566_p34)
);

srcnn_mux_32_5_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_32_5_32_1_1_U1870(
    .din0(tmp_108_i_i),
    .din1(tmp_109_i_i),
    .din2(tmp_110_i_i),
    .din3(tmp_111_i_i),
    .din4(tmp_112_i_i),
    .din5(tmp_113_i_i),
    .din6(tmp_114_i_i),
    .din7(tmp_115_i_i),
    .din8(tmp_116_i_i),
    .din9(tmp_117_i_i),
    .din10(tmp_118_i_i),
    .din11(tmp_119_i_i),
    .din12(tmp_120_i_i),
    .din13(tmp_121_i_i),
    .din14(tmp_122_i_i),
    .din15(tmp_123_i_i),
    .din16(tmp_124_i_i),
    .din17(tmp_125_i_i),
    .din18(tmp_126_i_i),
    .din19(tmp_127_i_i),
    .din20(tmp_128_i_i),
    .din21(tmp_129_i_i),
    .din22(tmp_130_i_i),
    .din23(tmp_131_i_i),
    .din24(tmp_132_i_i),
    .din25(tmp_133_i_i),
    .din26(32'd0),
    .din27(32'd0),
    .din28(32'd0),
    .din29(32'd0),
    .din30(tmp_106_i_i),
    .din31(tmp_107_i_i),
    .din32(empty_fu_2420_p2),
    .dout(tmp_277_i_i_fu_2636_p34)
);

srcnn_mux_32_5_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_32_5_32_1_1_U1871(
    .din0(tmp_136_i_i),
    .din1(tmp_137_i_i),
    .din2(tmp_138_i_i),
    .din3(tmp_139_i_i),
    .din4(tmp_140_i_i),
    .din5(tmp_141_i_i),
    .din6(tmp_142_i_i),
    .din7(tmp_143_i_i),
    .din8(tmp_144_i_i),
    .din9(tmp_145_i_i),
    .din10(tmp_146_i_i),
    .din11(tmp_147_i_i),
    .din12(tmp_148_i_i),
    .din13(tmp_149_i_i),
    .din14(tmp_150_i_i),
    .din15(tmp_151_i_i),
    .din16(tmp_152_i_i),
    .din17(tmp_153_i_i),
    .din18(tmp_154_i_i),
    .din19(tmp_155_i_i),
    .din20(tmp_156_i_i),
    .din21(tmp_157_i_i),
    .din22(tmp_158_i_i),
    .din23(tmp_159_i_i),
    .din24(tmp_160_i_i),
    .din25(tmp_161_i_i),
    .din26(32'd0),
    .din27(32'd0),
    .din28(32'd0),
    .din29(32'd0),
    .din30(tmp_134_i_i),
    .din31(tmp_135_i_i),
    .din32(empty_fu_2420_p2),
    .dout(tmp_278_i_i_fu_2706_p34)
);

srcnn_mux_32_5_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_32_5_32_1_1_U1872(
    .din0(tmp_164_i_i),
    .din1(tmp_165_i_i),
    .din2(tmp_166_i_i),
    .din3(tmp_167_i_i),
    .din4(tmp_168_i_i),
    .din5(tmp_169_i_i),
    .din6(tmp_170_i_i),
    .din7(tmp_171_i_i),
    .din8(tmp_172_i_i),
    .din9(tmp_173_i_i),
    .din10(tmp_174_i_i),
    .din11(tmp_175_i_i),
    .din12(tmp_176_i_i),
    .din13(tmp_177_i_i),
    .din14(tmp_178_i_i),
    .din15(tmp_179_i_i),
    .din16(tmp_180_i_i),
    .din17(tmp_181_i_i),
    .din18(tmp_182_i_i),
    .din19(tmp_183_i_i),
    .din20(tmp_184_i_i),
    .din21(tmp_185_i_i),
    .din22(tmp_186_i_i),
    .din23(tmp_187_i_i),
    .din24(tmp_188_i_i),
    .din25(tmp_189_i_i),
    .din26(32'd0),
    .din27(32'd0),
    .din28(32'd0),
    .din29(32'd0),
    .din30(tmp_162_i_i),
    .din31(tmp_163_i_i),
    .din32(empty_fu_2420_p2),
    .dout(tmp_279_i_i_fu_2776_p34)
);

srcnn_mux_32_5_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_32_5_32_1_1_U1873(
    .din0(tmp_192_i_i),
    .din1(tmp_193_i_i),
    .din2(tmp_194_i_i),
    .din3(tmp_195_i_i),
    .din4(tmp_196_i_i),
    .din5(tmp_197_i_i),
    .din6(tmp_198_i_i),
    .din7(tmp_199_i_i),
    .din8(tmp_200_i_i),
    .din9(tmp_201_i_i),
    .din10(tmp_202_i_i),
    .din11(tmp_203_i_i),
    .din12(tmp_204_i_i),
    .din13(tmp_205_i_i),
    .din14(tmp_206_i_i),
    .din15(tmp_207_i_i),
    .din16(tmp_208_i_i),
    .din17(tmp_209_i_i),
    .din18(tmp_210_i_i),
    .din19(tmp_211_i_i),
    .din20(tmp_212_i_i),
    .din21(tmp_213_i_i),
    .din22(tmp_214_i_i),
    .din23(tmp_215_i_i),
    .din24(tmp_216_i_i),
    .din25(tmp_217_i_i),
    .din26(32'd0),
    .din27(32'd0),
    .din28(32'd0),
    .din29(32'd0),
    .din30(tmp_190_i_i),
    .din31(tmp_191_i_i),
    .din32(empty_fu_2420_p2),
    .dout(tmp_280_i_i_fu_2846_p34)
);

srcnn_mux_32_5_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_32_5_32_1_1_U1874(
    .din0(tmp_220_i_i),
    .din1(tmp_221_i_i),
    .din2(tmp_222_i_i),
    .din3(tmp_223_i_i),
    .din4(tmp_224_i_i),
    .din5(tmp_225_i_i),
    .din6(tmp_226_i_i),
    .din7(tmp_227_i_i),
    .din8(tmp_228_i_i),
    .din9(tmp_229_i_i),
    .din10(tmp_230_i_i),
    .din11(tmp_231_i_i),
    .din12(tmp_232_i_i),
    .din13(tmp_233_i_i),
    .din14(tmp_234_i_i),
    .din15(tmp_235_i_i),
    .din16(tmp_236_i_i),
    .din17(tmp_237_i_i),
    .din18(tmp_238_i_i),
    .din19(tmp_239_i_i),
    .din20(tmp_240_i_i),
    .din21(tmp_241_i_i),
    .din22(tmp_242_i_i),
    .din23(tmp_243_i_i),
    .din24(tmp_244_i_i),
    .din25(tmp_245_i_i),
    .din26(32'd0),
    .din27(32'd0),
    .din28(32'd0),
    .din29(32'd0),
    .din30(tmp_218_i_i),
    .din31(tmp_219_i_i),
    .din32(empty_fu_2420_p2),
    .dout(tmp_281_i_i_fu_2916_p34)
);

srcnn_mux_32_5_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_32_5_32_1_1_U1875(
    .din0(tmp_248_i_i),
    .din1(tmp_249_i_i),
    .din2(tmp_250_i_i),
    .din3(tmp_251_i_i),
    .din4(tmp_252_i_i),
    .din5(tmp_253_i_i),
    .din6(tmp_254_i_i),
    .din7(tmp_255_i_i),
    .din8(tmp_256_i_i),
    .din9(tmp_257_i_i),
    .din10(tmp_258_i_i),
    .din11(tmp_259_i_i),
    .din12(tmp_260_i_i),
    .din13(tmp_261_i_i),
    .din14(tmp_262_i_i),
    .din15(tmp_263_i_i),
    .din16(tmp_264_i_i),
    .din17(tmp_265_i_i),
    .din18(tmp_266_i_i),
    .din19(tmp_267_i_i),
    .din20(tmp_268_i_i),
    .din21(tmp_269_i_i),
    .din22(tmp_270_i_i),
    .din23(tmp_271_i_i),
    .din24(tmp_272_i_i),
    .din25(tmp_273_i_i),
    .din26(32'd0),
    .din27(32'd0),
    .din28(32'd0),
    .din29(32'd0),
    .din30(tmp_246_i_i),
    .din31(tmp_247_i_i),
    .din32(empty_fu_2420_p2),
    .dout(tmp_282_i_i_fu_2986_p34)
);

srcnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add51242_i_i_fu_584 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add51242_i_i_fu_584 <= grp_fu_21203_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add51_1243_i_i_fu_588 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add51_1243_i_i_fu_588 <= grp_fu_21207_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add51_2244_i_i_fu_592 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add51_2244_i_i_fu_592 <= grp_fu_21211_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add51_3245_i_i_fu_596 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            add51_3245_i_i_fu_596 <= grp_fu_21203_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add51_4246_i_i_fu_600 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            add51_4246_i_i_fu_600 <= grp_fu_21207_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add51_5247_i_i_fu_604 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            add51_5247_i_i_fu_604 <= grp_fu_21211_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add51_6248_i_i_fu_608 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add51_6248_i_i_fu_608 <= grp_fu_21203_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add51_7249_i_i_fu_612 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add51_7249_i_i_fu_612 <= grp_fu_21207_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add51_8250_i_i_fu_616 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add51_8250_i_i_fu_616 <= grp_fu_21211_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter2_stage1) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter2_stage1) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln165_fu_2375_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            ky_fu_620 <= add_ln165_fu_2381_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            ky_fu_620 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln165_reg_3281 <= icmp_ln165_fu_2375_p2;
        icmp_ln165_reg_3281_pp0_iter1_reg <= icmp_ln165_reg_3281;
        icmp_ln165_reg_3281_pp0_iter2_reg <= icmp_ln165_reg_3281_pp0_iter1_reg;
        tmp_280_i_i_reg_3336_pp0_iter1_reg <= tmp_280_i_i_reg_3336;
        tmp_281_i_i_reg_3341_pp0_iter1_reg <= tmp_281_i_i_reg_3341;
        tmp_282_i_i_reg_3346_pp0_iter1_reg <= tmp_282_i_i_reg_3346;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_1_i_i_reg_3431 <= grp_fu_51948_p_dout0;
        mul_2_i_i_reg_3436 <= grp_fu_51952_p_dout0;
        mul_i_i_reg_3426 <= grp_fu_51944_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_3_i_i_reg_3456 <= grp_fu_51944_p_dout0;
        mul_4_i_i_reg_3461 <= grp_fu_51948_p_dout0;
        mul_5_i_i_reg_3466 <= grp_fu_51952_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_6_i_i_reg_3486 <= grp_fu_51944_p_dout0;
        mul_7_i_i_reg_3491 <= grp_fu_51948_p_dout0;
        mul_8_i_i_reg_3496 <= grp_fu_51952_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_3281 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_271_reg_3366 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_q0;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_272_reg_3371 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_q0;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_273_reg_3376 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_3281 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_274_reg_3396 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_q0;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_275_reg_3401 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_q0;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_276_reg_3406 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_277_reg_3411 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_q0;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_278_reg_3416 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_q0;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_279_reg_3421 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln165_fu_2375_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_ln172_reg_3285 <= sub_ln172_fu_2403_p2;
        tmp_274_i_i_reg_3306 <= tmp_274_i_i_fu_2426_p34;
        tmp_275_i_i_reg_3311 <= tmp_275_i_i_fu_2496_p34;
        tmp_276_i_i_reg_3316 <= tmp_276_i_i_fu_2566_p34;
        tmp_277_i_i_reg_3321 <= tmp_277_i_i_fu_2636_p34;
        tmp_278_i_i_reg_3326 <= tmp_278_i_i_fu_2706_p34;
        tmp_279_i_i_reg_3331 <= tmp_279_i_i_fu_2776_p34;
        tmp_280_i_i_reg_3336 <= tmp_280_i_i_fu_2846_p34;
        tmp_281_i_i_reg_3341 <= tmp_281_i_i_fu_2916_p34;
        tmp_282_i_i_reg_3346 <= tmp_282_i_i_fu_2986_p34;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_3281_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add51242_i_i_out_ap_vld = 1'b1;
    end else begin
        add51242_i_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_3281_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add51_1243_i_i_out_ap_vld = 1'b1;
    end else begin
        add51_1243_i_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_3281_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add51_2244_i_i_out_ap_vld = 1'b1;
    end else begin
        add51_2244_i_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_3281_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add51_3245_i_i_out_ap_vld = 1'b1;
    end else begin
        add51_3245_i_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_3281_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add51_4246_i_i_out_ap_vld = 1'b1;
    end else begin
        add51_4246_i_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_3281_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add51_5247_i_i_out_ap_vld = 1'b1;
    end else begin
        add51_5247_i_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_3281_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add51_6248_i_i_out_ap_vld = 1'b1;
    end else begin
        add51_6248_i_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_3281_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add51_7249_i_i_out_ap_vld = 1'b1;
    end else begin
        add51_7249_i_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_3281_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add51_8250_i_i_out_ap_vld = 1'b1;
    end else begin
        add51_8250_i_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln165_reg_3281 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (icmp_ln165_reg_3281_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter2_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_add51242_i_i_load = grp_fu_21203_p_dout0;
    end else begin
        ap_sig_allocacmp_add51242_i_i_load = add51242_i_i_fu_584;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_add51_1243_i_i_load = grp_fu_21207_p_dout0;
    end else begin
        ap_sig_allocacmp_add51_1243_i_i_load = add51_1243_i_i_fu_588;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_add51_2244_i_i_load = grp_fu_21211_p_dout0;
    end else begin
        ap_sig_allocacmp_add51_2244_i_i_load = add51_2244_i_i_fu_592;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_add51_3245_i_i_load = grp_fu_21203_p_dout0;
    end else begin
        ap_sig_allocacmp_add51_3245_i_i_load = add51_3245_i_i_fu_596;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_add51_4246_i_i_load = grp_fu_21207_p_dout0;
    end else begin
        ap_sig_allocacmp_add51_4246_i_i_load = add51_4246_i_i_fu_600;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_add51_5247_i_i_load = grp_fu_21211_p_dout0;
    end else begin
        ap_sig_allocacmp_add51_5247_i_i_load = add51_5247_i_i_fu_604;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_add51_6248_i_i_load = grp_fu_21203_p_dout0;
    end else begin
        ap_sig_allocacmp_add51_6248_i_i_load = add51_6248_i_i_fu_608;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_add51_7249_i_i_load = grp_fu_21207_p_dout0;
    end else begin
        ap_sig_allocacmp_add51_7249_i_i_load = add51_7249_i_i_fu_612;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_add51_8250_i_i_load = grp_fu_21211_p_dout0;
    end else begin
        ap_sig_allocacmp_add51_8250_i_i_load = add51_8250_i_i_fu_616;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_ky_2 = 4'd0;
    end else begin
        ap_sig_allocacmp_ky_2 = ky_fu_620;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2298_p0 = ap_sig_allocacmp_add51_6248_i_i_load;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2298_p0 = ap_sig_allocacmp_add51_3245_i_i_load;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2298_p0 = ap_sig_allocacmp_add51242_i_i_load;
    end else begin
        grp_fu_2298_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2298_p1 = mul_6_i_i_reg_3486;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2298_p1 = mul_3_i_i_reg_3456;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2298_p1 = mul_i_i_reg_3426;
    end else begin
        grp_fu_2298_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2302_p0 = ap_sig_allocacmp_add51_7249_i_i_load;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2302_p0 = ap_sig_allocacmp_add51_4246_i_i_load;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2302_p0 = ap_sig_allocacmp_add51_1243_i_i_load;
    end else begin
        grp_fu_2302_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2302_p1 = mul_7_i_i_reg_3491;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2302_p1 = mul_4_i_i_reg_3461;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2302_p1 = mul_1_i_i_reg_3431;
    end else begin
        grp_fu_2302_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2306_p0 = ap_sig_allocacmp_add51_8250_i_i_load;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2306_p0 = ap_sig_allocacmp_add51_5247_i_i_load;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2306_p0 = ap_sig_allocacmp_add51_2244_i_i_load;
    end else begin
        grp_fu_2306_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2306_p1 = mul_8_i_i_reg_3496;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2306_p1 = mul_5_i_i_reg_3466;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2306_p1 = mul_2_i_i_reg_3436;
    end else begin
        grp_fu_2306_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2310_p0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_277_reg_3411;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2310_p0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_274_reg_3396;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2310_p0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_271_reg_3366;
    end else begin
        grp_fu_2310_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2310_p1 = tmp_280_i_i_reg_3336_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2310_p1 = tmp_277_i_i_reg_3321;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2310_p1 = tmp_274_i_i_reg_3306;
    end else begin
        grp_fu_2310_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2314_p0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_278_reg_3416;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2314_p0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_275_reg_3401;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2314_p0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_272_reg_3371;
    end else begin
        grp_fu_2314_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2314_p1 = tmp_281_i_i_reg_3341_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2314_p1 = tmp_278_i_i_reg_3326;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2314_p1 = tmp_275_i_i_reg_3311;
    end else begin
        grp_fu_2314_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2318_p0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_279_reg_3421;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2318_p0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_276_reg_3406;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2318_p0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_273_reg_3376;
    end else begin
        grp_fu_2318_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2318_p1 = tmp_282_i_i_reg_3346_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2318_p1 = tmp_279_i_i_reg_3331;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2318_p1 = tmp_276_i_i_reg_3316;
    end else begin
        grp_fu_2318_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0 = zext_ln172_3_fu_3078_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0 = zext_ln172_2_fu_3066_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0 = zext_ln172_1_fu_2409_p1;
        end else begin
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0 = 'bx;
        end
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0 = zext_ln172_3_fu_3078_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0 = zext_ln172_2_fu_3066_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0 = zext_ln172_1_fu_2409_p1;
        end else begin
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0 = 'bx;
        end
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0 = zext_ln172_3_fu_3078_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0 = zext_ln172_2_fu_3066_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0 = zext_ln172_1_fu_2409_p1;
        end else begin
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0 = 'bx;
        end
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter2_stage1) & (ap_idle_pp0_0to1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add51242_i_i_out = add51242_i_i_fu_584;

assign add51_1243_i_i_out = add51_1243_i_i_fu_588;

assign add51_2244_i_i_out = add51_2244_i_i_fu_592;

assign add51_3245_i_i_out = add51_3245_i_i_fu_596;

assign add51_4246_i_i_out = add51_4246_i_i_fu_600;

assign add51_5247_i_i_out = add51_5247_i_i_fu_604;

assign add51_6248_i_i_out = add51_6248_i_i_fu_608;

assign add51_7249_i_i_out = add51_7249_i_i_fu_612;

assign add51_8250_i_i_out = add51_8250_i_i_fu_616;

assign add_ln165_fu_2381_p2 = (ap_sig_allocacmp_ky_2 + 4'd1);

assign add_ln172_1_fu_2391_p2 = (add_ln172 + zext_ln172_fu_2387_p1);

assign add_ln172_2_fu_3061_p2 = (sub_ln172_reg_3285 + 11'd1);

assign add_ln172_3_fu_3073_p2 = (sub_ln172_reg_3285 + 11'd2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign empty_fu_2420_p2 = (y0_cast_i_i + ky_cast14_i_i_fu_2416_p1);

assign grp_fu_21203_p_ce = 1'b1;

assign grp_fu_21203_p_din0 = grp_fu_2298_p0;

assign grp_fu_21203_p_din1 = grp_fu_2298_p1;

assign grp_fu_21203_p_opcode = 2'd0;

assign grp_fu_21207_p_ce = 1'b1;

assign grp_fu_21207_p_din0 = grp_fu_2302_p0;

assign grp_fu_21207_p_din1 = grp_fu_2302_p1;

assign grp_fu_21207_p_opcode = 2'd0;

assign grp_fu_21211_p_ce = 1'b1;

assign grp_fu_21211_p_din0 = grp_fu_2306_p0;

assign grp_fu_21211_p_din1 = grp_fu_2306_p1;

assign grp_fu_21211_p_opcode = 2'd0;

assign grp_fu_51944_p_ce = 1'b1;

assign grp_fu_51944_p_din0 = grp_fu_2310_p0;

assign grp_fu_51944_p_din1 = grp_fu_2310_p1;

assign grp_fu_51948_p_ce = 1'b1;

assign grp_fu_51948_p_din0 = grp_fu_2314_p0;

assign grp_fu_51948_p_din1 = grp_fu_2314_p1;

assign grp_fu_51952_p_ce = 1'b1;

assign grp_fu_51952_p_din0 = grp_fu_2318_p0;

assign grp_fu_51952_p_din1 = grp_fu_2318_p1;

assign icmp_ln165_fu_2375_p2 = ((ap_sig_allocacmp_ky_2 == 4'd9) ? 1'b1 : 1'b0);

assign ky_cast14_i_i_fu_2416_p1 = ap_sig_allocacmp_ky_2;

assign shl_ln172_fu_2397_p2 = add_ln172_1_fu_2391_p2 << 11'd2;

assign sub_ln172_fu_2403_p2 = (shl_ln172_fu_2397_p2 - add_ln172_1_fu_2391_p2);

assign zext_ln172_1_fu_2409_p1 = sub_ln172_fu_2403_p2;

assign zext_ln172_2_fu_3066_p1 = add_ln172_2_fu_3061_p2;

assign zext_ln172_3_fu_3078_p1 = add_ln172_3_fu_3073_p2;

assign zext_ln172_fu_2387_p1 = ap_sig_allocacmp_ky_2;

endmodule //srcnn_compute_tile_Pipeline_Conv1_ky
