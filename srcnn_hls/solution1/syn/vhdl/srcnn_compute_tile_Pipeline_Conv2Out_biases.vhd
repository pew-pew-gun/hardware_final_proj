-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity srcnn_compute_tile_Pipeline_Conv2Out_biases is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    acc2_15_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_15_ce0 : OUT STD_LOGIC;
    acc2_15_we0 : OUT STD_LOGIC;
    acc2_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_14_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_14_ce0 : OUT STD_LOGIC;
    acc2_14_we0 : OUT STD_LOGIC;
    acc2_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_13_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_13_ce0 : OUT STD_LOGIC;
    acc2_13_we0 : OUT STD_LOGIC;
    acc2_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_12_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_12_ce0 : OUT STD_LOGIC;
    acc2_12_we0 : OUT STD_LOGIC;
    acc2_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_11_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_11_ce0 : OUT STD_LOGIC;
    acc2_11_we0 : OUT STD_LOGIC;
    acc2_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_10_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_10_ce0 : OUT STD_LOGIC;
    acc2_10_we0 : OUT STD_LOGIC;
    acc2_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_9_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_9_ce0 : OUT STD_LOGIC;
    acc2_9_we0 : OUT STD_LOGIC;
    acc2_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_8_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_8_ce0 : OUT STD_LOGIC;
    acc2_8_we0 : OUT STD_LOGIC;
    acc2_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_7_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_7_ce0 : OUT STD_LOGIC;
    acc2_7_we0 : OUT STD_LOGIC;
    acc2_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_6_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_6_ce0 : OUT STD_LOGIC;
    acc2_6_we0 : OUT STD_LOGIC;
    acc2_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_5_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_5_ce0 : OUT STD_LOGIC;
    acc2_5_we0 : OUT STD_LOGIC;
    acc2_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_4_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_4_ce0 : OUT STD_LOGIC;
    acc2_4_we0 : OUT STD_LOGIC;
    acc2_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_3_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_3_ce0 : OUT STD_LOGIC;
    acc2_3_we0 : OUT STD_LOGIC;
    acc2_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_2_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_2_ce0 : OUT STD_LOGIC;
    acc2_2_we0 : OUT STD_LOGIC;
    acc2_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_1_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_1_ce0 : OUT STD_LOGIC;
    acc2_1_we0 : OUT STD_LOGIC;
    acc2_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_ce0 : OUT STD_LOGIC;
    acc2_we0 : OUT STD_LOGIC;
    acc2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_16_s : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_116 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_17_s : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_117 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_18_s : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_118 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_19_s : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_119 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_20_s : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_120 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_b2_loc_92 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_121 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_22_s : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_122 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_23_s : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_123 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_24_s : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_124 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_25_s : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_125 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_26_s : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_10_s : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_27_s : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_b2_loc_93 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_28_s : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_12_s : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_29_s : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_13_s : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_30_s : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_14_s : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_b2_loc : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_15_s : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of srcnn_compute_tile_Pipeline_Conv2Out_biases is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal tmp_fu_542_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal zext_ln129_fu_562_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal n2_fu_130 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln129_fu_732_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_n2_5 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_33_fu_554_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln129_fu_550_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln132_fu_582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component srcnn_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component srcnn_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_start_int = ap_const_logic_1) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    n2_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if ((tmp_fu_542_p3 = ap_const_lv1_0)) then 
                    n2_fu_130 <= add_ln129_fu_732_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    n2_fu_130 <= ap_const_lv6_0;
                end if;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    acc2_10_address0 <= zext_ln129_fu_562_p1(1 - 1 downto 0);

    acc2_10_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_10_ce0 <= ap_const_logic_1;
        else 
            acc2_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_10_d0 <= 
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_26_s when (icmp_ln132_fu_582_p2(0) = '1') else 
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_10_s;

    acc2_10_we0_assign_proc : process(ap_CS_fsm_state1, tmp_fu_542_p3, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (tmp_fu_542_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_10_we0 <= ap_const_logic_1;
        else 
            acc2_10_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_11_address0 <= zext_ln129_fu_562_p1(1 - 1 downto 0);

    acc2_11_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_11_ce0 <= ap_const_logic_1;
        else 
            acc2_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_11_d0 <= 
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_27_s when (icmp_ln132_fu_582_p2(0) = '1') else 
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_b2_loc_93;

    acc2_11_we0_assign_proc : process(ap_CS_fsm_state1, tmp_fu_542_p3, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (tmp_fu_542_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_11_we0 <= ap_const_logic_1;
        else 
            acc2_11_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_12_address0 <= zext_ln129_fu_562_p1(1 - 1 downto 0);

    acc2_12_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_12_ce0 <= ap_const_logic_1;
        else 
            acc2_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_12_d0 <= 
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_28_s when (icmp_ln132_fu_582_p2(0) = '1') else 
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_12_s;

    acc2_12_we0_assign_proc : process(ap_CS_fsm_state1, tmp_fu_542_p3, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (tmp_fu_542_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_12_we0 <= ap_const_logic_1;
        else 
            acc2_12_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_13_address0 <= zext_ln129_fu_562_p1(1 - 1 downto 0);

    acc2_13_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_13_ce0 <= ap_const_logic_1;
        else 
            acc2_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_13_d0 <= 
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_29_s when (icmp_ln132_fu_582_p2(0) = '1') else 
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_13_s;

    acc2_13_we0_assign_proc : process(ap_CS_fsm_state1, tmp_fu_542_p3, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (tmp_fu_542_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_13_we0 <= ap_const_logic_1;
        else 
            acc2_13_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_14_address0 <= zext_ln129_fu_562_p1(1 - 1 downto 0);

    acc2_14_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_14_ce0 <= ap_const_logic_1;
        else 
            acc2_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_14_d0 <= 
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_30_s when (icmp_ln132_fu_582_p2(0) = '1') else 
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_14_s;

    acc2_14_we0_assign_proc : process(ap_CS_fsm_state1, tmp_fu_542_p3, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (tmp_fu_542_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_14_we0 <= ap_const_logic_1;
        else 
            acc2_14_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_15_address0 <= zext_ln129_fu_562_p1(1 - 1 downto 0);

    acc2_15_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_15_ce0 <= ap_const_logic_1;
        else 
            acc2_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_15_d0 <= 
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_b2_loc when (icmp_ln132_fu_582_p2(0) = '1') else 
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_15_s;

    acc2_15_we0_assign_proc : process(ap_CS_fsm_state1, tmp_fu_542_p3, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (tmp_fu_542_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_15_we0 <= ap_const_logic_1;
        else 
            acc2_15_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_1_address0 <= zext_ln129_fu_562_p1(1 - 1 downto 0);

    acc2_1_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_1_ce0 <= ap_const_logic_1;
        else 
            acc2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_1_d0 <= 
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_17_s when (icmp_ln132_fu_582_p2(0) = '1') else 
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_117;

    acc2_1_we0_assign_proc : process(ap_CS_fsm_state1, tmp_fu_542_p3, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (tmp_fu_542_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_1_we0 <= ap_const_logic_1;
        else 
            acc2_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_2_address0 <= zext_ln129_fu_562_p1(1 - 1 downto 0);

    acc2_2_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_2_ce0 <= ap_const_logic_1;
        else 
            acc2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_2_d0 <= 
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_18_s when (icmp_ln132_fu_582_p2(0) = '1') else 
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_118;

    acc2_2_we0_assign_proc : process(ap_CS_fsm_state1, tmp_fu_542_p3, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (tmp_fu_542_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_2_we0 <= ap_const_logic_1;
        else 
            acc2_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_3_address0 <= zext_ln129_fu_562_p1(1 - 1 downto 0);

    acc2_3_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_3_ce0 <= ap_const_logic_1;
        else 
            acc2_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_3_d0 <= 
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_19_s when (icmp_ln132_fu_582_p2(0) = '1') else 
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_119;

    acc2_3_we0_assign_proc : process(ap_CS_fsm_state1, tmp_fu_542_p3, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (tmp_fu_542_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_3_we0 <= ap_const_logic_1;
        else 
            acc2_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_4_address0 <= zext_ln129_fu_562_p1(1 - 1 downto 0);

    acc2_4_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_4_ce0 <= ap_const_logic_1;
        else 
            acc2_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_4_d0 <= 
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_20_s when (icmp_ln132_fu_582_p2(0) = '1') else 
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_120;

    acc2_4_we0_assign_proc : process(ap_CS_fsm_state1, tmp_fu_542_p3, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (tmp_fu_542_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_4_we0 <= ap_const_logic_1;
        else 
            acc2_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_5_address0 <= zext_ln129_fu_562_p1(1 - 1 downto 0);

    acc2_5_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_5_ce0 <= ap_const_logic_1;
        else 
            acc2_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_5_d0 <= 
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_b2_loc_92 when (icmp_ln132_fu_582_p2(0) = '1') else 
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_121;

    acc2_5_we0_assign_proc : process(ap_CS_fsm_state1, tmp_fu_542_p3, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (tmp_fu_542_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_5_we0 <= ap_const_logic_1;
        else 
            acc2_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_6_address0 <= zext_ln129_fu_562_p1(1 - 1 downto 0);

    acc2_6_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_6_ce0 <= ap_const_logic_1;
        else 
            acc2_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_6_d0 <= 
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_22_s when (icmp_ln132_fu_582_p2(0) = '1') else 
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_122;

    acc2_6_we0_assign_proc : process(ap_CS_fsm_state1, tmp_fu_542_p3, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (tmp_fu_542_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_6_we0 <= ap_const_logic_1;
        else 
            acc2_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_7_address0 <= zext_ln129_fu_562_p1(1 - 1 downto 0);

    acc2_7_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_7_ce0 <= ap_const_logic_1;
        else 
            acc2_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_7_d0 <= 
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_23_s when (icmp_ln132_fu_582_p2(0) = '1') else 
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_123;

    acc2_7_we0_assign_proc : process(ap_CS_fsm_state1, tmp_fu_542_p3, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (tmp_fu_542_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_7_we0 <= ap_const_logic_1;
        else 
            acc2_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_8_address0 <= zext_ln129_fu_562_p1(1 - 1 downto 0);

    acc2_8_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_8_ce0 <= ap_const_logic_1;
        else 
            acc2_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_8_d0 <= 
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_24_s when (icmp_ln132_fu_582_p2(0) = '1') else 
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_124;

    acc2_8_we0_assign_proc : process(ap_CS_fsm_state1, tmp_fu_542_p3, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (tmp_fu_542_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_8_we0 <= ap_const_logic_1;
        else 
            acc2_8_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_9_address0 <= zext_ln129_fu_562_p1(1 - 1 downto 0);

    acc2_9_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_9_ce0 <= ap_const_logic_1;
        else 
            acc2_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_9_d0 <= 
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_25_s when (icmp_ln132_fu_582_p2(0) = '1') else 
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_125;

    acc2_9_we0_assign_proc : process(ap_CS_fsm_state1, tmp_fu_542_p3, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (tmp_fu_542_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_9_we0 <= ap_const_logic_1;
        else 
            acc2_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_address0 <= zext_ln129_fu_562_p1(1 - 1 downto 0);

    acc2_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_ce0 <= ap_const_logic_1;
        else 
            acc2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_d0 <= 
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_16_s when (icmp_ln132_fu_582_p2(0) = '1') else 
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_116;

    acc2_we0_assign_proc : process(ap_CS_fsm_state1, tmp_fu_542_p3, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (tmp_fu_542_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            acc2_we0 <= ap_const_logic_1;
        else 
            acc2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln129_fu_732_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_n2_5) + unsigned(ap_const_lv6_10));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start_int)
    begin
        if ((ap_start_int = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start_int)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start_int = ap_const_logic_0);
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_state1, tmp_fu_542_p3, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (tmp_fu_542_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_state1, ap_loop_exit_ready, ap_done_reg, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_n2_5_assign_proc : process(ap_CS_fsm_state1, n2_fu_130, ap_loop_init)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_n2_5 <= ap_const_lv6_0;
        else 
            ap_sig_allocacmp_n2_5 <= n2_fu_130;
        end if; 
    end process;

    icmp_ln132_fu_582_p2 <= "1" when (trunc_ln129_fu_550_p1 = ap_const_lv5_10) else "0";
    tmp_33_fu_554_p3 <= ap_sig_allocacmp_n2_5(4 downto 4);
    tmp_fu_542_p3 <= ap_sig_allocacmp_n2_5(5 downto 5);
    trunc_ln129_fu_550_p1 <= ap_sig_allocacmp_n2_5(5 - 1 downto 0);
    zext_ln129_fu_562_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_fu_554_p3),64));
end behav;
