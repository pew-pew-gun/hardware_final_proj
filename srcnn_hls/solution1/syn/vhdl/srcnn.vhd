-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity srcnn is
generic (
    C_M_AXI_GMEM_IN_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_IN_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_IN_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_IN_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_IN_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_IN_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_IN_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_IN_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_W1_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_W1_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_W1_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_W1_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_W1_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_W1_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_W1_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_W1_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_W2_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_W2_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_W2_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_W2_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_W2_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_W2_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_W2_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_W2_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_W3_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_W3_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_W3_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_W3_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_W3_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_W3_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_W3_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_W3_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_OUT_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_OUT_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_OUT_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_OUT_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_OUT_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_OUT_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_OUT_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_OUT_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_IN_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_IN_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_IN_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM_OUT_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_OUT_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_OUT_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM_W1_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_W1_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_W1_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM_W2_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_W2_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_W2_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM_W3_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_W3_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_W3_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem_in_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_in_AWREADY : IN STD_LOGIC;
    m_axi_gmem_in_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_IN_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_in_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_IN_ID_WIDTH-1 downto 0);
    m_axi_gmem_in_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_in_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_in_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_in_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_in_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_in_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_in_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_in_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_in_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_IN_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_in_WVALID : OUT STD_LOGIC;
    m_axi_gmem_in_WREADY : IN STD_LOGIC;
    m_axi_gmem_in_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_IN_DATA_WIDTH-1 downto 0);
    m_axi_gmem_in_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_IN_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_in_WLAST : OUT STD_LOGIC;
    m_axi_gmem_in_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_IN_ID_WIDTH-1 downto 0);
    m_axi_gmem_in_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_IN_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_in_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_in_ARREADY : IN STD_LOGIC;
    m_axi_gmem_in_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_IN_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_in_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_IN_ID_WIDTH-1 downto 0);
    m_axi_gmem_in_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_in_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_in_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_in_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_in_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_in_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_in_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_in_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_in_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_IN_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_in_RVALID : IN STD_LOGIC;
    m_axi_gmem_in_RREADY : OUT STD_LOGIC;
    m_axi_gmem_in_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_IN_DATA_WIDTH-1 downto 0);
    m_axi_gmem_in_RLAST : IN STD_LOGIC;
    m_axi_gmem_in_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_IN_ID_WIDTH-1 downto 0);
    m_axi_gmem_in_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_IN_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_in_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_in_BVALID : IN STD_LOGIC;
    m_axi_gmem_in_BREADY : OUT STD_LOGIC;
    m_axi_gmem_in_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_in_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_IN_ID_WIDTH-1 downto 0);
    m_axi_gmem_in_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_IN_BUSER_WIDTH-1 downto 0);
    m_axi_gmem_w1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_w1_AWREADY : IN STD_LOGIC;
    m_axi_gmem_w1_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_w1_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W1_ID_WIDTH-1 downto 0);
    m_axi_gmem_w1_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_w1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_w1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_w1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w1_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W1_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_w1_WVALID : OUT STD_LOGIC;
    m_axi_gmem_w1_WREADY : IN STD_LOGIC;
    m_axi_gmem_w1_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W1_DATA_WIDTH-1 downto 0);
    m_axi_gmem_w1_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W1_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_w1_WLAST : OUT STD_LOGIC;
    m_axi_gmem_w1_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W1_ID_WIDTH-1 downto 0);
    m_axi_gmem_w1_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W1_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_w1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_w1_ARREADY : IN STD_LOGIC;
    m_axi_gmem_w1_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_w1_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W1_ID_WIDTH-1 downto 0);
    m_axi_gmem_w1_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_w1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_w1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_w1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w1_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W1_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_w1_RVALID : IN STD_LOGIC;
    m_axi_gmem_w1_RREADY : OUT STD_LOGIC;
    m_axi_gmem_w1_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_W1_DATA_WIDTH-1 downto 0);
    m_axi_gmem_w1_RLAST : IN STD_LOGIC;
    m_axi_gmem_w1_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_W1_ID_WIDTH-1 downto 0);
    m_axi_gmem_w1_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_W1_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_w1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w1_BVALID : IN STD_LOGIC;
    m_axi_gmem_w1_BREADY : OUT STD_LOGIC;
    m_axi_gmem_w1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w1_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_W1_ID_WIDTH-1 downto 0);
    m_axi_gmem_w1_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_W1_BUSER_WIDTH-1 downto 0);
    m_axi_gmem_w2_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_w2_AWREADY : IN STD_LOGIC;
    m_axi_gmem_w2_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_w2_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W2_ID_WIDTH-1 downto 0);
    m_axi_gmem_w2_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_w2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_w2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_w2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w2_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W2_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_w2_WVALID : OUT STD_LOGIC;
    m_axi_gmem_w2_WREADY : IN STD_LOGIC;
    m_axi_gmem_w2_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W2_DATA_WIDTH-1 downto 0);
    m_axi_gmem_w2_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W2_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_w2_WLAST : OUT STD_LOGIC;
    m_axi_gmem_w2_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W2_ID_WIDTH-1 downto 0);
    m_axi_gmem_w2_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W2_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_w2_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_w2_ARREADY : IN STD_LOGIC;
    m_axi_gmem_w2_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_w2_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W2_ID_WIDTH-1 downto 0);
    m_axi_gmem_w2_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_w2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_w2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_w2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w2_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W2_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_w2_RVALID : IN STD_LOGIC;
    m_axi_gmem_w2_RREADY : OUT STD_LOGIC;
    m_axi_gmem_w2_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_W2_DATA_WIDTH-1 downto 0);
    m_axi_gmem_w2_RLAST : IN STD_LOGIC;
    m_axi_gmem_w2_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_W2_ID_WIDTH-1 downto 0);
    m_axi_gmem_w2_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_W2_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_w2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w2_BVALID : IN STD_LOGIC;
    m_axi_gmem_w2_BREADY : OUT STD_LOGIC;
    m_axi_gmem_w2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w2_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_W2_ID_WIDTH-1 downto 0);
    m_axi_gmem_w2_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_W2_BUSER_WIDTH-1 downto 0);
    m_axi_gmem_w3_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_w3_AWREADY : IN STD_LOGIC;
    m_axi_gmem_w3_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W3_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_w3_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W3_ID_WIDTH-1 downto 0);
    m_axi_gmem_w3_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_w3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_w3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_w3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w3_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W3_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_w3_WVALID : OUT STD_LOGIC;
    m_axi_gmem_w3_WREADY : IN STD_LOGIC;
    m_axi_gmem_w3_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W3_DATA_WIDTH-1 downto 0);
    m_axi_gmem_w3_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W3_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_w3_WLAST : OUT STD_LOGIC;
    m_axi_gmem_w3_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W3_ID_WIDTH-1 downto 0);
    m_axi_gmem_w3_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W3_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_w3_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_w3_ARREADY : IN STD_LOGIC;
    m_axi_gmem_w3_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W3_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_w3_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W3_ID_WIDTH-1 downto 0);
    m_axi_gmem_w3_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_w3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_w3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_w3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w3_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_W3_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_w3_RVALID : IN STD_LOGIC;
    m_axi_gmem_w3_RREADY : OUT STD_LOGIC;
    m_axi_gmem_w3_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_W3_DATA_WIDTH-1 downto 0);
    m_axi_gmem_w3_RLAST : IN STD_LOGIC;
    m_axi_gmem_w3_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_W3_ID_WIDTH-1 downto 0);
    m_axi_gmem_w3_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_W3_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_w3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w3_BVALID : IN STD_LOGIC;
    m_axi_gmem_w3_BREADY : OUT STD_LOGIC;
    m_axi_gmem_w3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w3_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_W3_ID_WIDTH-1 downto 0);
    m_axi_gmem_w3_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_W3_BUSER_WIDTH-1 downto 0);
    m_axi_gmem_out_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_out_AWREADY : IN STD_LOGIC;
    m_axi_gmem_out_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUT_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_out_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUT_ID_WIDTH-1 downto 0);
    m_axi_gmem_out_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_out_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_out_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_out_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_out_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_out_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_out_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_out_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_out_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUT_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_out_WVALID : OUT STD_LOGIC;
    m_axi_gmem_out_WREADY : IN STD_LOGIC;
    m_axi_gmem_out_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUT_DATA_WIDTH-1 downto 0);
    m_axi_gmem_out_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUT_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_out_WLAST : OUT STD_LOGIC;
    m_axi_gmem_out_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUT_ID_WIDTH-1 downto 0);
    m_axi_gmem_out_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUT_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_out_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_out_ARREADY : IN STD_LOGIC;
    m_axi_gmem_out_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUT_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_out_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUT_ID_WIDTH-1 downto 0);
    m_axi_gmem_out_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_out_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_out_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_out_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_out_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_out_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_out_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_out_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_out_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUT_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_out_RVALID : IN STD_LOGIC;
    m_axi_gmem_out_RREADY : OUT STD_LOGIC;
    m_axi_gmem_out_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUT_DATA_WIDTH-1 downto 0);
    m_axi_gmem_out_RLAST : IN STD_LOGIC;
    m_axi_gmem_out_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUT_ID_WIDTH-1 downto 0);
    m_axi_gmem_out_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUT_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_out_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_out_BVALID : IN STD_LOGIC;
    m_axi_gmem_out_BREADY : OUT STD_LOGIC;
    m_axi_gmem_out_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_out_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUT_ID_WIDTH-1 downto 0);
    m_axi_gmem_out_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUT_BUSER_WIDTH-1 downto 0);
    s_axi_ctrl_AWVALID : IN STD_LOGIC;
    s_axi_ctrl_AWREADY : OUT STD_LOGIC;
    s_axi_ctrl_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_ctrl_WVALID : IN STD_LOGIC;
    s_axi_ctrl_WREADY : OUT STD_LOGIC;
    s_axi_ctrl_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_ctrl_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_ctrl_ARVALID : IN STD_LOGIC;
    s_axi_ctrl_ARREADY : OUT STD_LOGIC;
    s_axi_ctrl_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_ctrl_RVALID : OUT STD_LOGIC;
    s_axi_ctrl_RREADY : IN STD_LOGIC;
    s_axi_ctrl_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_ctrl_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_ctrl_BVALID : OUT STD_LOGIC;
    s_axi_ctrl_BREADY : IN STD_LOGIC;
    s_axi_ctrl_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of srcnn is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "srcnn_srcnn,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xck26-sfvc784-2LV-c,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.773800,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=78,HLS_SYN_DSP=0,HLS_SYN_FF=48268,HLS_SYN_LUT=51782,HLS_VERSION=2023_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (48 downto 0) := "0000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (48 downto 0) := "0000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (48 downto 0) := "0000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (48 downto 0) := "0000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (48 downto 0) := "0000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (48 downto 0) := "0000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (48 downto 0) := "0001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (48 downto 0) := "0010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (48 downto 0) := "0100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (48 downto 0) := "1000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_320 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100100000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv6_9 : STD_LOGIC_VECTOR (5 downto 0) := "001001";
    constant ap_const_lv6_A : STD_LOGIC_VECTOR (5 downto 0) := "001010";
    constant ap_const_lv6_B : STD_LOGIC_VECTOR (5 downto 0) := "001011";
    constant ap_const_lv6_C : STD_LOGIC_VECTOR (5 downto 0) := "001100";
    constant ap_const_lv6_D : STD_LOGIC_VECTOR (5 downto 0) := "001101";
    constant ap_const_lv6_E : STD_LOGIC_VECTOR (5 downto 0) := "001110";
    constant ap_const_lv6_F : STD_LOGIC_VECTOR (5 downto 0) := "001111";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv6_11 : STD_LOGIC_VECTOR (5 downto 0) := "010001";
    constant ap_const_lv6_12 : STD_LOGIC_VECTOR (5 downto 0) := "010010";
    constant ap_const_lv6_13 : STD_LOGIC_VECTOR (5 downto 0) := "010011";
    constant ap_const_lv6_14 : STD_LOGIC_VECTOR (5 downto 0) := "010100";
    constant ap_const_lv6_15 : STD_LOGIC_VECTOR (5 downto 0) := "010101";
    constant ap_const_lv6_16 : STD_LOGIC_VECTOR (5 downto 0) := "010110";
    constant ap_const_lv6_17 : STD_LOGIC_VECTOR (5 downto 0) := "010111";
    constant ap_const_lv6_18 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_const_lv6_19 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_const_lv6_1A : STD_LOGIC_VECTOR (5 downto 0) := "011010";
    constant ap_const_lv6_1B : STD_LOGIC_VECTOR (5 downto 0) := "011011";
    constant ap_const_lv6_1C : STD_LOGIC_VECTOR (5 downto 0) := "011100";
    constant ap_const_lv6_1D : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv6_1F : STD_LOGIC_VECTOR (5 downto 0) := "011111";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_22 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_const_lv6_23 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv6_25 : STD_LOGIC_VECTOR (5 downto 0) := "100101";
    constant ap_const_lv6_26 : STD_LOGIC_VECTOR (5 downto 0) := "100110";
    constant ap_const_lv6_27 : STD_LOGIC_VECTOR (5 downto 0) := "100111";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv6_29 : STD_LOGIC_VECTOR (5 downto 0) := "101001";
    constant ap_const_lv6_2A : STD_LOGIC_VECTOR (5 downto 0) := "101010";
    constant ap_const_lv6_2B : STD_LOGIC_VECTOR (5 downto 0) := "101011";
    constant ap_const_lv6_2C : STD_LOGIC_VECTOR (5 downto 0) := "101100";
    constant ap_const_lv6_2D : STD_LOGIC_VECTOR (5 downto 0) := "101101";
    constant ap_const_lv6_2E : STD_LOGIC_VECTOR (5 downto 0) := "101110";
    constant ap_const_lv6_2F : STD_LOGIC_VECTOR (5 downto 0) := "101111";
    constant ap_const_lv6_30 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_const_lv6_31 : STD_LOGIC_VECTOR (5 downto 0) := "110001";
    constant ap_const_lv6_32 : STD_LOGIC_VECTOR (5 downto 0) := "110010";
    constant ap_const_lv6_33 : STD_LOGIC_VECTOR (5 downto 0) := "110011";
    constant ap_const_lv6_34 : STD_LOGIC_VECTOR (5 downto 0) := "110100";
    constant ap_const_lv6_35 : STD_LOGIC_VECTOR (5 downto 0) := "110101";
    constant ap_const_lv6_36 : STD_LOGIC_VECTOR (5 downto 0) := "110110";
    constant ap_const_lv6_37 : STD_LOGIC_VECTOR (5 downto 0) := "110111";
    constant ap_const_lv6_38 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_const_lv6_39 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_const_lv6_3A : STD_LOGIC_VECTOR (5 downto 0) := "111010";
    constant ap_const_lv6_3B : STD_LOGIC_VECTOR (5 downto 0) := "111011";
    constant ap_const_lv6_3C : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv6_3D : STD_LOGIC_VECTOR (5 downto 0) := "111101";
    constant ap_const_lv6_3E : STD_LOGIC_VECTOR (5 downto 0) := "111110";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv13_51 : STD_LOGIC_VECTOR (12 downto 0) := "0000001010001";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv9_FF : STD_LOGIC_VECTOR (8 downto 0) := "011111111";
    constant ap_const_lv9_10 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal input_ftmap : STD_LOGIC_VECTOR (63 downto 0);
    signal conv1_weights : STD_LOGIC_VECTOR (63 downto 0);
    signal conv1_biases : STD_LOGIC_VECTOR (63 downto 0);
    signal conv2_weights : STD_LOGIC_VECTOR (63 downto 0);
    signal conv2_biases : STD_LOGIC_VECTOR (63 downto 0);
    signal conv3_weights : STD_LOGIC_VECTOR (63 downto 0);
    signal conv3_biases : STD_LOGIC_VECTOR (63 downto 0);
    signal output_ftmap : STD_LOGIC_VECTOR (63 downto 0);
    signal weights_loaded : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_61 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal w1_loc_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal w1_loc_ce0 : STD_LOGIC;
    signal w1_loc_we0 : STD_LOGIC;
    signal w1_loc_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_we0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_we0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_we0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_we0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_we0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_we0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_we0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_we0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0 : STD_LOGIC;
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_w1_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal gmem_w1_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal gmem_w2_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal gmem_w2_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal gmem_w3_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal gmem_w3_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal output_ftmap_read_reg_2114 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv3_biases_read_reg_2119 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv3_weights_read_reg_2124 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv2_biases_read_reg_2129 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv2_weights_read_reg_2134 : STD_LOGIC_VECTOR (63 downto 0);
    signal input_ftmap_read_reg_2139 : STD_LOGIC_VECTOR (63 downto 0);
    signal weights_loaded_load_load_fu_1147_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal weights_loaded_load_reg_2144 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln344_1_reg_2162 : STD_LOGIC_VECTOR (61 downto 0);
    signal sext_ln344_fu_1171_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal sext_ln344_reg_2167 : STD_LOGIC_VECTOR (62 downto 0);
    signal phi_mul_load_reg_2172 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln344_1_fu_1191_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln344_1_reg_2180 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln344_fu_1203_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln344_reg_2188 : STD_LOGIC_VECTOR (6 downto 0);
    signal gmem_w1_addr_reg_2193 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln344_fu_1197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln356_fu_1237_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal sext_ln356_reg_2206 : STD_LOGIC_VECTOR (62 downto 0);
    signal sext_ln356_1_fu_1250_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal sext_ln356_1_reg_2211 : STD_LOGIC_VECTOR (62 downto 0);
    signal add_ln350_3_fu_1273_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln350_3_reg_2216 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln356_fu_1681_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln356_reg_2224 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal trunc_ln356_2_fu_1685_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln356_2_reg_2229 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln356_fu_1699_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln356_reg_2236 : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_2241 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln356_fu_1693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_w2_addr_reg_2246 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_w3_addr_reg_2252 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln4_reg_2258 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln356_1_fu_1765_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln356_1_reg_2264 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_5_fu_1769_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_reg_2269 : STD_LOGIC_VECTOR (7 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_45_reg_2274 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_46_reg_2279 : STD_LOGIC_VECTOR (7 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_47_reg_2284 : STD_LOGIC_VECTOR (7 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_48_reg_2289 : STD_LOGIC_VECTOR (7 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_49_reg_2294 : STD_LOGIC_VECTOR (7 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_50_reg_2299 : STD_LOGIC_VECTOR (7 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_51_reg_2304 : STD_LOGIC_VECTOR (7 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_52_reg_2309 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln359_fu_2003_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln359_reg_2317 : STD_LOGIC_VECTOR (6 downto 0);
    signal gmem_w2_addr_1_reg_2322 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln359_fu_1997_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln364_fu_2037_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln364_reg_2328 : STD_LOGIC_VECTOR (31 downto 0);
    signal h0_2_reg_2352 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal h0_3_fu_2081_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal h0_3_reg_2360 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln398_fu_2075_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w0_1_fu_2093_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal w0_1_reg_2368 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal icmp_ln400_fu_2087_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phase_1_fu_2099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phase_1_reg_2373 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln400_fu_2105_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln400_reg_2378 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_ap_start : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_ap_done : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_ap_idle : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_ap_ready : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_AWVALID : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_WVALID : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_WLAST : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARVALID : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_RREADY : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_BREADY : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_w1_loc_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_w1_loc_ce0 : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_w1_loc_we0 : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_w1_loc_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_ap_start : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_ap_done : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_ap_idle : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_ap_ready : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_AWVALID : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_WVALID : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_WLAST : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARVALID : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_RREADY : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_BREADY : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0 : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0 : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0 : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0 : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0 : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0 : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0 : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0 : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0 : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0 : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0 : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0 : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0 : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0 : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0 : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0 : STD_LOGIC;
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_AWVALID : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_WVALID : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_WLAST : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARVALID : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_RREADY : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_BREADY : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWVALID : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_WVALID : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_WLAST : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_ARVALID : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_RREADY : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_BREADY : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_w1_loc_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_w1_loc_ce0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_w1_loc_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_w1_loc_we0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_we0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_we0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_we0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_we0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_we0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_we0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_we0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_we0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0 : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_start : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_done : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_ready : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_idle : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_continue : STD_LOGIC;
    signal gmem_in_AWREADY : STD_LOGIC;
    signal gmem_in_WREADY : STD_LOGIC;
    signal gmem_in_ARVALID : STD_LOGIC;
    signal gmem_in_ARREADY : STD_LOGIC;
    signal gmem_in_RVALID : STD_LOGIC;
    signal gmem_in_RREADY : STD_LOGIC;
    signal gmem_in_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_in_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem_in_BVALID : STD_LOGIC;
    signal gmem_out_AWVALID : STD_LOGIC;
    signal gmem_out_AWREADY : STD_LOGIC;
    signal gmem_out_WVALID : STD_LOGIC;
    signal gmem_out_WREADY : STD_LOGIC;
    signal gmem_out_ARREADY : STD_LOGIC;
    signal gmem_out_RVALID : STD_LOGIC;
    signal gmem_out_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_out_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem_out_BVALID : STD_LOGIC;
    signal gmem_out_BREADY : STD_LOGIC;
    signal gmem_w1_AWREADY : STD_LOGIC;
    signal gmem_w1_WREADY : STD_LOGIC;
    signal gmem_w1_ARVALID : STD_LOGIC;
    signal gmem_w1_ARREADY : STD_LOGIC;
    signal gmem_w1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_w1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_w1_RVALID : STD_LOGIC;
    signal gmem_w1_RREADY : STD_LOGIC;
    signal gmem_w1_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_w1_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem_w1_BVALID : STD_LOGIC;
    signal gmem_w2_AWREADY : STD_LOGIC;
    signal gmem_w2_WREADY : STD_LOGIC;
    signal gmem_w2_ARVALID : STD_LOGIC;
    signal gmem_w2_ARREADY : STD_LOGIC;
    signal gmem_w2_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_w2_RVALID : STD_LOGIC;
    signal gmem_w2_RREADY : STD_LOGIC;
    signal gmem_w2_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_w2_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem_w2_BVALID : STD_LOGIC;
    signal gmem_w3_AWREADY : STD_LOGIC;
    signal gmem_w3_WREADY : STD_LOGIC;
    signal gmem_w3_ARVALID : STD_LOGIC;
    signal gmem_w3_ARREADY : STD_LOGIC;
    signal gmem_w3_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_w3_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_w3_RVALID : STD_LOGIC;
    signal gmem_w3_RREADY : STD_LOGIC;
    signal gmem_w3_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_w3_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem_w3_BVALID : STD_LOGIC;
    signal i2_reg_833 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal phase_reg_844 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_sync_grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_ready : STD_LOGIC;
    signal ap_sync_grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_done : STD_LOGIC;
    signal ap_block_state49_on_subcall_done : BOOLEAN;
    signal w0_reg_856 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_start_reg : STD_LOGIC := '0';
    signal ap_sync_reg_grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_ready : STD_LOGIC := '0';
    signal ap_sync_reg_grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_done : STD_LOGIC := '0';
    signal zext_ln364_2_fu_1985_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln345_fu_1218_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln358_fu_1720_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln373_fu_1739_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln364_fu_2023_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln374_fu_2041_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state46_on_subcall_done : BOOLEAN;
    signal bitcast_ln345_fu_1279_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln344_fu_1283_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal bitcast_ln358_fu_1776_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln373_fu_2051_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_mul_fu_618 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal c1_fu_622 : STD_LOGIC_VECTOR (6 downto 0);
    signal c2_fu_626 : STD_LOGIC_VECTOR (5 downto 0);
    signal h0_fu_630 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln344_2_fu_1161_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln344_fu_1209_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal add_ln345_fu_1213_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal trunc_ln_fu_1228_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln356_1_fu_1241_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_fu_1262_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln350_5_fu_1269_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln350_fu_1259_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln356_fu_1689_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal add_ln358_fu_1715_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal trunc_ln3_fu_1730_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln_fu_1758_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln364_1_fu_1976_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln364_2_fu_1980_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln359_fu_1972_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln364_fu_2009_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln364_fu_2014_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal add_ln364_1_fu_2018_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (48 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component srcnn_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_w1_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_w1_AWREADY : IN STD_LOGIC;
        m_axi_gmem_w1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_w1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_w1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_w1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_w1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_w1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_w1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_w1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_w1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_w1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w1_WVALID : OUT STD_LOGIC;
        m_axi_gmem_w1_WREADY : IN STD_LOGIC;
        m_axi_gmem_w1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_w1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_w1_WLAST : OUT STD_LOGIC;
        m_axi_gmem_w1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w1_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_w1_ARREADY : IN STD_LOGIC;
        m_axi_gmem_w1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_w1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_w1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_w1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_w1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_w1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_w1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_w1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_w1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_w1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w1_RVALID : IN STD_LOGIC;
        m_axi_gmem_w1_RREADY : OUT STD_LOGIC;
        m_axi_gmem_w1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_w1_RLAST : IN STD_LOGIC;
        m_axi_gmem_w1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w1_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_w1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_w1_BVALID : IN STD_LOGIC;
        m_axi_gmem_w1_BREADY : OUT STD_LOGIC;
        m_axi_gmem_w1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_w1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        add_ln350_3 : IN STD_LOGIC_VECTOR (10 downto 0);
        sext_ln344 : IN STD_LOGIC_VECTOR (61 downto 0);
        zext_ln344_3 : IN STD_LOGIC_VECTOR (12 downto 0);
        w1_loc_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        w1_loc_ce0 : OUT STD_LOGIC;
        w1_loc_we0 : OUT STD_LOGIC;
        w1_loc_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_w3_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_w3_AWREADY : IN STD_LOGIC;
        m_axi_gmem_w3_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_w3_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w3_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_w3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_w3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_w3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_w3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_w3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_w3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_w3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_w3_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w3_WVALID : OUT STD_LOGIC;
        m_axi_gmem_w3_WREADY : IN STD_LOGIC;
        m_axi_gmem_w3_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_w3_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_w3_WLAST : OUT STD_LOGIC;
        m_axi_gmem_w3_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w3_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w3_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_w3_ARREADY : IN STD_LOGIC;
        m_axi_gmem_w3_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_w3_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w3_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_w3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_w3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_w3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_w3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_w3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_w3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_w3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_w3_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w3_RVALID : IN STD_LOGIC;
        m_axi_gmem_w3_RREADY : OUT STD_LOGIC;
        m_axi_gmem_w3_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_w3_RLAST : IN STD_LOGIC;
        m_axi_gmem_w3_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w3_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_w3_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_w3_BVALID : IN STD_LOGIC;
        m_axi_gmem_w3_BREADY : OUT STD_LOGIC;
        m_axi_gmem_w3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_w3_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w3_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln374 : IN STD_LOGIC_VECTOR (61 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_dataflow_in_loop_VITIS_LOOP_400_12 IS
    port (
        m_axi_gmem_in_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_in_AWREADY : IN STD_LOGIC;
        m_axi_gmem_in_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_in_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_in_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_in_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_in_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_in_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_in_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_in_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_in_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_in_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_in_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_in_WVALID : OUT STD_LOGIC;
        m_axi_gmem_in_WREADY : IN STD_LOGIC;
        m_axi_gmem_in_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_in_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_in_WLAST : OUT STD_LOGIC;
        m_axi_gmem_in_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_in_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_in_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_in_ARREADY : IN STD_LOGIC;
        m_axi_gmem_in_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_in_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_in_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_in_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_in_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_in_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_in_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_in_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_in_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_in_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_in_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_in_RVALID : IN STD_LOGIC;
        m_axi_gmem_in_RREADY : OUT STD_LOGIC;
        m_axi_gmem_in_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_in_RLAST : IN STD_LOGIC;
        m_axi_gmem_in_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_in_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_in_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_in_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_in_BVALID : IN STD_LOGIC;
        m_axi_gmem_in_BREADY : OUT STD_LOGIC;
        m_axi_gmem_in_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_in_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_in_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        input_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
        h0 : IN STD_LOGIC_VECTOR (8 downto 0);
        w0 : IN STD_LOGIC_VECTOR (7 downto 0);
        phase : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_out_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_out_AWREADY : IN STD_LOGIC;
        m_axi_gmem_out_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_out_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_out_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_out_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_out_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_out_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_out_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_out_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_out_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_out_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_out_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_out_WVALID : OUT STD_LOGIC;
        m_axi_gmem_out_WREADY : IN STD_LOGIC;
        m_axi_gmem_out_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_out_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_out_WLAST : OUT STD_LOGIC;
        m_axi_gmem_out_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_out_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_out_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_out_ARREADY : IN STD_LOGIC;
        m_axi_gmem_out_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_out_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_out_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_out_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_out_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_out_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_out_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_out_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_out_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_out_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_out_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_out_RVALID : IN STD_LOGIC;
        m_axi_gmem_out_RREADY : OUT STD_LOGIC;
        m_axi_gmem_out_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_out_RLAST : IN STD_LOGIC;
        m_axi_gmem_out_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_out_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_out_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_out_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_out_BVALID : IN STD_LOGIC;
        m_axi_gmem_out_BREADY : OUT STD_LOGIC;
        m_axi_gmem_out_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_out_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_out_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        output_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_16 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_26 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_18 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_16 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_24 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_25 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_17 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_17 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_25 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_24 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_10 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_18 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_26 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_23 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_11 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_19 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_27 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_22 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_12 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_20 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_28 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_21 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_13 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_21 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_29 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_20 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_14 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_22 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_30 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_19 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_15 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_23 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_31 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_29 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_28 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_27 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_10 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_11 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_12 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_13 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_14 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_15 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_16 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_17 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_18 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_19 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_20 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_21 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_22 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_23 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_24 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_25 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_26 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_27 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_28 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_29 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_30 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_31 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_32 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_33 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_34 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_35 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_36 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_37 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_38 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_39 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_40 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_41 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_42 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_43 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_44 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_45 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_46 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_47 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_48 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_49 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_50 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_51 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_52 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_53 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_54 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_55 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_56 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_57 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_58 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_59 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_60 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_61 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_62 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_63 : IN STD_LOGIC_VECTOR (31 downto 0);
        w1_loc_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        w1_loc_ce0 : OUT STD_LOGIC;
        w1_loc_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        w1_loc_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        w1_loc_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0 : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        output_ftmap_ap_vld : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        input_ftmap_ap_vld : IN STD_LOGIC;
        h0_ap_vld : IN STD_LOGIC;
        w0_ap_vld : IN STD_LOGIC;
        phase_ap_vld : IN STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_16_ap_vld : IN STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_26_ap_vld : IN STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_18_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_16_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_24_ap_vld : IN STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_25_ap_vld : IN STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_17_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_17_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_25_ap_vld : IN STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_24_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_10_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_18_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_26_ap_vld : IN STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_23_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_11_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_19_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_27_ap_vld : IN STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_22_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_12_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_20_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_28_ap_vld : IN STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_21_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_13_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_21_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_29_ap_vld : IN STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_20_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_14_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_22_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_30_ap_vld : IN STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_19_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_15_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_23_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_31_ap_vld : IN STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_ap_vld : IN STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_ap_vld : IN STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_ap_vld : IN STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_ap_vld : IN STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_ap_vld : IN STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_ap_vld : IN STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_ap_vld : IN STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_29_ap_vld : IN STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_28_ap_vld : IN STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_27_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_10_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_11_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_12_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_13_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_14_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_15_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_16_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_17_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_18_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_19_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_20_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_21_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_22_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_23_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_24_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_25_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_26_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_27_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_28_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_29_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_30_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_31_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_32_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_33_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_34_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_35_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_36_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_37_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_38_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_39_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_40_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_41_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_42_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_43_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_44_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_45_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_46_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_47_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_48_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_49_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_50_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_51_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_52_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_53_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_54_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_55_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_56_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_57_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_58_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_59_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_60_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_61_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_62_ap_vld : IN STD_LOGIC;
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_63_ap_vld : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component srcnn_w1_loc_RAM_1P_LUTRAM_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_RAM_1P_BRAM_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_RAM_1P_BRAM_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_ctrl_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        input_ftmap : OUT STD_LOGIC_VECTOR (63 downto 0);
        conv1_weights : OUT STD_LOGIC_VECTOR (63 downto 0);
        conv1_biases : OUT STD_LOGIC_VECTOR (63 downto 0);
        conv2_weights : OUT STD_LOGIC_VECTOR (63 downto 0);
        conv2_biases : OUT STD_LOGIC_VECTOR (63 downto 0);
        conv3_weights : OUT STD_LOGIC_VECTOR (63 downto 0);
        conv3_biases : OUT STD_LOGIC_VECTOR (63 downto 0);
        output_ftmap : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component srcnn_gmem_in_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;


    component srcnn_gmem_out_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;


    component srcnn_gmem_w1_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;


    component srcnn_gmem_w2_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;


    component srcnn_gmem_w3_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    w1_loc_U : component srcnn_w1_loc_RAM_1P_LUTRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 5184,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => w1_loc_address0,
        ce0 => w1_loc_ce0,
        we0 => w1_loc_we0,
        d0 => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_w1_loc_d0,
        q0 => w1_loc_q0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_U : component srcnn_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_RAM_1P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0,
        ce0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0,
        we0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_we0,
        d0 => bitcast_ln364_reg_2328,
        q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_q0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_U : component srcnn_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_RAM_1P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0,
        ce0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0,
        we0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_we0,
        d0 => bitcast_ln364_reg_2328,
        q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_q0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_U : component srcnn_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_RAM_1P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0,
        ce0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0,
        we0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_we0,
        d0 => bitcast_ln364_reg_2328,
        q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_q0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_U : component srcnn_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_RAM_1P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0,
        ce0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0,
        we0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_we0,
        d0 => bitcast_ln364_reg_2328,
        q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_q0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_U : component srcnn_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_RAM_1P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0,
        ce0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0,
        we0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_we0,
        d0 => bitcast_ln364_reg_2328,
        q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_q0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_U : component srcnn_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_RAM_1P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0,
        ce0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0,
        we0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_we0,
        d0 => bitcast_ln364_reg_2328,
        q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_q0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_U : component srcnn_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_RAM_1P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0,
        ce0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0,
        we0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_we0,
        d0 => bitcast_ln364_reg_2328,
        q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_q0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_U : component srcnn_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_RAM_1P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0,
        ce0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0,
        we0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_we0,
        d0 => bitcast_ln364_reg_2328,
        q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_q0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_U : component srcnn_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_RAM_1P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0,
        ce0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0,
        we0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0,
        d0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_d0,
        q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_q0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_U : component srcnn_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_RAM_1P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0,
        ce0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0,
        we0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0,
        d0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_d0,
        q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_q0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_U : component srcnn_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_RAM_1P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0,
        ce0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0,
        we0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0,
        d0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_d0,
        q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_q0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_U : component srcnn_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_RAM_1P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0,
        ce0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0,
        we0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0,
        d0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_d0,
        q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_q0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_U : component srcnn_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_RAM_1P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0,
        ce0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0,
        we0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0,
        d0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_d0,
        q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_q0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_U : component srcnn_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_RAM_1P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0,
        ce0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0,
        we0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0,
        d0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_d0,
        q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_q0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_U : component srcnn_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_RAM_1P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0,
        ce0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0,
        we0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0,
        d0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_d0,
        q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_q0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_U : component srcnn_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_RAM_1P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0,
        ce0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0,
        we0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0,
        d0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_d0,
        q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_q0);

    grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867 : component srcnn_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_ap_start,
        ap_done => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_ap_done,
        ap_idle => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_ap_idle,
        ap_ready => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_ap_ready,
        m_axi_gmem_w1_AWVALID => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_AWVALID,
        m_axi_gmem_w1_AWREADY => ap_const_logic_0,
        m_axi_gmem_w1_AWADDR => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_AWADDR,
        m_axi_gmem_w1_AWID => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_AWID,
        m_axi_gmem_w1_AWLEN => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_AWLEN,
        m_axi_gmem_w1_AWSIZE => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_AWSIZE,
        m_axi_gmem_w1_AWBURST => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_AWBURST,
        m_axi_gmem_w1_AWLOCK => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_AWLOCK,
        m_axi_gmem_w1_AWCACHE => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_AWCACHE,
        m_axi_gmem_w1_AWPROT => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_AWPROT,
        m_axi_gmem_w1_AWQOS => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_AWQOS,
        m_axi_gmem_w1_AWREGION => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_AWREGION,
        m_axi_gmem_w1_AWUSER => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_AWUSER,
        m_axi_gmem_w1_WVALID => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_WVALID,
        m_axi_gmem_w1_WREADY => ap_const_logic_0,
        m_axi_gmem_w1_WDATA => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_WDATA,
        m_axi_gmem_w1_WSTRB => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_WSTRB,
        m_axi_gmem_w1_WLAST => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_WLAST,
        m_axi_gmem_w1_WID => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_WID,
        m_axi_gmem_w1_WUSER => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_WUSER,
        m_axi_gmem_w1_ARVALID => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARVALID,
        m_axi_gmem_w1_ARREADY => gmem_w1_ARREADY,
        m_axi_gmem_w1_ARADDR => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARADDR,
        m_axi_gmem_w1_ARID => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARID,
        m_axi_gmem_w1_ARLEN => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARLEN,
        m_axi_gmem_w1_ARSIZE => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARSIZE,
        m_axi_gmem_w1_ARBURST => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARBURST,
        m_axi_gmem_w1_ARLOCK => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARLOCK,
        m_axi_gmem_w1_ARCACHE => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARCACHE,
        m_axi_gmem_w1_ARPROT => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARPROT,
        m_axi_gmem_w1_ARQOS => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARQOS,
        m_axi_gmem_w1_ARREGION => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARREGION,
        m_axi_gmem_w1_ARUSER => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARUSER,
        m_axi_gmem_w1_RVALID => gmem_w1_RVALID,
        m_axi_gmem_w1_RREADY => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_RREADY,
        m_axi_gmem_w1_RDATA => gmem_w1_RDATA,
        m_axi_gmem_w1_RLAST => ap_const_logic_0,
        m_axi_gmem_w1_RID => ap_const_lv1_0,
        m_axi_gmem_w1_RFIFONUM => gmem_w1_RFIFONUM,
        m_axi_gmem_w1_RUSER => ap_const_lv1_0,
        m_axi_gmem_w1_RRESP => ap_const_lv2_0,
        m_axi_gmem_w1_BVALID => ap_const_logic_0,
        m_axi_gmem_w1_BREADY => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_BREADY,
        m_axi_gmem_w1_BRESP => ap_const_lv2_0,
        m_axi_gmem_w1_BID => ap_const_lv1_0,
        m_axi_gmem_w1_BUSER => ap_const_lv1_0,
        add_ln350_3 => add_ln350_3_reg_2216,
        sext_ln344 => trunc_ln344_1_reg_2162,
        zext_ln344_3 => phi_mul_load_reg_2172,
        w1_loc_address0 => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_w1_loc_address0,
        w1_loc_ce0 => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_w1_loc_ce0,
        w1_loc_we0 => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_w1_loc_we0,
        w1_loc_d0 => grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_w1_loc_d0);

    grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878 : component srcnn_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_ap_start,
        ap_done => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_ap_done,
        ap_idle => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_ap_idle,
        ap_ready => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_ap_ready,
        m_axi_gmem_w3_AWVALID => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_AWVALID,
        m_axi_gmem_w3_AWREADY => ap_const_logic_0,
        m_axi_gmem_w3_AWADDR => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_AWADDR,
        m_axi_gmem_w3_AWID => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_AWID,
        m_axi_gmem_w3_AWLEN => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_AWLEN,
        m_axi_gmem_w3_AWSIZE => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_AWSIZE,
        m_axi_gmem_w3_AWBURST => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_AWBURST,
        m_axi_gmem_w3_AWLOCK => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_AWLOCK,
        m_axi_gmem_w3_AWCACHE => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_AWCACHE,
        m_axi_gmem_w3_AWPROT => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_AWPROT,
        m_axi_gmem_w3_AWQOS => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_AWQOS,
        m_axi_gmem_w3_AWREGION => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_AWREGION,
        m_axi_gmem_w3_AWUSER => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_AWUSER,
        m_axi_gmem_w3_WVALID => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_WVALID,
        m_axi_gmem_w3_WREADY => ap_const_logic_0,
        m_axi_gmem_w3_WDATA => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_WDATA,
        m_axi_gmem_w3_WSTRB => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_WSTRB,
        m_axi_gmem_w3_WLAST => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_WLAST,
        m_axi_gmem_w3_WID => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_WID,
        m_axi_gmem_w3_WUSER => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_WUSER,
        m_axi_gmem_w3_ARVALID => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARVALID,
        m_axi_gmem_w3_ARREADY => gmem_w3_ARREADY,
        m_axi_gmem_w3_ARADDR => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARADDR,
        m_axi_gmem_w3_ARID => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARID,
        m_axi_gmem_w3_ARLEN => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARLEN,
        m_axi_gmem_w3_ARSIZE => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARSIZE,
        m_axi_gmem_w3_ARBURST => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARBURST,
        m_axi_gmem_w3_ARLOCK => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARLOCK,
        m_axi_gmem_w3_ARCACHE => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARCACHE,
        m_axi_gmem_w3_ARPROT => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARPROT,
        m_axi_gmem_w3_ARQOS => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARQOS,
        m_axi_gmem_w3_ARREGION => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARREGION,
        m_axi_gmem_w3_ARUSER => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARUSER,
        m_axi_gmem_w3_RVALID => gmem_w3_RVALID,
        m_axi_gmem_w3_RREADY => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_RREADY,
        m_axi_gmem_w3_RDATA => gmem_w3_RDATA,
        m_axi_gmem_w3_RLAST => ap_const_logic_0,
        m_axi_gmem_w3_RID => ap_const_lv1_0,
        m_axi_gmem_w3_RFIFONUM => gmem_w3_RFIFONUM,
        m_axi_gmem_w3_RUSER => ap_const_lv1_0,
        m_axi_gmem_w3_RRESP => ap_const_lv2_0,
        m_axi_gmem_w3_BVALID => ap_const_logic_0,
        m_axi_gmem_w3_BREADY => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_BREADY,
        m_axi_gmem_w3_BRESP => ap_const_lv2_0,
        m_axi_gmem_w3_BID => ap_const_lv1_0,
        m_axi_gmem_w3_BUSER => ap_const_lv1_0,
        sext_ln374 => trunc_ln4_reg_2258,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_d0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_d0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_d0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_d0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_d0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_d0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_d0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_d0 => grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_d0);

    grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901 : component srcnn_dataflow_in_loop_VITIS_LOOP_400_12
    port map (
        m_axi_gmem_in_AWVALID => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_AWVALID,
        m_axi_gmem_in_AWREADY => ap_const_logic_0,
        m_axi_gmem_in_AWADDR => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_AWADDR,
        m_axi_gmem_in_AWID => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_AWID,
        m_axi_gmem_in_AWLEN => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_AWLEN,
        m_axi_gmem_in_AWSIZE => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_AWSIZE,
        m_axi_gmem_in_AWBURST => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_AWBURST,
        m_axi_gmem_in_AWLOCK => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_AWLOCK,
        m_axi_gmem_in_AWCACHE => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_AWCACHE,
        m_axi_gmem_in_AWPROT => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_AWPROT,
        m_axi_gmem_in_AWQOS => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_AWQOS,
        m_axi_gmem_in_AWREGION => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_AWREGION,
        m_axi_gmem_in_AWUSER => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_AWUSER,
        m_axi_gmem_in_WVALID => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_WVALID,
        m_axi_gmem_in_WREADY => ap_const_logic_0,
        m_axi_gmem_in_WDATA => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_WDATA,
        m_axi_gmem_in_WSTRB => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_WSTRB,
        m_axi_gmem_in_WLAST => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_WLAST,
        m_axi_gmem_in_WID => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_WID,
        m_axi_gmem_in_WUSER => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_WUSER,
        m_axi_gmem_in_ARVALID => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARVALID,
        m_axi_gmem_in_ARREADY => gmem_in_ARREADY,
        m_axi_gmem_in_ARADDR => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARADDR,
        m_axi_gmem_in_ARID => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARID,
        m_axi_gmem_in_ARLEN => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARLEN,
        m_axi_gmem_in_ARSIZE => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARSIZE,
        m_axi_gmem_in_ARBURST => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARBURST,
        m_axi_gmem_in_ARLOCK => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARLOCK,
        m_axi_gmem_in_ARCACHE => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARCACHE,
        m_axi_gmem_in_ARPROT => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARPROT,
        m_axi_gmem_in_ARQOS => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARQOS,
        m_axi_gmem_in_ARREGION => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARREGION,
        m_axi_gmem_in_ARUSER => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARUSER,
        m_axi_gmem_in_RVALID => gmem_in_RVALID,
        m_axi_gmem_in_RREADY => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_RREADY,
        m_axi_gmem_in_RDATA => gmem_in_RDATA,
        m_axi_gmem_in_RLAST => ap_const_logic_0,
        m_axi_gmem_in_RID => ap_const_lv1_0,
        m_axi_gmem_in_RFIFONUM => gmem_in_RFIFONUM,
        m_axi_gmem_in_RUSER => ap_const_lv1_0,
        m_axi_gmem_in_RRESP => ap_const_lv2_0,
        m_axi_gmem_in_BVALID => ap_const_logic_0,
        m_axi_gmem_in_BREADY => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_BREADY,
        m_axi_gmem_in_BRESP => ap_const_lv2_0,
        m_axi_gmem_in_BID => ap_const_lv1_0,
        m_axi_gmem_in_BUSER => ap_const_lv1_0,
        input_ftmap => input_ftmap_read_reg_2139,
        h0 => h0_2_reg_2352,
        w0 => trunc_ln400_reg_2378,
        phase => phase_reg_844,
        m_axi_gmem_out_AWVALID => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWVALID,
        m_axi_gmem_out_AWREADY => gmem_out_AWREADY,
        m_axi_gmem_out_AWADDR => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWADDR,
        m_axi_gmem_out_AWID => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWID,
        m_axi_gmem_out_AWLEN => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWLEN,
        m_axi_gmem_out_AWSIZE => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWSIZE,
        m_axi_gmem_out_AWBURST => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWBURST,
        m_axi_gmem_out_AWLOCK => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWLOCK,
        m_axi_gmem_out_AWCACHE => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWCACHE,
        m_axi_gmem_out_AWPROT => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWPROT,
        m_axi_gmem_out_AWQOS => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWQOS,
        m_axi_gmem_out_AWREGION => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWREGION,
        m_axi_gmem_out_AWUSER => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWUSER,
        m_axi_gmem_out_WVALID => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_WVALID,
        m_axi_gmem_out_WREADY => gmem_out_WREADY,
        m_axi_gmem_out_WDATA => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_WDATA,
        m_axi_gmem_out_WSTRB => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_WSTRB,
        m_axi_gmem_out_WLAST => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_WLAST,
        m_axi_gmem_out_WID => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_WID,
        m_axi_gmem_out_WUSER => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_WUSER,
        m_axi_gmem_out_ARVALID => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_ARVALID,
        m_axi_gmem_out_ARREADY => ap_const_logic_0,
        m_axi_gmem_out_ARADDR => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_ARADDR,
        m_axi_gmem_out_ARID => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_ARID,
        m_axi_gmem_out_ARLEN => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_ARLEN,
        m_axi_gmem_out_ARSIZE => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_ARSIZE,
        m_axi_gmem_out_ARBURST => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_ARBURST,
        m_axi_gmem_out_ARLOCK => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_ARLOCK,
        m_axi_gmem_out_ARCACHE => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_ARCACHE,
        m_axi_gmem_out_ARPROT => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_ARPROT,
        m_axi_gmem_out_ARQOS => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_ARQOS,
        m_axi_gmem_out_ARREGION => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_ARREGION,
        m_axi_gmem_out_ARUSER => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_ARUSER,
        m_axi_gmem_out_RVALID => ap_const_logic_0,
        m_axi_gmem_out_RREADY => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_RREADY,
        m_axi_gmem_out_RDATA => ap_const_lv32_0,
        m_axi_gmem_out_RLAST => ap_const_logic_0,
        m_axi_gmem_out_RID => ap_const_lv1_0,
        m_axi_gmem_out_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem_out_RUSER => ap_const_lv1_0,
        m_axi_gmem_out_RRESP => ap_const_lv2_0,
        m_axi_gmem_out_BVALID => gmem_out_BVALID,
        m_axi_gmem_out_BREADY => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_BREADY,
        m_axi_gmem_out_BRESP => ap_const_lv2_0,
        m_axi_gmem_out_BID => ap_const_lv1_0,
        m_axi_gmem_out_BUSER => ap_const_lv1_0,
        output_ftmap => output_ftmap_read_reg_2114,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_16 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_16,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_26 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_26,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_18 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_18,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_16 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_16,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_24 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_24,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_25 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_25,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_17 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_17,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_17 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_17,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_25 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_25,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_24 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_24,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_10 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_10,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_18 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_18,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_26 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_26,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_23 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_23,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_11 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_11,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_19 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_19,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_27 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_27,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_22 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_22,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_12 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_12,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_20 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_20,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_28 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_28,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_21 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_21,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_13 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_13,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_21 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_21,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_29 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_29,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_20 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_20,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_14 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_14,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_22 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_22,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_30 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_30,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_19 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_19,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_15 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_15,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_23 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_23,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_31 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_31,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_29 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_29,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_28 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_28,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_27 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_27,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_10 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_10,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_11 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_11,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_12 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_12,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_13 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_13,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_14 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_14,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_15 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_15,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_16 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_16,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_17 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_17,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_18 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_18,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_19 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_19,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_20 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_20,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_21 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_21,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_22 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_22,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_23 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_23,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_24 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_24,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_25 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_25,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_26 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_26,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_27 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_27,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_28 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_28,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_29 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_29,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_30 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_30,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_31 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_31,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_32 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_32,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_33 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_33,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_34 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_34,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_35 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_35,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_36 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_36,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_37 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_37,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_38 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_38,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_39 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_39,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_40 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_40,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_41 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_41,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_42 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_42,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_43 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_43,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_44 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_44,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_45 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_45,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_46 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_46,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_47 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_47,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_48 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_48,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_49 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_49,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_50 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_50,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_51 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_51,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_52 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_52,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_53 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_53,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_54 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_54,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_55 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_55,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_56 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_56,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_57 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_57,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_58 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_58,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_59 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_59,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_60 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_60,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_61 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_61,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_62 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_62,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_63 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_63,
        w1_loc_address0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_w1_loc_address0,
        w1_loc_ce0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_w1_loc_ce0,
        w1_loc_d0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_w1_loc_d0,
        w1_loc_q0 => w1_loc_q0,
        w1_loc_we0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_w1_loc_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_d0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_we0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_d0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_we0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_d0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_we0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_d0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_we0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_d0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_we0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_d0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_we0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_d0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_we0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_d0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_we0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_d0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_d0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_d0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_d0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_d0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_d0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_d0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_d0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0 => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0,
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        output_ftmap_ap_vld => ap_const_logic_1,
        ap_start => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_start,
        input_ftmap_ap_vld => ap_const_logic_1,
        h0_ap_vld => ap_const_logic_1,
        w0_ap_vld => ap_const_logic_1,
        phase_ap_vld => ap_const_logic_1,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_16_ap_vld => ap_const_logic_1,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_26_ap_vld => ap_const_logic_1,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_18_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_16_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_24_ap_vld => ap_const_logic_1,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_25_ap_vld => ap_const_logic_1,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_17_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_17_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_25_ap_vld => ap_const_logic_1,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_24_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_10_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_18_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_26_ap_vld => ap_const_logic_1,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_23_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_11_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_19_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_27_ap_vld => ap_const_logic_1,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_22_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_12_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_20_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_28_ap_vld => ap_const_logic_1,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_21_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_13_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_21_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_29_ap_vld => ap_const_logic_1,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_20_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_14_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_22_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_30_ap_vld => ap_const_logic_1,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_19_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_15_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_23_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_31_ap_vld => ap_const_logic_1,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_ap_vld => ap_const_logic_1,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_ap_vld => ap_const_logic_1,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_ap_vld => ap_const_logic_1,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_ap_vld => ap_const_logic_1,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_ap_vld => ap_const_logic_1,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_ap_vld => ap_const_logic_1,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_ap_vld => ap_const_logic_1,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_29_ap_vld => ap_const_logic_1,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_28_ap_vld => ap_const_logic_1,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_27_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_10_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_11_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_12_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_13_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_14_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_15_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_16_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_17_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_18_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_19_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_20_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_21_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_22_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_23_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_24_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_25_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_26_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_27_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_28_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_29_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_30_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_31_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_32_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_33_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_34_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_35_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_36_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_37_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_38_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_39_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_40_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_41_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_42_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_43_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_44_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_45_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_46_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_47_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_48_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_49_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_50_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_51_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_52_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_53_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_54_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_55_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_56_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_57_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_58_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_59_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_60_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_61_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_62_ap_vld => ap_const_logic_1,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_63_ap_vld => ap_const_logic_1,
        ap_done => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_done,
        ap_ready => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_ready,
        ap_idle => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_idle,
        ap_continue => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_continue);

    ctrl_s_axi_U : component srcnn_ctrl_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_ctrl_AWVALID,
        AWREADY => s_axi_ctrl_AWREADY,
        AWADDR => s_axi_ctrl_AWADDR,
        WVALID => s_axi_ctrl_WVALID,
        WREADY => s_axi_ctrl_WREADY,
        WDATA => s_axi_ctrl_WDATA,
        WSTRB => s_axi_ctrl_WSTRB,
        ARVALID => s_axi_ctrl_ARVALID,
        ARREADY => s_axi_ctrl_ARREADY,
        ARADDR => s_axi_ctrl_ARADDR,
        RVALID => s_axi_ctrl_RVALID,
        RREADY => s_axi_ctrl_RREADY,
        RDATA => s_axi_ctrl_RDATA,
        RRESP => s_axi_ctrl_RRESP,
        BVALID => s_axi_ctrl_BVALID,
        BREADY => s_axi_ctrl_BREADY,
        BRESP => s_axi_ctrl_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        input_ftmap => input_ftmap,
        conv1_weights => conv1_weights,
        conv1_biases => conv1_biases,
        conv2_weights => conv2_weights,
        conv2_biases => conv2_biases,
        conv3_weights => conv3_weights,
        conv3_biases => conv3_biases,
        output_ftmap => output_ftmap,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    gmem_in_m_axi_U : component srcnn_gmem_in_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_IN_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_IN_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_IN_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_IN_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_IN_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_IN_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_IN_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_IN_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_IN_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_IN_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_IN_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem_in_AWVALID,
        AWREADY => m_axi_gmem_in_AWREADY,
        AWADDR => m_axi_gmem_in_AWADDR,
        AWID => m_axi_gmem_in_AWID,
        AWLEN => m_axi_gmem_in_AWLEN,
        AWSIZE => m_axi_gmem_in_AWSIZE,
        AWBURST => m_axi_gmem_in_AWBURST,
        AWLOCK => m_axi_gmem_in_AWLOCK,
        AWCACHE => m_axi_gmem_in_AWCACHE,
        AWPROT => m_axi_gmem_in_AWPROT,
        AWQOS => m_axi_gmem_in_AWQOS,
        AWREGION => m_axi_gmem_in_AWREGION,
        AWUSER => m_axi_gmem_in_AWUSER,
        WVALID => m_axi_gmem_in_WVALID,
        WREADY => m_axi_gmem_in_WREADY,
        WDATA => m_axi_gmem_in_WDATA,
        WSTRB => m_axi_gmem_in_WSTRB,
        WLAST => m_axi_gmem_in_WLAST,
        WID => m_axi_gmem_in_WID,
        WUSER => m_axi_gmem_in_WUSER,
        ARVALID => m_axi_gmem_in_ARVALID,
        ARREADY => m_axi_gmem_in_ARREADY,
        ARADDR => m_axi_gmem_in_ARADDR,
        ARID => m_axi_gmem_in_ARID,
        ARLEN => m_axi_gmem_in_ARLEN,
        ARSIZE => m_axi_gmem_in_ARSIZE,
        ARBURST => m_axi_gmem_in_ARBURST,
        ARLOCK => m_axi_gmem_in_ARLOCK,
        ARCACHE => m_axi_gmem_in_ARCACHE,
        ARPROT => m_axi_gmem_in_ARPROT,
        ARQOS => m_axi_gmem_in_ARQOS,
        ARREGION => m_axi_gmem_in_ARREGION,
        ARUSER => m_axi_gmem_in_ARUSER,
        RVALID => m_axi_gmem_in_RVALID,
        RREADY => m_axi_gmem_in_RREADY,
        RDATA => m_axi_gmem_in_RDATA,
        RLAST => m_axi_gmem_in_RLAST,
        RID => m_axi_gmem_in_RID,
        RUSER => m_axi_gmem_in_RUSER,
        RRESP => m_axi_gmem_in_RRESP,
        BVALID => m_axi_gmem_in_BVALID,
        BREADY => m_axi_gmem_in_BREADY,
        BRESP => m_axi_gmem_in_BRESP,
        BID => m_axi_gmem_in_BID,
        BUSER => m_axi_gmem_in_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem_in_ARVALID,
        I_ARREADY => gmem_in_ARREADY,
        I_ARADDR => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARADDR,
        I_ARLEN => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARLEN,
        I_RVALID => gmem_in_RVALID,
        I_RREADY => gmem_in_RREADY,
        I_RDATA => gmem_in_RDATA,
        I_RFIFONUM => gmem_in_RFIFONUM,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem_in_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWLEN => ap_const_lv32_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem_in_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => gmem_in_BVALID,
        I_BREADY => ap_const_logic_0);

    gmem_out_m_axi_U : component srcnn_gmem_out_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_OUT_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_OUT_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_OUT_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_OUT_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_OUT_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_OUT_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_OUT_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_OUT_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_OUT_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_OUT_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_OUT_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem_out_AWVALID,
        AWREADY => m_axi_gmem_out_AWREADY,
        AWADDR => m_axi_gmem_out_AWADDR,
        AWID => m_axi_gmem_out_AWID,
        AWLEN => m_axi_gmem_out_AWLEN,
        AWSIZE => m_axi_gmem_out_AWSIZE,
        AWBURST => m_axi_gmem_out_AWBURST,
        AWLOCK => m_axi_gmem_out_AWLOCK,
        AWCACHE => m_axi_gmem_out_AWCACHE,
        AWPROT => m_axi_gmem_out_AWPROT,
        AWQOS => m_axi_gmem_out_AWQOS,
        AWREGION => m_axi_gmem_out_AWREGION,
        AWUSER => m_axi_gmem_out_AWUSER,
        WVALID => m_axi_gmem_out_WVALID,
        WREADY => m_axi_gmem_out_WREADY,
        WDATA => m_axi_gmem_out_WDATA,
        WSTRB => m_axi_gmem_out_WSTRB,
        WLAST => m_axi_gmem_out_WLAST,
        WID => m_axi_gmem_out_WID,
        WUSER => m_axi_gmem_out_WUSER,
        ARVALID => m_axi_gmem_out_ARVALID,
        ARREADY => m_axi_gmem_out_ARREADY,
        ARADDR => m_axi_gmem_out_ARADDR,
        ARID => m_axi_gmem_out_ARID,
        ARLEN => m_axi_gmem_out_ARLEN,
        ARSIZE => m_axi_gmem_out_ARSIZE,
        ARBURST => m_axi_gmem_out_ARBURST,
        ARLOCK => m_axi_gmem_out_ARLOCK,
        ARCACHE => m_axi_gmem_out_ARCACHE,
        ARPROT => m_axi_gmem_out_ARPROT,
        ARQOS => m_axi_gmem_out_ARQOS,
        ARREGION => m_axi_gmem_out_ARREGION,
        ARUSER => m_axi_gmem_out_ARUSER,
        RVALID => m_axi_gmem_out_RVALID,
        RREADY => m_axi_gmem_out_RREADY,
        RDATA => m_axi_gmem_out_RDATA,
        RLAST => m_axi_gmem_out_RLAST,
        RID => m_axi_gmem_out_RID,
        RUSER => m_axi_gmem_out_RUSER,
        RRESP => m_axi_gmem_out_RRESP,
        BVALID => m_axi_gmem_out_BVALID,
        BREADY => m_axi_gmem_out_BREADY,
        BRESP => m_axi_gmem_out_BRESP,
        BID => m_axi_gmem_out_BID,
        BUSER => m_axi_gmem_out_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => gmem_out_ARREADY,
        I_ARADDR => ap_const_lv64_0,
        I_ARLEN => ap_const_lv32_0,
        I_RVALID => gmem_out_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => gmem_out_RDATA,
        I_RFIFONUM => gmem_out_RFIFONUM,
        I_AWVALID => gmem_out_AWVALID,
        I_AWREADY => gmem_out_AWREADY,
        I_AWADDR => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWADDR,
        I_AWLEN => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWLEN,
        I_WVALID => gmem_out_WVALID,
        I_WREADY => gmem_out_WREADY,
        I_WDATA => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_WDATA,
        I_WSTRB => grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_WSTRB,
        I_BVALID => gmem_out_BVALID,
        I_BREADY => gmem_out_BREADY);

    gmem_w1_m_axi_U : component srcnn_gmem_w1_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_W1_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_W1_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_W1_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_W1_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_W1_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_W1_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_W1_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_W1_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_W1_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_W1_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_W1_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem_w1_AWVALID,
        AWREADY => m_axi_gmem_w1_AWREADY,
        AWADDR => m_axi_gmem_w1_AWADDR,
        AWID => m_axi_gmem_w1_AWID,
        AWLEN => m_axi_gmem_w1_AWLEN,
        AWSIZE => m_axi_gmem_w1_AWSIZE,
        AWBURST => m_axi_gmem_w1_AWBURST,
        AWLOCK => m_axi_gmem_w1_AWLOCK,
        AWCACHE => m_axi_gmem_w1_AWCACHE,
        AWPROT => m_axi_gmem_w1_AWPROT,
        AWQOS => m_axi_gmem_w1_AWQOS,
        AWREGION => m_axi_gmem_w1_AWREGION,
        AWUSER => m_axi_gmem_w1_AWUSER,
        WVALID => m_axi_gmem_w1_WVALID,
        WREADY => m_axi_gmem_w1_WREADY,
        WDATA => m_axi_gmem_w1_WDATA,
        WSTRB => m_axi_gmem_w1_WSTRB,
        WLAST => m_axi_gmem_w1_WLAST,
        WID => m_axi_gmem_w1_WID,
        WUSER => m_axi_gmem_w1_WUSER,
        ARVALID => m_axi_gmem_w1_ARVALID,
        ARREADY => m_axi_gmem_w1_ARREADY,
        ARADDR => m_axi_gmem_w1_ARADDR,
        ARID => m_axi_gmem_w1_ARID,
        ARLEN => m_axi_gmem_w1_ARLEN,
        ARSIZE => m_axi_gmem_w1_ARSIZE,
        ARBURST => m_axi_gmem_w1_ARBURST,
        ARLOCK => m_axi_gmem_w1_ARLOCK,
        ARCACHE => m_axi_gmem_w1_ARCACHE,
        ARPROT => m_axi_gmem_w1_ARPROT,
        ARQOS => m_axi_gmem_w1_ARQOS,
        ARREGION => m_axi_gmem_w1_ARREGION,
        ARUSER => m_axi_gmem_w1_ARUSER,
        RVALID => m_axi_gmem_w1_RVALID,
        RREADY => m_axi_gmem_w1_RREADY,
        RDATA => m_axi_gmem_w1_RDATA,
        RLAST => m_axi_gmem_w1_RLAST,
        RID => m_axi_gmem_w1_RID,
        RUSER => m_axi_gmem_w1_RUSER,
        RRESP => m_axi_gmem_w1_RRESP,
        BVALID => m_axi_gmem_w1_BVALID,
        BREADY => m_axi_gmem_w1_BREADY,
        BRESP => m_axi_gmem_w1_BRESP,
        BID => m_axi_gmem_w1_BID,
        BUSER => m_axi_gmem_w1_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem_w1_ARVALID,
        I_ARREADY => gmem_w1_ARREADY,
        I_ARADDR => gmem_w1_ARADDR,
        I_ARLEN => gmem_w1_ARLEN,
        I_RVALID => gmem_w1_RVALID,
        I_RREADY => gmem_w1_RREADY,
        I_RDATA => gmem_w1_RDATA,
        I_RFIFONUM => gmem_w1_RFIFONUM,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem_w1_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWLEN => ap_const_lv32_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem_w1_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => gmem_w1_BVALID,
        I_BREADY => ap_const_logic_0);

    gmem_w2_m_axi_U : component srcnn_gmem_w2_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_W2_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_W2_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_W2_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_W2_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_W2_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_W2_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_W2_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_W2_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_W2_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_W2_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_W2_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem_w2_AWVALID,
        AWREADY => m_axi_gmem_w2_AWREADY,
        AWADDR => m_axi_gmem_w2_AWADDR,
        AWID => m_axi_gmem_w2_AWID,
        AWLEN => m_axi_gmem_w2_AWLEN,
        AWSIZE => m_axi_gmem_w2_AWSIZE,
        AWBURST => m_axi_gmem_w2_AWBURST,
        AWLOCK => m_axi_gmem_w2_AWLOCK,
        AWCACHE => m_axi_gmem_w2_AWCACHE,
        AWPROT => m_axi_gmem_w2_AWPROT,
        AWQOS => m_axi_gmem_w2_AWQOS,
        AWREGION => m_axi_gmem_w2_AWREGION,
        AWUSER => m_axi_gmem_w2_AWUSER,
        WVALID => m_axi_gmem_w2_WVALID,
        WREADY => m_axi_gmem_w2_WREADY,
        WDATA => m_axi_gmem_w2_WDATA,
        WSTRB => m_axi_gmem_w2_WSTRB,
        WLAST => m_axi_gmem_w2_WLAST,
        WID => m_axi_gmem_w2_WID,
        WUSER => m_axi_gmem_w2_WUSER,
        ARVALID => m_axi_gmem_w2_ARVALID,
        ARREADY => m_axi_gmem_w2_ARREADY,
        ARADDR => m_axi_gmem_w2_ARADDR,
        ARID => m_axi_gmem_w2_ARID,
        ARLEN => m_axi_gmem_w2_ARLEN,
        ARSIZE => m_axi_gmem_w2_ARSIZE,
        ARBURST => m_axi_gmem_w2_ARBURST,
        ARLOCK => m_axi_gmem_w2_ARLOCK,
        ARCACHE => m_axi_gmem_w2_ARCACHE,
        ARPROT => m_axi_gmem_w2_ARPROT,
        ARQOS => m_axi_gmem_w2_ARQOS,
        ARREGION => m_axi_gmem_w2_ARREGION,
        ARUSER => m_axi_gmem_w2_ARUSER,
        RVALID => m_axi_gmem_w2_RVALID,
        RREADY => m_axi_gmem_w2_RREADY,
        RDATA => m_axi_gmem_w2_RDATA,
        RLAST => m_axi_gmem_w2_RLAST,
        RID => m_axi_gmem_w2_RID,
        RUSER => m_axi_gmem_w2_RUSER,
        RRESP => m_axi_gmem_w2_RRESP,
        BVALID => m_axi_gmem_w2_BVALID,
        BREADY => m_axi_gmem_w2_BREADY,
        BRESP => m_axi_gmem_w2_BRESP,
        BID => m_axi_gmem_w2_BID,
        BUSER => m_axi_gmem_w2_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem_w2_ARVALID,
        I_ARREADY => gmem_w2_ARREADY,
        I_ARADDR => gmem_w2_ARADDR,
        I_ARLEN => ap_const_lv32_1,
        I_RVALID => gmem_w2_RVALID,
        I_RREADY => gmem_w2_RREADY,
        I_RDATA => gmem_w2_RDATA,
        I_RFIFONUM => gmem_w2_RFIFONUM,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem_w2_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWLEN => ap_const_lv32_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem_w2_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => gmem_w2_BVALID,
        I_BREADY => ap_const_logic_0);

    gmem_w3_m_axi_U : component srcnn_gmem_w3_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_W3_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_W3_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_W3_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_W3_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_W3_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_W3_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_W3_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_W3_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_W3_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_W3_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_W3_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem_w3_AWVALID,
        AWREADY => m_axi_gmem_w3_AWREADY,
        AWADDR => m_axi_gmem_w3_AWADDR,
        AWID => m_axi_gmem_w3_AWID,
        AWLEN => m_axi_gmem_w3_AWLEN,
        AWSIZE => m_axi_gmem_w3_AWSIZE,
        AWBURST => m_axi_gmem_w3_AWBURST,
        AWLOCK => m_axi_gmem_w3_AWLOCK,
        AWCACHE => m_axi_gmem_w3_AWCACHE,
        AWPROT => m_axi_gmem_w3_AWPROT,
        AWQOS => m_axi_gmem_w3_AWQOS,
        AWREGION => m_axi_gmem_w3_AWREGION,
        AWUSER => m_axi_gmem_w3_AWUSER,
        WVALID => m_axi_gmem_w3_WVALID,
        WREADY => m_axi_gmem_w3_WREADY,
        WDATA => m_axi_gmem_w3_WDATA,
        WSTRB => m_axi_gmem_w3_WSTRB,
        WLAST => m_axi_gmem_w3_WLAST,
        WID => m_axi_gmem_w3_WID,
        WUSER => m_axi_gmem_w3_WUSER,
        ARVALID => m_axi_gmem_w3_ARVALID,
        ARREADY => m_axi_gmem_w3_ARREADY,
        ARADDR => m_axi_gmem_w3_ARADDR,
        ARID => m_axi_gmem_w3_ARID,
        ARLEN => m_axi_gmem_w3_ARLEN,
        ARSIZE => m_axi_gmem_w3_ARSIZE,
        ARBURST => m_axi_gmem_w3_ARBURST,
        ARLOCK => m_axi_gmem_w3_ARLOCK,
        ARCACHE => m_axi_gmem_w3_ARCACHE,
        ARPROT => m_axi_gmem_w3_ARPROT,
        ARQOS => m_axi_gmem_w3_ARQOS,
        ARREGION => m_axi_gmem_w3_ARREGION,
        ARUSER => m_axi_gmem_w3_ARUSER,
        RVALID => m_axi_gmem_w3_RVALID,
        RREADY => m_axi_gmem_w3_RREADY,
        RDATA => m_axi_gmem_w3_RDATA,
        RLAST => m_axi_gmem_w3_RLAST,
        RID => m_axi_gmem_w3_RID,
        RUSER => m_axi_gmem_w3_RUSER,
        RRESP => m_axi_gmem_w3_RRESP,
        BVALID => m_axi_gmem_w3_BVALID,
        BREADY => m_axi_gmem_w3_BREADY,
        BRESP => m_axi_gmem_w3_BRESP,
        BID => m_axi_gmem_w3_BID,
        BUSER => m_axi_gmem_w3_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem_w3_ARVALID,
        I_ARREADY => gmem_w3_ARREADY,
        I_ARADDR => gmem_w3_ARADDR,
        I_ARLEN => gmem_w3_ARLEN,
        I_RVALID => gmem_w3_RVALID,
        I_RREADY => gmem_w3_RREADY,
        I_RDATA => gmem_w3_RDATA,
        I_RFIFONUM => gmem_w3_RFIFONUM,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem_w3_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWLEN => ap_const_lv32_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem_w3_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => gmem_w3_BVALID,
        I_BREADY => ap_const_logic_0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_sync_reg_grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_done_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_done <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state49) and (ap_const_boolean_0 = ap_block_state49_on_subcall_done))) then 
                    ap_sync_reg_grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_done <= ap_const_logic_0;
                elsif ((grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_done = ap_const_logic_1)) then 
                    ap_sync_reg_grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_done <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state49) and (ap_const_boolean_0 = ap_block_state49_on_subcall_done))) then 
                    ap_sync_reg_grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_ready <= ap_const_logic_0;
                elsif ((grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_ready = ap_const_logic_1)) then 
                    ap_sync_reg_grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_start_reg <= ap_const_logic_0;
            else
                if ((((icmp_ln400_fu_2087_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state48)) or ((ap_const_logic_1 = ap_CS_fsm_state49) and (ap_sync_grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_ready = ap_const_logic_0)))) then 
                    grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_ready = ap_const_logic_1)) then 
                    grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_ap_ready = ap_const_logic_1)) then 
                    grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
                    grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_ap_ready = ap_const_logic_1)) then 
                    grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    weights_loaded_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                weights_loaded <= ap_const_lv1_0;
            else
                if (((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46) and (ap_const_boolean_0 = ap_block_state46_on_subcall_done))) then 
                    weights_loaded <= ap_const_lv1_1;
                end if; 
            end if;
        end if;
    end process;


    c1_fu_622_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((weights_loaded_load_load_fu_1147_p1 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c1_fu_622 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                c1_fu_622 <= add_ln344_reg_2188;
            end if; 
        end if;
    end process;

    c2_fu_626_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln344_fu_1197_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                c2_fu_626 <= ap_const_lv6_0;
            elsif (((icmp_ln359_fu_1997_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                c2_fu_626 <= add_ln356_reg_2236;
            end if; 
        end if;
    end process;

    h0_fu_630_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state46) and (ap_const_boolean_0 = ap_block_state46_on_subcall_done))) then 
                h0_fu_630 <= ap_const_lv9_0;
            elsif (((icmp_ln400_fu_2087_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state48))) then 
                h0_fu_630 <= h0_3_reg_2360;
            end if; 
        end if;
    end process;

    i2_reg_833_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then 
                i2_reg_833 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
                i2_reg_833 <= add_ln359_reg_2317;
            end if; 
        end if;
    end process;

    phase_reg_844_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state49) and (ap_const_boolean_0 = ap_block_state49_on_subcall_done))) then 
                phase_reg_844 <= phase_1_reg_2373;
            elsif (((icmp_ln398_fu_2075_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then 
                phase_reg_844 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    phi_mul_fu_618_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((weights_loaded_load_load_fu_1147_p1 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                phi_mul_fu_618 <= ap_const_lv13_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                phi_mul_fu_618 <= add_ln344_1_reg_2180;
            end if; 
        end if;
    end process;

    w0_reg_856_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state49) and (ap_const_boolean_0 = ap_block_state49_on_subcall_done))) then 
                w0_reg_856 <= w0_1_reg_2368;
            elsif (((icmp_ln398_fu_2075_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then 
                w0_reg_856 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln344_1_reg_2180 <= add_ln344_1_fu_1191_p2;
                add_ln344_reg_2188 <= add_ln344_fu_1203_p2;
                phi_mul_load_reg_2172 <= phi_mul_fu_618;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                add_ln350_3_reg_2216 <= add_ln350_3_fu_1273_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                add_ln356_reg_2236 <= add_ln356_fu_1699_p2;
                trunc_ln356_2_reg_2229 <= trunc_ln356_2_fu_1685_p1;
                trunc_ln356_reg_2224 <= trunc_ln356_fu_1681_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                add_ln359_reg_2317 <= add_ln359_fu_2003_p2;
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_45_reg_2274 <= zext_ln364_2_fu_1985_p1(8 - 1 downto 0);
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_46_reg_2279 <= zext_ln364_2_fu_1985_p1(8 - 1 downto 0);
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_47_reg_2284 <= zext_ln364_2_fu_1985_p1(8 - 1 downto 0);
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_48_reg_2289 <= zext_ln364_2_fu_1985_p1(8 - 1 downto 0);
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_49_reg_2294 <= zext_ln364_2_fu_1985_p1(8 - 1 downto 0);
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_50_reg_2299 <= zext_ln364_2_fu_1985_p1(8 - 1 downto 0);
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_51_reg_2304 <= zext_ln364_2_fu_1985_p1(8 - 1 downto 0);
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_52_reg_2309 <= zext_ln364_2_fu_1985_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                bitcast_ln364_reg_2328 <= bitcast_ln364_fu_2037_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                conv2_biases_read_reg_2129 <= conv2_biases;
                conv2_weights_read_reg_2134 <= conv2_weights;
                conv3_biases_read_reg_2119 <= conv3_biases;
                conv3_weights_read_reg_2124 <= conv3_weights;
                input_ftmap_read_reg_2139 <= input_ftmap;
                output_ftmap_read_reg_2114 <= output_ftmap;
                weights_loaded_load_reg_2144 <= weights_loaded;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln344_fu_1197_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                gmem_w1_addr_reg_2193 <= sext_ln345_fu_1218_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln359_fu_1997_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                gmem_w2_addr_1_reg_2322 <= sext_ln364_fu_2023_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln356_fu_1693_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                gmem_w2_addr_reg_2246 <= sext_ln358_fu_1720_p1;
                lshr_ln_reg_2241 <= c2_fu_626(4 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln356_fu_1693_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                gmem_w3_addr_reg_2252 <= sext_ln373_fu_1739_p1;
                trunc_ln4_reg_2258 <= conv3_weights_read_reg_2124(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state47)) then
                h0_2_reg_2352 <= h0_fu_630;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln398_fu_2075_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then
                h0_3_reg_2360 <= h0_3_fu_2081_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_A) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_10 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_B) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_11 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_C) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_12 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_D) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_13 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_E) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_14 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_F) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_15 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_10) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_16 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_11) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_17 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_12) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_18 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_13) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_19 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_14) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_20 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_15) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_21 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_16) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_22 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_17) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_23 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_18) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_24 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_19) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_25 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_1A) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_26 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_1B) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_27 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_1C) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_28 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_1D) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_29 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_1E) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_30 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_1F) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_31 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_20) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_32 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_21) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_33 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_22) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_34 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_23) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_35 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_24) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_36 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_25) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_37 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_26) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_38 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_27) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_39 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_28) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_40 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_29) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_41 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_2A) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_42 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_2B) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_43 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_2C) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_44 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_2D) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_45 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_2E) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_46 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_2F) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_47 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_30) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_48 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_31) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_49 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_32) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_50 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_33) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_51 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_34) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_52 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_35) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_53 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_36) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_54 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_37) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_55 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_38) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_56 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_39) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_57 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_3A) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_58 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_3B) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_59 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_3C) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_60 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_3D) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_61 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_3E) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_62 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_3F) and (gmem_w1_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b1_loc_63 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_A) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_10 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_B) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_11 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_C) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_12 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_D) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_13 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_E) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_14 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_F) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_15 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_10) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_16 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_11) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_17 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_12) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_18 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_13) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_19 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_14) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_20 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_15) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_21 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_16) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_22 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_17) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_23 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_18) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_24 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_19) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_25 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_1A) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_26 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_1B) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_27 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_1C) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_28 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_1D) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_29 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_1E) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_30 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_1F) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_E6b2_loc_31 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln400_fu_2087_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state48))) then
                phase_1_reg_2373 <= phase_1_fu_2099_p2;
                trunc_ln400_reg_2378 <= trunc_ln400_fu_2105_p1;
                w0_1_reg_2368 <= w0_1_fu_2093_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((weights_loaded_load_load_fu_1147_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                sext_ln344_reg_2167 <= sext_ln344_fu_1171_p1;
                trunc_ln344_1_reg_2162 <= conv1_weights(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln344_fu_1197_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                sext_ln356_1_reg_2211 <= sext_ln356_1_fu_1250_p1;
                sext_ln356_reg_2206 <= sext_ln356_fu_1237_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state44) and (gmem_w3_RVALID = ap_const_logic_1))) then
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_16 <= bitcast_ln373_fu_2051_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_9) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_17 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_8) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_18 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_7) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_19 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_6) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_20 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_5) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_21 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_4) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_22 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_3) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_23 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_2) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_24 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_1) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_25 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln356_reg_2224 = ap_const_lv5_0) and (ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_26 <= bitcast_ln358_fu_1776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_9) and (gmem_w1_RVALID = ap_const_logic_1))) then
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_27 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_8) and (gmem_w1_RVALID = ap_const_logic_1))) then
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_28 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_7) and (gmem_w1_RVALID = ap_const_logic_1))) then
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_29 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_6) and (gmem_w1_RVALID = ap_const_logic_1))) then
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_5) and (gmem_w1_RVALID = ap_const_logic_1))) then
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_4) and (gmem_w1_RVALID = ap_const_logic_1))) then
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_3) and (gmem_w1_RVALID = ap_const_logic_1))) then
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_2) and (gmem_w1_RVALID = ap_const_logic_1))) then
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_1) and (gmem_w1_RVALID = ap_const_logic_1))) then
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (trunc_ln344_fu_1283_p1 = ap_const_lv6_0) and (gmem_w1_RVALID = ap_const_logic_1))) then
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36 <= bitcast_ln345_fu_1279_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                    tmp_5_reg_2269(7 downto 6) <= tmp_5_fu_1769_p3(7 downto 6);
                    zext_ln356_1_reg_2264(10 downto 6) <= zext_ln356_1_fu_1765_p1(10 downto 6);
            end if;
        end if;
    end process;
    zext_ln356_1_reg_2264(5 downto 0) <= "000000";
    zext_ln356_1_reg_2264(11) <= '0';
    tmp_5_reg_2269(5 downto 0) <= "000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state11, ap_CS_fsm_state16, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state34, ap_CS_fsm_state36, ap_CS_fsm_state44, ap_CS_fsm_state37, weights_loaded_load_load_fu_1147_p1, ap_CS_fsm_state2, icmp_ln344_fu_1197_p2, ap_CS_fsm_state15, icmp_ln356_fu_1693_p2, ap_CS_fsm_state25, icmp_ln359_fu_1997_p2, ap_CS_fsm_state47, icmp_ln398_fu_2075_p2, ap_CS_fsm_state48, icmp_ln400_fu_2087_p2, grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_ap_done, gmem_w1_ARREADY, gmem_w1_RVALID, gmem_w2_ARREADY, gmem_w2_RVALID, gmem_w3_ARREADY, gmem_w3_RVALID, ap_CS_fsm_state49, ap_block_state49_on_subcall_done, ap_CS_fsm_state14, ap_CS_fsm_state46, ap_block_state46_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((weights_loaded_load_load_fu_1147_p1 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((weights_loaded_load_load_fu_1147_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln344_fu_1197_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (gmem_w1_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (gmem_w1_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if (((icmp_ln356_fu_1693_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (gmem_w2_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                if (((icmp_ln359_fu_1997_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state26 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state26) and (gmem_w2_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state34) and (gmem_w2_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state36 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state36) and (gmem_w3_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state37 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state37) and (gmem_w3_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state44) and (gmem_w3_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state46) and (ap_const_boolean_0 = ap_block_state46_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_state46;
                end if;
            when ap_ST_fsm_state47 => 
                if (((icmp_ln398_fu_2075_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state47))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state48;
                end if;
            when ap_ST_fsm_state48 => 
                if (((icmp_ln400_fu_2087_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state48))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_state49;
                end if;
            when ap_ST_fsm_state49 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state49) and (ap_const_boolean_0 = ap_block_state49_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state48;
                else
                    ap_NS_fsm <= ap_ST_fsm_state49;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln344_1_fu_1191_p2 <= std_logic_vector(unsigned(phi_mul_fu_618) + unsigned(ap_const_lv13_51));
    add_ln344_fu_1203_p2 <= std_logic_vector(unsigned(c1_fu_622) + unsigned(ap_const_lv7_1));
    add_ln345_fu_1213_p2 <= std_logic_vector(signed(sext_ln344_reg_2167) + signed(zext_ln344_fu_1209_p1));
    add_ln350_3_fu_1273_p2 <= std_logic_vector(unsigned(zext_ln350_5_fu_1269_p1) + unsigned(zext_ln350_fu_1259_p1));
    add_ln356_fu_1699_p2 <= std_logic_vector(unsigned(c2_fu_626) + unsigned(ap_const_lv6_1));
    add_ln358_fu_1715_p2 <= std_logic_vector(signed(sext_ln356_1_reg_2211) + signed(zext_ln356_fu_1689_p1));
    add_ln359_fu_2003_p2 <= std_logic_vector(unsigned(i2_reg_833) + unsigned(ap_const_lv7_1));
    add_ln364_1_fu_2018_p2 <= std_logic_vector(unsigned(zext_ln364_fu_2014_p1) + unsigned(sext_ln356_reg_2206));
    add_ln364_2_fu_1980_p2 <= std_logic_vector(unsigned(tmp_5_reg_2269) + unsigned(zext_ln364_1_fu_1976_p1));
    add_ln364_fu_2009_p2 <= std_logic_vector(unsigned(zext_ln356_1_reg_2264) + unsigned(zext_ln359_fu_1972_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(gmem_w1_RVALID)
    begin
        if ((gmem_w1_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_ap_done)
    begin
        if ((grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state15_blk <= ap_const_logic_0;

    ap_ST_fsm_state16_blk_assign_proc : process(gmem_w2_ARREADY)
    begin
        if ((gmem_w2_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;

    ap_ST_fsm_state24_blk_assign_proc : process(gmem_w2_RVALID)
    begin
        if ((gmem_w2_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state24_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state24_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state25_blk <= ap_const_logic_0;

    ap_ST_fsm_state26_blk_assign_proc : process(gmem_w2_ARREADY)
    begin
        if ((gmem_w2_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state26_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state26_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;

    ap_ST_fsm_state34_blk_assign_proc : process(gmem_w2_RVALID)
    begin
        if ((gmem_w2_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state34_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state34_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state35_blk <= ap_const_logic_0;

    ap_ST_fsm_state36_blk_assign_proc : process(gmem_w3_ARREADY)
    begin
        if ((gmem_w3_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state36_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state36_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state37_blk_assign_proc : process(gmem_w3_ARREADY)
    begin
        if ((gmem_w3_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state37_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state37_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(gmem_w1_ARREADY)
    begin
        if ((gmem_w1_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;

    ap_ST_fsm_state44_blk_assign_proc : process(gmem_w3_RVALID)
    begin
        if ((gmem_w3_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state44_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state44_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state45_blk <= ap_const_logic_0;

    ap_ST_fsm_state46_blk_assign_proc : process(ap_block_state46_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state46_on_subcall_done)) then 
            ap_ST_fsm_state46_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state46_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;

    ap_ST_fsm_state49_blk_assign_proc : process(ap_block_state49_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state49_on_subcall_done)) then 
            ap_ST_fsm_state49_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state49_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state46_on_subcall_done_assign_proc : process(weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_ap_done)
    begin
                ap_block_state46_on_subcall_done <= ((grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_ap_done = ap_const_logic_0) and (weights_loaded_load_reg_2144 = ap_const_lv1_0));
    end process;


    ap_block_state49_on_subcall_done_assign_proc : process(ap_sync_grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_ready, ap_sync_grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_done)
    begin
                ap_block_state49_on_subcall_done <= ((ap_sync_grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_ready and ap_sync_grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_done) = ap_const_logic_0);
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state47, icmp_ln398_fu_2075_p2)
    begin
        if (((icmp_ln398_fu_2075_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state47))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state47, icmp_ln398_fu_2075_p2)
    begin
        if (((icmp_ln398_fu_2075_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state47))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_done <= (grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_done or ap_sync_reg_grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_done);
    ap_sync_grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_ready <= (grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_ready or ap_sync_reg_grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_ready);
    bitcast_ln345_fu_1279_p1 <= gmem_w1_RDATA;
    bitcast_ln358_fu_1776_p1 <= gmem_w2_RDATA;
    bitcast_ln364_fu_2037_p1 <= gmem_w2_RDATA;
    bitcast_ln373_fu_2051_p1 <= gmem_w3_RDATA;

    gmem_in_ARVALID_assign_proc : process(ap_CS_fsm_state48, icmp_ln400_fu_2087_p2, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARVALID, ap_CS_fsm_state49)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) or ((icmp_ln400_fu_2087_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state48)))) then 
            gmem_in_ARVALID <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_ARVALID;
        else 
            gmem_in_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_in_RREADY_assign_proc : process(ap_CS_fsm_state48, icmp_ln400_fu_2087_p2, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_RREADY, ap_CS_fsm_state49)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) or ((icmp_ln400_fu_2087_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state48)))) then 
            gmem_in_RREADY <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_in_RREADY;
        else 
            gmem_in_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_out_AWVALID_assign_proc : process(ap_CS_fsm_state48, icmp_ln400_fu_2087_p2, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWVALID, ap_CS_fsm_state49)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) or ((icmp_ln400_fu_2087_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state48)))) then 
            gmem_out_AWVALID <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_AWVALID;
        else 
            gmem_out_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_out_BREADY_assign_proc : process(ap_CS_fsm_state48, icmp_ln400_fu_2087_p2, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_BREADY, ap_CS_fsm_state49)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) or ((icmp_ln400_fu_2087_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state48)))) then 
            gmem_out_BREADY <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_BREADY;
        else 
            gmem_out_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_out_WVALID_assign_proc : process(ap_CS_fsm_state48, icmp_ln400_fu_2087_p2, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_WVALID, ap_CS_fsm_state49)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) or ((icmp_ln400_fu_2087_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state48)))) then 
            gmem_out_WVALID <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_m_axi_gmem_out_WVALID;
        else 
            gmem_out_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_w1_ARADDR_assign_proc : process(ap_CS_fsm_state3, gmem_w1_addr_reg_2193, grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARADDR, gmem_w1_ARREADY, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (gmem_w1_ARREADY = ap_const_logic_1))) then 
            gmem_w1_ARADDR <= gmem_w1_addr_reg_2193;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            gmem_w1_ARADDR <= grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARADDR;
        else 
            gmem_w1_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_w1_ARLEN_assign_proc : process(ap_CS_fsm_state3, grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARLEN, gmem_w1_ARREADY, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (gmem_w1_ARREADY = ap_const_logic_1))) then 
            gmem_w1_ARLEN <= ap_const_lv32_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            gmem_w1_ARLEN <= grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARLEN;
        else 
            gmem_w1_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_w1_ARVALID_assign_proc : process(ap_CS_fsm_state3, grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARVALID, gmem_w1_ARREADY, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (gmem_w1_ARREADY = ap_const_logic_1))) then 
            gmem_w1_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            gmem_w1_ARVALID <= grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_ARVALID;
        else 
            gmem_w1_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_w1_RREADY_assign_proc : process(ap_CS_fsm_state11, grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_RREADY, gmem_w1_RVALID, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (gmem_w1_RVALID = ap_const_logic_1))) then 
            gmem_w1_RREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            gmem_w1_RREADY <= grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_m_axi_gmem_w1_RREADY;
        else 
            gmem_w1_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_w1_blk_n_AR_assign_proc : process(m_axi_gmem_w1_ARREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            gmem_w1_blk_n_AR <= m_axi_gmem_w1_ARREADY;
        else 
            gmem_w1_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_w1_blk_n_R_assign_proc : process(m_axi_gmem_w1_RVALID, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            gmem_w1_blk_n_R <= m_axi_gmem_w1_RVALID;
        else 
            gmem_w1_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem_w2_ARADDR_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state26, gmem_w2_addr_reg_2246, gmem_w2_addr_1_reg_2322, gmem_w2_ARREADY)
    begin
        if ((gmem_w2_ARREADY = ap_const_logic_1)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                gmem_w2_ARADDR <= gmem_w2_addr_1_reg_2322;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                gmem_w2_ARADDR <= gmem_w2_addr_reg_2246;
            else 
                gmem_w2_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            gmem_w2_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_w2_ARVALID_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state26, gmem_w2_ARREADY)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state26) and (gmem_w2_ARREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (gmem_w2_ARREADY = ap_const_logic_1)))) then 
            gmem_w2_ARVALID <= ap_const_logic_1;
        else 
            gmem_w2_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_w2_RREADY_assign_proc : process(ap_CS_fsm_state24, ap_CS_fsm_state34, gmem_w2_RVALID)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state34) and (gmem_w2_RVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (gmem_w2_RVALID = ap_const_logic_1)))) then 
            gmem_w2_RREADY <= ap_const_logic_1;
        else 
            gmem_w2_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_w2_blk_n_AR_assign_proc : process(m_axi_gmem_w2_ARREADY, ap_CS_fsm_state16, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem_w2_blk_n_AR <= m_axi_gmem_w2_ARREADY;
        else 
            gmem_w2_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_w2_blk_n_R_assign_proc : process(m_axi_gmem_w2_RVALID, ap_CS_fsm_state24, ap_CS_fsm_state34)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            gmem_w2_blk_n_R <= m_axi_gmem_w2_RVALID;
        else 
            gmem_w2_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem_w3_ARADDR_assign_proc : process(ap_CS_fsm_state36, ap_CS_fsm_state37, weights_loaded_load_reg_2144, gmem_w3_addr_reg_2252, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARADDR, gmem_w3_ARREADY, ap_CS_fsm_state45, ap_CS_fsm_state46, sext_ln374_fu_2041_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state37) and (gmem_w3_ARREADY = ap_const_logic_1))) then 
            gmem_w3_ARADDR <= sext_ln374_fu_2041_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) and (gmem_w3_ARREADY = ap_const_logic_1))) then 
            gmem_w3_ARADDR <= gmem_w3_addr_reg_2252;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or ((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46)))) then 
            gmem_w3_ARADDR <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARADDR;
        else 
            gmem_w3_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_w3_ARLEN_assign_proc : process(ap_CS_fsm_state36, ap_CS_fsm_state37, weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARLEN, gmem_w3_ARREADY, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state37) and (gmem_w3_ARREADY = ap_const_logic_1))) then 
            gmem_w3_ARLEN <= ap_const_lv32_320;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) and (gmem_w3_ARREADY = ap_const_logic_1))) then 
            gmem_w3_ARLEN <= ap_const_lv32_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or ((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46)))) then 
            gmem_w3_ARLEN <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARLEN;
        else 
            gmem_w3_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_w3_ARVALID_assign_proc : process(ap_CS_fsm_state36, ap_CS_fsm_state37, weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARVALID, gmem_w3_ARREADY, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state37) and (gmem_w3_ARREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state36) and (gmem_w3_ARREADY = ap_const_logic_1)))) then 
            gmem_w3_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or ((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46)))) then 
            gmem_w3_ARVALID <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_ARVALID;
        else 
            gmem_w3_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_w3_RREADY_assign_proc : process(ap_CS_fsm_state44, weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_RREADY, gmem_w3_RVALID, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (gmem_w3_RVALID = ap_const_logic_1))) then 
            gmem_w3_RREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or ((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46)))) then 
            gmem_w3_RREADY <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_m_axi_gmem_w3_RREADY;
        else 
            gmem_w3_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_w3_blk_n_AR_assign_proc : process(m_axi_gmem_w3_ARREADY, ap_CS_fsm_state36, ap_CS_fsm_state37)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            gmem_w3_blk_n_AR <= m_axi_gmem_w3_ARREADY;
        else 
            gmem_w3_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_w3_blk_n_R_assign_proc : process(m_axi_gmem_w3_RVALID, ap_CS_fsm_state44)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            gmem_w3_blk_n_R <= m_axi_gmem_w3_RVALID;
        else 
            gmem_w3_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_continue_assign_proc : process(ap_CS_fsm_state49, ap_block_state49_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) and (ap_const_boolean_0 = ap_block_state49_on_subcall_done))) then 
            grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_continue <= ap_const_logic_1;
        else 
            grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_start <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_ap_start_reg;
    grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_ap_start <= grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_ap_start_reg;
    grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_ap_start <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_ap_start_reg;
    h0_3_fu_2081_p2 <= std_logic_vector(unsigned(h0_fu_630) + unsigned(ap_const_lv9_10));
    icmp_ln344_fu_1197_p2 <= "1" when (c1_fu_622 = ap_const_lv7_40) else "0";
    icmp_ln356_fu_1693_p2 <= "1" when (c2_fu_626 = ap_const_lv6_20) else "0";
    icmp_ln359_fu_1997_p2 <= "1" when (i2_reg_833 = ap_const_lv7_40) else "0";
    icmp_ln398_fu_2075_p2 <= "1" when (unsigned(h0_fu_630) < unsigned(ap_const_lv9_FF)) else "0";
    icmp_ln400_fu_2087_p2 <= "1" when (unsigned(w0_reg_856) < unsigned(ap_const_lv9_FF)) else "0";
    phase_1_fu_2099_p2 <= (phase_reg_844 xor ap_const_lv1_1);
        sext_ln344_fu_1171_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln344_2_fu_1161_p4),63));

        sext_ln345_fu_1218_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln345_fu_1213_p2),64));

        sext_ln356_1_fu_1250_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln356_1_fu_1241_p4),63));

        sext_ln356_fu_1237_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_1228_p4),63));

        sext_ln358_fu_1720_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln358_fu_1715_p2),64));

        sext_ln364_fu_2023_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln364_1_fu_2018_p2),64));

        sext_ln373_fu_1739_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln3_fu_1730_p4),64));

        sext_ln374_fu_2041_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln4_reg_2258),64));

    shl_ln_fu_1758_p3 <= (trunc_ln356_reg_2224 & ap_const_lv6_0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0_assign_proc : process(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_50_reg_2299, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0, ap_CS_fsm_state35, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_50_reg_2299;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0 <= "XXXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0_assign_proc : process(grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0, ap_CS_fsm_state35, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_we0_assign_proc : process(trunc_ln356_2_reg_2229, ap_CS_fsm_state35)
    begin
        if (((trunc_ln356_2_reg_2229 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_we0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0_assign_proc : process(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_49_reg_2294, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0, ap_CS_fsm_state35, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_49_reg_2294;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0 <= "XXXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0_assign_proc : process(grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0, ap_CS_fsm_state35, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_we0_assign_proc : process(trunc_ln356_2_reg_2229, ap_CS_fsm_state35)
    begin
        if (((trunc_ln356_2_reg_2229 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_we0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0_assign_proc : process(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_48_reg_2289, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0, ap_CS_fsm_state35, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_48_reg_2289;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0 <= "XXXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0_assign_proc : process(grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0, ap_CS_fsm_state35, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_we0_assign_proc : process(trunc_ln356_2_reg_2229, ap_CS_fsm_state35)
    begin
        if (((trunc_ln356_2_reg_2229 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_we0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_we0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0_assign_proc : process(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_47_reg_2284, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0, ap_CS_fsm_state35, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_47_reg_2284;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0 <= "XXXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0_assign_proc : process(grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0, ap_CS_fsm_state35, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_we0_assign_proc : process(trunc_ln356_2_reg_2229, ap_CS_fsm_state35)
    begin
        if (((trunc_ln356_2_reg_2229 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_we0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0_assign_proc : process(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_46_reg_2279, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0, ap_CS_fsm_state35, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_46_reg_2279;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0 <= "XXXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0_assign_proc : process(grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0, ap_CS_fsm_state35, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_we0_assign_proc : process(trunc_ln356_2_reg_2229, ap_CS_fsm_state35)
    begin
        if (((trunc_ln356_2_reg_2229 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_we0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_we0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0_assign_proc : process(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_45_reg_2274, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0, ap_CS_fsm_state35, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_45_reg_2274;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0 <= "XXXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0_assign_proc : process(grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0, ap_CS_fsm_state35, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_we0_assign_proc : process(trunc_ln356_2_reg_2229, ap_CS_fsm_state35)
    begin
        if (((trunc_ln356_2_reg_2229 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_we0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0_assign_proc : process(weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0, ap_CS_fsm_state49, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0;
        elsif (((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 <= "XXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0_assign_proc : process(weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0, ap_CS_fsm_state49, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0;
        elsif (((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0 <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0_assign_proc : process(weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0, ap_CS_fsm_state46)
    begin
        if (((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0 <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0_assign_proc : process(weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0, ap_CS_fsm_state49, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0;
        elsif (((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 <= "XXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0_assign_proc : process(weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0, ap_CS_fsm_state49, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0;
        elsif (((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0 <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0_assign_proc : process(weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0, ap_CS_fsm_state46)
    begin
        if (((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0 <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0_assign_proc : process(weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0, ap_CS_fsm_state49, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0;
        elsif (((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 <= "XXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0_assign_proc : process(weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0, ap_CS_fsm_state49, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0;
        elsif (((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0 <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0_assign_proc : process(weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0, ap_CS_fsm_state46)
    begin
        if (((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0 <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0_assign_proc : process(weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0, ap_CS_fsm_state49, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0;
        elsif (((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 <= "XXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0_assign_proc : process(weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0, ap_CS_fsm_state49, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0;
        elsif (((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0 <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0_assign_proc : process(weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0, ap_CS_fsm_state46)
    begin
        if (((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0 <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0_assign_proc : process(weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0, ap_CS_fsm_state49, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0;
        elsif (((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 <= "XXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0_assign_proc : process(weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0, ap_CS_fsm_state49, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0;
        elsif (((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0 <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0_assign_proc : process(weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0, ap_CS_fsm_state46)
    begin
        if (((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0 <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0_assign_proc : process(weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0, ap_CS_fsm_state49, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0;
        elsif (((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 <= "XXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0_assign_proc : process(weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0, ap_CS_fsm_state49, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0;
        elsif (((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0 <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0_assign_proc : process(weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0, ap_CS_fsm_state46)
    begin
        if (((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0 <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0_assign_proc : process(weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0, ap_CS_fsm_state49, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0;
        elsif (((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 <= "XXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0_assign_proc : process(weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0, ap_CS_fsm_state49, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0;
        elsif (((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0 <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0_assign_proc : process(weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0, ap_CS_fsm_state46)
    begin
        if (((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0 <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0_assign_proc : process(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_52_reg_2309, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0, ap_CS_fsm_state35, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_52_reg_2309;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0 <= "XXXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0_assign_proc : process(grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0, ap_CS_fsm_state35, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_we0_assign_proc : process(trunc_ln356_2_reg_2229, ap_CS_fsm_state35)
    begin
        if (((trunc_ln356_2_reg_2229 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_we0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0_assign_proc : process(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_51_reg_2304, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0, ap_CS_fsm_state35, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_51_reg_2304;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0 <= "XXXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0_assign_proc : process(grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0, ap_CS_fsm_state35, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_we0_assign_proc : process(trunc_ln356_2_reg_2229, ap_CS_fsm_state35)
    begin
        if (((trunc_ln356_2_reg_2229 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_we0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0_assign_proc : process(weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0, ap_CS_fsm_state49, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0;
        elsif (((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 <= "XXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0_assign_proc : process(weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0, ap_CS_fsm_state49, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0;
        elsif (((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0 <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0_assign_proc : process(weights_loaded_load_reg_2144, grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0, ap_CS_fsm_state46)
    begin
        if (((weights_loaded_load_reg_2144 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0 <= grp_srcnn_Pipeline_VITIS_LOOP_374_8_VITIS_LOOP_375_9_VITIS_LOOP_377_10_fu_878_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_5_fu_1769_p3 <= (lshr_ln_reg_2241 & ap_const_lv6_0);
    tmp_fu_1262_p3 <= (c1_fu_622 & ap_const_lv3_0);
    trunc_ln344_2_fu_1161_p4 <= conv1_biases(63 downto 2);
    trunc_ln344_fu_1283_p1 <= c1_fu_622(6 - 1 downto 0);
    trunc_ln356_1_fu_1241_p4 <= conv2_biases_read_reg_2129(63 downto 2);
    trunc_ln356_2_fu_1685_p1 <= c2_fu_626(3 - 1 downto 0);
    trunc_ln356_fu_1681_p1 <= c2_fu_626(5 - 1 downto 0);
    trunc_ln3_fu_1730_p4 <= conv3_biases_read_reg_2119(63 downto 2);
    trunc_ln400_fu_2105_p1 <= w0_reg_856(8 - 1 downto 0);
    trunc_ln_fu_1228_p4 <= conv2_weights_read_reg_2134(63 downto 2);
    w0_1_fu_2093_p2 <= std_logic_vector(unsigned(w0_reg_856) + unsigned(ap_const_lv9_10));

    w1_loc_address0_assign_proc : process(grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_w1_loc_address0, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_w1_loc_address0, ap_CS_fsm_state49, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            w1_loc_address0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_w1_loc_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            w1_loc_address0 <= grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_w1_loc_address0;
        else 
            w1_loc_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    w1_loc_ce0_assign_proc : process(grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_w1_loc_ce0, grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_w1_loc_ce0, ap_CS_fsm_state49, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            w1_loc_ce0 <= grp_dataflow_in_loop_VITIS_LOOP_400_12_fu_901_w1_loc_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            w1_loc_ce0 <= grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_w1_loc_ce0;
        else 
            w1_loc_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    w1_loc_we0_assign_proc : process(grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_w1_loc_we0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            w1_loc_we0 <= grp_srcnn_Pipeline_VITIS_LOOP_346_2_VITIS_LOOP_348_3_fu_867_w1_loc_we0;
        else 
            w1_loc_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weights_loaded_load_load_fu_1147_p1 <= weights_loaded;
    zext_ln344_fu_1209_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c1_fu_622),63));
    zext_ln350_5_fu_1269_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_1262_p3),11));
    zext_ln350_fu_1259_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c1_fu_622),11));
    zext_ln356_1_fu_1765_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_1758_p3),12));
    zext_ln356_fu_1689_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c2_fu_626),63));
    zext_ln359_fu_1972_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i2_reg_833),12));
    zext_ln364_1_fu_1976_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i2_reg_833),8));
    zext_ln364_2_fu_1985_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln364_2_fu_1980_p2),64));
    zext_ln364_fu_2014_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln364_fu_2009_p2),63));
end behav;
