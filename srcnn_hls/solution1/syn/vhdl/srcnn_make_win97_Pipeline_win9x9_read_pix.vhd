-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity srcnn_make_win97_Pipeline_win9x9_read_pix is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    s_pix_i_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    s_pix_i_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    s_pix_i_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    s_pix_i_empty_n : IN STD_LOGIC;
    s_pix_i_read : OUT STD_LOGIC;
    s_win_i_din : OUT STD_LOGIC_VECTOR (1296 downto 0);
    s_win_i_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    s_win_i_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    s_win_i_full_n : IN STD_LOGIC;
    s_win_i_write : OUT STD_LOGIC;
    empty : IN STD_LOGIC_VECTOR (16 downto 0);
    zext_ln98 : IN STD_LOGIC_VECTOR (8 downto 0);
    lb1_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    lb1_7_ce0 : OUT STD_LOGIC;
    lb1_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    lb1_7_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    lb1_7_ce1 : OUT STD_LOGIC;
    lb1_7_we1 : OUT STD_LOGIC;
    lb1_7_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    lb1_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    lb1_6_ce0 : OUT STD_LOGIC;
    lb1_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    lb1_6_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    lb1_6_ce1 : OUT STD_LOGIC;
    lb1_6_we1 : OUT STD_LOGIC;
    lb1_6_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    lb1_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    lb1_5_ce0 : OUT STD_LOGIC;
    lb1_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    lb1_5_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    lb1_5_ce1 : OUT STD_LOGIC;
    lb1_5_we1 : OUT STD_LOGIC;
    lb1_5_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    lb1_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    lb1_4_ce0 : OUT STD_LOGIC;
    lb1_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    lb1_4_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    lb1_4_ce1 : OUT STD_LOGIC;
    lb1_4_we1 : OUT STD_LOGIC;
    lb1_4_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    lb1_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    lb1_3_ce0 : OUT STD_LOGIC;
    lb1_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    lb1_3_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    lb1_3_ce1 : OUT STD_LOGIC;
    lb1_3_we1 : OUT STD_LOGIC;
    lb1_3_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    lb1_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    lb1_2_ce0 : OUT STD_LOGIC;
    lb1_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    lb1_2_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    lb1_2_ce1 : OUT STD_LOGIC;
    lb1_2_we1 : OUT STD_LOGIC;
    lb1_2_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    lb1_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    lb1_1_ce0 : OUT STD_LOGIC;
    lb1_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    lb1_1_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    lb1_1_ce1 : OUT STD_LOGIC;
    lb1_1_we1 : OUT STD_LOGIC;
    lb1_1_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    lb1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    lb1_ce0 : OUT STD_LOGIC;
    lb1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    lb1_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    lb1_ce1 : OUT STD_LOGIC;
    lb1_we1 : OUT STD_LOGIC;
    lb1_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    zext_ln97 : IN STD_LOGIC_VECTOR (8 downto 0) );
end;


architecture behav of srcnn_make_win97_Pipeline_win9x9_read_pix is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal icmp_ln117_reg_2417 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln152_reg_2509 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op312_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln117_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal s_pix_i_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal s_win_i_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal zext_ln97_cast_fu_616_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln97_cast_reg_2406 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln98_cast_fu_620_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln98_cast_reg_2411 : STD_LOGIC_VECTOR (31 downto 0);
    signal lb1_7_addr_reg_2421 : STD_LOGIC_VECTOR (4 downto 0);
    signal addr_cmp49_fu_754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp49_reg_2427 : STD_LOGIC_VECTOR (0 downto 0);
    signal lb1_6_addr_reg_2432 : STD_LOGIC_VECTOR (4 downto 0);
    signal addr_cmp43_fu_763_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp43_reg_2438 : STD_LOGIC_VECTOR (0 downto 0);
    signal lb1_5_addr_reg_2443 : STD_LOGIC_VECTOR (4 downto 0);
    signal addr_cmp37_fu_772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp37_reg_2449 : STD_LOGIC_VECTOR (0 downto 0);
    signal lb1_4_addr_reg_2454 : STD_LOGIC_VECTOR (4 downto 0);
    signal addr_cmp31_fu_781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp31_reg_2460 : STD_LOGIC_VECTOR (0 downto 0);
    signal lb1_3_addr_reg_2465 : STD_LOGIC_VECTOR (4 downto 0);
    signal addr_cmp25_fu_790_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp25_reg_2471 : STD_LOGIC_VECTOR (0 downto 0);
    signal lb1_2_addr_reg_2476 : STD_LOGIC_VECTOR (4 downto 0);
    signal addr_cmp19_fu_799_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp19_reg_2482 : STD_LOGIC_VECTOR (0 downto 0);
    signal lb1_1_addr_reg_2487 : STD_LOGIC_VECTOR (4 downto 0);
    signal addr_cmp13_fu_808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp13_reg_2493 : STD_LOGIC_VECTOR (0 downto 0);
    signal lb1_addr_reg_2498 : STD_LOGIC_VECTOR (4 downto 0);
    signal addr_cmp_fu_817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp_reg_2504 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln152_fu_895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_valid_fu_911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_valid_reg_2513 : STD_LOGIC_VECTOR (0 downto 0);
    signal idxprom50_i_fu_739_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal reuse_addr_reg46_fu_84 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal reuse_reg45_fu_88 : STD_LOGIC_VECTOR (15 downto 0);
    signal reuse_select44_fu_1167_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal reuse_addr_reg40_fu_92 : STD_LOGIC_VECTOR (63 downto 0);
    signal reuse_reg39_fu_96 : STD_LOGIC_VECTOR (15 downto 0);
    signal reuse_select38_fu_1178_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal reuse_addr_reg34_fu_100 : STD_LOGIC_VECTOR (63 downto 0);
    signal reuse_reg33_fu_104 : STD_LOGIC_VECTOR (15 downto 0);
    signal reuse_select32_fu_1189_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal reuse_addr_reg28_fu_108 : STD_LOGIC_VECTOR (63 downto 0);
    signal reuse_reg27_fu_112 : STD_LOGIC_VECTOR (15 downto 0);
    signal reuse_select26_fu_1200_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal reuse_addr_reg22_fu_116 : STD_LOGIC_VECTOR (63 downto 0);
    signal reuse_reg21_fu_120 : STD_LOGIC_VECTOR (15 downto 0);
    signal reuse_select20_fu_1211_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal reuse_addr_reg16_fu_124 : STD_LOGIC_VECTOR (63 downto 0);
    signal reuse_reg15_fu_128 : STD_LOGIC_VECTOR (15 downto 0);
    signal reuse_select14_fu_1222_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal reuse_addr_reg10_fu_132 : STD_LOGIC_VECTOR (63 downto 0);
    signal reuse_reg9_fu_136 : STD_LOGIC_VECTOR (15 downto 0);
    signal reuse_select_fu_1233_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal reuse_addr_reg_fu_140 : STD_LOGIC_VECTOR (63 downto 0);
    signal reuse_reg_fu_144 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_fu_148 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_5_fu_934_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_fu_152 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_3_fu_942_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_fu_156 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln117_fu_733_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_0_0_01673_i_fu_160 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_181_i_fu_164 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_289_i_fu_168 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_397_i_fu_172 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_4105_i_fu_176 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_5113_i_fu_180 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_6121_i_fu_184 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_7129_i_fu_188 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_8137_i_fu_192 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_11374_i_fu_196 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_21775_i_fu_200 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_32176_i_fu_204 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_42577_i_fu_208 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_52978_i_fu_212 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_63379_i_fu_216 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_73780_i_fu_220 : STD_LOGIC_VECTOR (15 downto 0);
    signal reuse_select50_fu_1157_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_1_182_i_fu_224 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_1_283_i_fu_228 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_1_384_i_fu_232 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_1_485_i_fu_236 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_1_586_i_fu_240 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_1_687_i_fu_244 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_1_788_i_fu_248 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_2_190_i_fu_252 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_2_291_i_fu_256 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_2_392_i_fu_260 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_2_493_i_fu_264 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_2_594_i_fu_268 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_2_695_i_fu_272 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_2_796_i_fu_276 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_3_198_i_fu_280 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_3_299_i_fu_284 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_3_3100_i_fu_288 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_3_4101_i_fu_292 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_3_5102_i_fu_296 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_3_6103_i_fu_300 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_3_7104_i_fu_304 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_4_1106_i_fu_308 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_4_2107_i_fu_312 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_4_3108_i_fu_316 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_4_4109_i_fu_320 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_4_5110_i_fu_324 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_4_6111_i_fu_328 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_4_7112_i_fu_332 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_5_1114_i_fu_336 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_5_2115_i_fu_340 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_5_3116_i_fu_344 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_5_4117_i_fu_348 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_5_5118_i_fu_352 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_5_6119_i_fu_356 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_5_7120_i_fu_360 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_6_1122_i_fu_364 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_6_2123_i_fu_368 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_6_3124_i_fu_372 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_6_4125_i_fu_376 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_6_5126_i_fu_380 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_6_6127_i_fu_384 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_6_7128_i_fu_388 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_7_1130_i_fu_392 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_7_2131_i_fu_396 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_7_3132_i_fu_400 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_7_4133_i_fu_404 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_7_5134_i_fu_408 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_7_6135_i_fu_412 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_7_7136_i_fu_416 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_8_1138_i_fu_420 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_8_2139_i_fu_424 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_8_3140_i_fu_428 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_8_4141_i_fu_432 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_8_5142_i_fu_436 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_8_6143_i_fu_440 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_016_8_7144_i_fu_444 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_71_fu_863_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_72_fu_879_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal icmp_ln152_fu_873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln152_1_fu_889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln164_fu_901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln164_1_fu_906_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_4_fu_917_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln172_fu_923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln174_fu_928_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component srcnn_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component srcnn_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_exit_ready = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    reuse_addr_reg10_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg10_fu_132 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif (((icmp_ln117_fu_728_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    reuse_addr_reg10_fu_132 <= idxprom50_i_fu_739_p1;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg16_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg16_fu_124 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif (((icmp_ln117_fu_728_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    reuse_addr_reg16_fu_124 <= idxprom50_i_fu_739_p1;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg22_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg22_fu_116 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif (((icmp_ln117_fu_728_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    reuse_addr_reg22_fu_116 <= idxprom50_i_fu_739_p1;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg28_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg28_fu_108 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif (((icmp_ln117_fu_728_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    reuse_addr_reg28_fu_108 <= idxprom50_i_fu_739_p1;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg34_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg34_fu_100 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif (((icmp_ln117_fu_728_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    reuse_addr_reg34_fu_100 <= idxprom50_i_fu_739_p1;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg40_fu_92_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg40_fu_92 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif (((icmp_ln117_fu_728_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    reuse_addr_reg40_fu_92 <= idxprom50_i_fu_739_p1;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg46_fu_84_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg46_fu_84 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif (((icmp_ln117_fu_728_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    reuse_addr_reg46_fu_84 <= idxprom50_i_fu_739_p1;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg_fu_140 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif (((icmp_ln117_fu_728_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    reuse_addr_reg_fu_140 <= idxprom50_i_fu_739_p1;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg15_fu_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    reuse_reg15_fu_128 <= ap_const_lv16_0;
                elsif (((icmp_ln117_reg_2417 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    reuse_reg15_fu_128 <= reuse_select14_fu_1222_p3;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg21_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    reuse_reg21_fu_120 <= ap_const_lv16_0;
                elsif (((icmp_ln117_reg_2417 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    reuse_reg21_fu_120 <= reuse_select20_fu_1211_p3;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg27_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    reuse_reg27_fu_112 <= ap_const_lv16_0;
                elsif (((icmp_ln117_reg_2417 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    reuse_reg27_fu_112 <= reuse_select26_fu_1200_p3;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg33_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    reuse_reg33_fu_104 <= ap_const_lv16_0;
                elsif (((icmp_ln117_reg_2417 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    reuse_reg33_fu_104 <= reuse_select32_fu_1189_p3;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg39_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    reuse_reg39_fu_96 <= ap_const_lv16_0;
                elsif (((icmp_ln117_reg_2417 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    reuse_reg39_fu_96 <= reuse_select38_fu_1178_p3;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg45_fu_88_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    reuse_reg45_fu_88 <= ap_const_lv16_0;
                elsif (((icmp_ln117_reg_2417 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    reuse_reg45_fu_88 <= reuse_select44_fu_1167_p3;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg9_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    reuse_reg9_fu_136 <= ap_const_lv16_0;
                elsif (((icmp_ln117_reg_2417 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    reuse_reg9_fu_136 <= reuse_select_fu_1233_p3;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    reuse_reg_fu_144 <= ap_const_lv16_0;
                elsif (((icmp_ln117_reg_2417 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    reuse_reg_fu_144 <= s_pix_i_dout;
                end if;
            end if; 
        end if;
    end process;

    t_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    t_fu_156 <= ap_const_lv17_0;
                elsif (((icmp_ln117_fu_728_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    t_fu_156 <= add_ln117_fu_733_p2;
                end if;
            end if; 
        end if;
    end process;

    x_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    x_fu_148 <= ap_const_lv32_0;
                elsif (((icmp_ln117_fu_728_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    x_fu_148 <= x_5_fu_934_p3;
                end if;
            end if; 
        end if;
    end process;

    y_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    y_fu_152 <= ap_const_lv32_0;
                elsif (((icmp_ln117_fu_728_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    y_fu_152 <= y_3_fu_942_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln117_fu_728_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                addr_cmp13_reg_2493 <= addr_cmp13_fu_808_p2;
                addr_cmp19_reg_2482 <= addr_cmp19_fu_799_p2;
                addr_cmp25_reg_2471 <= addr_cmp25_fu_790_p2;
                addr_cmp31_reg_2460 <= addr_cmp31_fu_781_p2;
                addr_cmp37_reg_2449 <= addr_cmp37_fu_772_p2;
                addr_cmp43_reg_2438 <= addr_cmp43_fu_763_p2;
                addr_cmp49_reg_2427 <= addr_cmp49_fu_754_p2;
                addr_cmp_reg_2504 <= addr_cmp_fu_817_p2;
                and_ln152_reg_2509 <= and_ln152_fu_895_p2;
                lb1_1_addr_reg_2487 <= idxprom50_i_fu_739_p1(5 - 1 downto 0);
                lb1_2_addr_reg_2476 <= idxprom50_i_fu_739_p1(5 - 1 downto 0);
                lb1_3_addr_reg_2465 <= idxprom50_i_fu_739_p1(5 - 1 downto 0);
                lb1_4_addr_reg_2454 <= idxprom50_i_fu_739_p1(5 - 1 downto 0);
                lb1_5_addr_reg_2443 <= idxprom50_i_fu_739_p1(5 - 1 downto 0);
                lb1_6_addr_reg_2432 <= idxprom50_i_fu_739_p1(5 - 1 downto 0);
                lb1_7_addr_reg_2421 <= idxprom50_i_fu_739_p1(5 - 1 downto 0);
                lb1_addr_reg_2498 <= idxprom50_i_fu_739_p1(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln117_reg_2417 <= icmp_ln117_fu_728_p2;
                    zext_ln97_cast_reg_2406(8 downto 0) <= zext_ln97_cast_fu_616_p1(8 downto 0);
                    zext_ln98_cast_reg_2411(8 downto 0) <= zext_ln98_cast_fu_620_p1(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln117_reg_2417 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                p_0_0_01673_i_fu_160 <= p_0_0_016_11374_i_fu_196;
                p_0_0_016_11374_i_fu_196 <= p_0_0_016_21775_i_fu_200;
                p_0_0_016_181_i_fu_164 <= p_0_0_016_1_182_i_fu_224;
                p_0_0_016_1_182_i_fu_224 <= p_0_0_016_1_283_i_fu_228;
                p_0_0_016_1_283_i_fu_228 <= p_0_0_016_1_384_i_fu_232;
                p_0_0_016_1_384_i_fu_232 <= p_0_0_016_1_485_i_fu_236;
                p_0_0_016_1_485_i_fu_236 <= p_0_0_016_1_586_i_fu_240;
                p_0_0_016_1_586_i_fu_240 <= p_0_0_016_1_687_i_fu_244;
                p_0_0_016_1_687_i_fu_244 <= p_0_0_016_1_788_i_fu_248;
                p_0_0_016_1_788_i_fu_248 <= reuse_select44_fu_1167_p3;
                p_0_0_016_21775_i_fu_200 <= p_0_0_016_32176_i_fu_204;
                p_0_0_016_289_i_fu_168 <= p_0_0_016_2_190_i_fu_252;
                p_0_0_016_2_190_i_fu_252 <= p_0_0_016_2_291_i_fu_256;
                p_0_0_016_2_291_i_fu_256 <= p_0_0_016_2_392_i_fu_260;
                p_0_0_016_2_392_i_fu_260 <= p_0_0_016_2_493_i_fu_264;
                p_0_0_016_2_493_i_fu_264 <= p_0_0_016_2_594_i_fu_268;
                p_0_0_016_2_594_i_fu_268 <= p_0_0_016_2_695_i_fu_272;
                p_0_0_016_2_695_i_fu_272 <= p_0_0_016_2_796_i_fu_276;
                p_0_0_016_2_796_i_fu_276 <= reuse_select38_fu_1178_p3;
                p_0_0_016_32176_i_fu_204 <= p_0_0_016_42577_i_fu_208;
                p_0_0_016_397_i_fu_172 <= p_0_0_016_3_198_i_fu_280;
                p_0_0_016_3_198_i_fu_280 <= p_0_0_016_3_299_i_fu_284;
                p_0_0_016_3_299_i_fu_284 <= p_0_0_016_3_3100_i_fu_288;
                p_0_0_016_3_3100_i_fu_288 <= p_0_0_016_3_4101_i_fu_292;
                p_0_0_016_3_4101_i_fu_292 <= p_0_0_016_3_5102_i_fu_296;
                p_0_0_016_3_5102_i_fu_296 <= p_0_0_016_3_6103_i_fu_300;
                p_0_0_016_3_6103_i_fu_300 <= p_0_0_016_3_7104_i_fu_304;
                p_0_0_016_3_7104_i_fu_304 <= reuse_select32_fu_1189_p3;
                p_0_0_016_4105_i_fu_176 <= p_0_0_016_4_1106_i_fu_308;
                p_0_0_016_42577_i_fu_208 <= p_0_0_016_52978_i_fu_212;
                p_0_0_016_4_1106_i_fu_308 <= p_0_0_016_4_2107_i_fu_312;
                p_0_0_016_4_2107_i_fu_312 <= p_0_0_016_4_3108_i_fu_316;
                p_0_0_016_4_3108_i_fu_316 <= p_0_0_016_4_4109_i_fu_320;
                p_0_0_016_4_4109_i_fu_320 <= p_0_0_016_4_5110_i_fu_324;
                p_0_0_016_4_5110_i_fu_324 <= p_0_0_016_4_6111_i_fu_328;
                p_0_0_016_4_6111_i_fu_328 <= p_0_0_016_4_7112_i_fu_332;
                p_0_0_016_4_7112_i_fu_332 <= reuse_select26_fu_1200_p3;
                p_0_0_016_5113_i_fu_180 <= p_0_0_016_5_1114_i_fu_336;
                p_0_0_016_52978_i_fu_212 <= p_0_0_016_63379_i_fu_216;
                p_0_0_016_5_1114_i_fu_336 <= p_0_0_016_5_2115_i_fu_340;
                p_0_0_016_5_2115_i_fu_340 <= p_0_0_016_5_3116_i_fu_344;
                p_0_0_016_5_3116_i_fu_344 <= p_0_0_016_5_4117_i_fu_348;
                p_0_0_016_5_4117_i_fu_348 <= p_0_0_016_5_5118_i_fu_352;
                p_0_0_016_5_5118_i_fu_352 <= p_0_0_016_5_6119_i_fu_356;
                p_0_0_016_5_6119_i_fu_356 <= p_0_0_016_5_7120_i_fu_360;
                p_0_0_016_5_7120_i_fu_360 <= reuse_select20_fu_1211_p3;
                p_0_0_016_6121_i_fu_184 <= p_0_0_016_6_1122_i_fu_364;
                p_0_0_016_63379_i_fu_216 <= p_0_0_016_73780_i_fu_220;
                p_0_0_016_6_1122_i_fu_364 <= p_0_0_016_6_2123_i_fu_368;
                p_0_0_016_6_2123_i_fu_368 <= p_0_0_016_6_3124_i_fu_372;
                p_0_0_016_6_3124_i_fu_372 <= p_0_0_016_6_4125_i_fu_376;
                p_0_0_016_6_4125_i_fu_376 <= p_0_0_016_6_5126_i_fu_380;
                p_0_0_016_6_5126_i_fu_380 <= p_0_0_016_6_6127_i_fu_384;
                p_0_0_016_6_6127_i_fu_384 <= p_0_0_016_6_7128_i_fu_388;
                p_0_0_016_6_7128_i_fu_388 <= reuse_select14_fu_1222_p3;
                p_0_0_016_7129_i_fu_188 <= p_0_0_016_7_1130_i_fu_392;
                p_0_0_016_73780_i_fu_220 <= reuse_select50_fu_1157_p3;
                p_0_0_016_7_1130_i_fu_392 <= p_0_0_016_7_2131_i_fu_396;
                p_0_0_016_7_2131_i_fu_396 <= p_0_0_016_7_3132_i_fu_400;
                p_0_0_016_7_3132_i_fu_400 <= p_0_0_016_7_4133_i_fu_404;
                p_0_0_016_7_4133_i_fu_404 <= p_0_0_016_7_5134_i_fu_408;
                p_0_0_016_7_5134_i_fu_408 <= p_0_0_016_7_6135_i_fu_412;
                p_0_0_016_7_6135_i_fu_412 <= p_0_0_016_7_7136_i_fu_416;
                p_0_0_016_7_7136_i_fu_416 <= reuse_select_fu_1233_p3;
                p_0_0_016_8137_i_fu_192 <= p_0_0_016_8_1138_i_fu_420;
                p_0_0_016_8_1138_i_fu_420 <= p_0_0_016_8_2139_i_fu_424;
                p_0_0_016_8_2139_i_fu_424 <= p_0_0_016_8_3140_i_fu_428;
                p_0_0_016_8_3140_i_fu_428 <= p_0_0_016_8_4141_i_fu_432;
                p_0_0_016_8_4141_i_fu_432 <= p_0_0_016_8_5142_i_fu_436;
                p_0_0_016_8_5142_i_fu_436 <= p_0_0_016_8_6143_i_fu_440;
                p_0_0_016_8_6143_i_fu_440 <= p_0_0_016_8_7144_i_fu_444;
                p_0_0_016_8_7144_i_fu_444 <= s_pix_i_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln117_fu_728_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln152_fu_895_p2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                w_valid_reg_2513 <= w_valid_fu_911_p2;
            end if;
        end if;
    end process;
    zext_ln97_cast_reg_2406(31 downto 9) <= "00000000000000000000000";
    zext_ln98_cast_reg_2411(31 downto 9) <= "00000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln117_fu_733_p2 <= std_logic_vector(unsigned(t_fu_156) + unsigned(ap_const_lv17_1));
    add_ln174_fu_928_p2 <= std_logic_vector(unsigned(y_fu_152) + unsigned(ap_const_lv32_1));
    addr_cmp13_fu_808_p2 <= "1" when (reuse_addr_reg10_fu_132 = idxprom50_i_fu_739_p1) else "0";
    addr_cmp19_fu_799_p2 <= "1" when (reuse_addr_reg16_fu_124 = idxprom50_i_fu_739_p1) else "0";
    addr_cmp25_fu_790_p2 <= "1" when (reuse_addr_reg22_fu_116 = idxprom50_i_fu_739_p1) else "0";
    addr_cmp31_fu_781_p2 <= "1" when (reuse_addr_reg28_fu_108 = idxprom50_i_fu_739_p1) else "0";
    addr_cmp37_fu_772_p2 <= "1" when (reuse_addr_reg34_fu_100 = idxprom50_i_fu_739_p1) else "0";
    addr_cmp43_fu_763_p2 <= "1" when (reuse_addr_reg40_fu_92 = idxprom50_i_fu_739_p1) else "0";
    addr_cmp49_fu_754_p2 <= "1" when (reuse_addr_reg46_fu_84 = idxprom50_i_fu_739_p1) else "0";
    addr_cmp_fu_817_p2 <= "1" when (reuse_addr_reg_fu_140 = idxprom50_i_fu_739_p1) else "0";
    and_ln152_fu_895_p2 <= (icmp_ln152_fu_873_p2 and icmp_ln152_1_fu_889_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter2, s_pix_i_empty_n, icmp_ln117_reg_2417, s_win_i_full_n, ap_predicate_op312_write_state3)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((ap_predicate_op312_write_state3 = ap_const_boolean_1) and (s_win_i_full_n = ap_const_logic_0)) or ((icmp_ln117_reg_2417 = ap_const_lv1_0) and (s_pix_i_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, s_pix_i_empty_n, icmp_ln117_reg_2417, s_win_i_full_n, ap_predicate_op312_write_state3)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((ap_predicate_op312_write_state3 = ap_const_boolean_1) and (s_win_i_full_n = ap_const_logic_0)) or ((icmp_ln117_reg_2417 = ap_const_lv1_0) and (s_pix_i_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, s_pix_i_empty_n, icmp_ln117_reg_2417, s_win_i_full_n, ap_predicate_op312_write_state3)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((ap_predicate_op312_write_state3 = ap_const_boolean_1) and (s_win_i_full_n = ap_const_logic_0)) or ((icmp_ln117_reg_2417 = ap_const_lv1_0) and (s_pix_i_empty_n = ap_const_logic_0))));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter2_assign_proc : process(s_pix_i_empty_n, icmp_ln117_reg_2417, s_win_i_full_n, ap_predicate_op312_write_state3)
    begin
                ap_block_state3_pp0_stage0_iter2 <= (((ap_predicate_op312_write_state3 = ap_const_boolean_1) and (s_win_i_full_n = ap_const_logic_0)) or ((icmp_ln117_reg_2417 = ap_const_lv1_0) and (s_pix_i_empty_n = ap_const_logic_0)));
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln117_fu_728_p2)
    begin
        if (((icmp_ln117_fu_728_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_predicate_op312_write_state3_assign_proc : process(icmp_ln117_reg_2417, and_ln152_reg_2509)
    begin
                ap_predicate_op312_write_state3 <= ((ap_const_lv1_1 = and_ln152_reg_2509) and (icmp_ln117_reg_2417 = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln117_fu_728_p2 <= "1" when (t_fu_156 = empty) else "0";
    icmp_ln152_1_fu_889_p2 <= "1" when (signed(tmp_72_fu_879_p4) > signed(ap_const_lv29_0)) else "0";
    icmp_ln152_fu_873_p2 <= "1" when (signed(tmp_71_fu_863_p4) > signed(ap_const_lv29_0)) else "0";
    icmp_ln164_1_fu_906_p2 <= "1" when (signed(x_fu_148) < signed(zext_ln98_cast_reg_2411)) else "0";
    icmp_ln164_fu_901_p2 <= "1" when (signed(y_fu_152) < signed(zext_ln97_cast_reg_2406)) else "0";
    icmp_ln172_fu_923_p2 <= "1" when (x_4_fu_917_p2 = zext_ln98_cast_reg_2411) else "0";
    idxprom50_i_fu_739_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_fu_148),64));
    lb1_1_address0 <= idxprom50_i_fu_739_p1(5 - 1 downto 0);
    lb1_1_address1 <= lb1_1_addr_reg_2487;

    lb1_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lb1_1_ce0 <= ap_const_logic_1;
        else 
            lb1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lb1_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lb1_1_ce1 <= ap_const_logic_1;
        else 
            lb1_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    lb1_1_d1 <= reuse_select_fu_1233_p3;

    lb1_1_we1_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln117_reg_2417, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln117_reg_2417 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lb1_1_we1 <= ap_const_logic_1;
        else 
            lb1_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    lb1_2_address0 <= idxprom50_i_fu_739_p1(5 - 1 downto 0);
    lb1_2_address1 <= lb1_2_addr_reg_2476;

    lb1_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lb1_2_ce0 <= ap_const_logic_1;
        else 
            lb1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lb1_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lb1_2_ce1 <= ap_const_logic_1;
        else 
            lb1_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    lb1_2_d1 <= reuse_select14_fu_1222_p3;

    lb1_2_we1_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln117_reg_2417, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln117_reg_2417 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lb1_2_we1 <= ap_const_logic_1;
        else 
            lb1_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    lb1_3_address0 <= idxprom50_i_fu_739_p1(5 - 1 downto 0);
    lb1_3_address1 <= lb1_3_addr_reg_2465;

    lb1_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lb1_3_ce0 <= ap_const_logic_1;
        else 
            lb1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lb1_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lb1_3_ce1 <= ap_const_logic_1;
        else 
            lb1_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    lb1_3_d1 <= reuse_select20_fu_1211_p3;

    lb1_3_we1_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln117_reg_2417, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln117_reg_2417 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lb1_3_we1 <= ap_const_logic_1;
        else 
            lb1_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    lb1_4_address0 <= idxprom50_i_fu_739_p1(5 - 1 downto 0);
    lb1_4_address1 <= lb1_4_addr_reg_2454;

    lb1_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lb1_4_ce0 <= ap_const_logic_1;
        else 
            lb1_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lb1_4_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lb1_4_ce1 <= ap_const_logic_1;
        else 
            lb1_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    lb1_4_d1 <= reuse_select26_fu_1200_p3;

    lb1_4_we1_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln117_reg_2417, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln117_reg_2417 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lb1_4_we1 <= ap_const_logic_1;
        else 
            lb1_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    lb1_5_address0 <= idxprom50_i_fu_739_p1(5 - 1 downto 0);
    lb1_5_address1 <= lb1_5_addr_reg_2443;

    lb1_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lb1_5_ce0 <= ap_const_logic_1;
        else 
            lb1_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lb1_5_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lb1_5_ce1 <= ap_const_logic_1;
        else 
            lb1_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    lb1_5_d1 <= reuse_select32_fu_1189_p3;

    lb1_5_we1_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln117_reg_2417, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln117_reg_2417 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lb1_5_we1 <= ap_const_logic_1;
        else 
            lb1_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    lb1_6_address0 <= idxprom50_i_fu_739_p1(5 - 1 downto 0);
    lb1_6_address1 <= lb1_6_addr_reg_2432;

    lb1_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lb1_6_ce0 <= ap_const_logic_1;
        else 
            lb1_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lb1_6_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lb1_6_ce1 <= ap_const_logic_1;
        else 
            lb1_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    lb1_6_d1 <= reuse_select38_fu_1178_p3;

    lb1_6_we1_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln117_reg_2417, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln117_reg_2417 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lb1_6_we1 <= ap_const_logic_1;
        else 
            lb1_6_we1 <= ap_const_logic_0;
        end if; 
    end process;

    lb1_7_address0 <= idxprom50_i_fu_739_p1(5 - 1 downto 0);
    lb1_7_address1 <= lb1_7_addr_reg_2421;

    lb1_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lb1_7_ce0 <= ap_const_logic_1;
        else 
            lb1_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lb1_7_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lb1_7_ce1 <= ap_const_logic_1;
        else 
            lb1_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    lb1_7_d1 <= reuse_select44_fu_1167_p3;

    lb1_7_we1_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln117_reg_2417, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln117_reg_2417 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lb1_7_we1 <= ap_const_logic_1;
        else 
            lb1_7_we1 <= ap_const_logic_0;
        end if; 
    end process;

    lb1_address0 <= idxprom50_i_fu_739_p1(5 - 1 downto 0);
    lb1_address1 <= lb1_addr_reg_2498;

    lb1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lb1_ce0 <= ap_const_logic_1;
        else 
            lb1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lb1_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lb1_ce1 <= ap_const_logic_1;
        else 
            lb1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    lb1_d1 <= s_pix_i_dout;

    lb1_we1_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln117_reg_2417, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln117_reg_2417 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lb1_we1 <= ap_const_logic_1;
        else 
            lb1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    reuse_select14_fu_1222_p3 <= 
        reuse_reg9_fu_136 when (addr_cmp13_reg_2493(0) = '1') else 
        lb1_1_q0;
    reuse_select20_fu_1211_p3 <= 
        reuse_reg15_fu_128 when (addr_cmp19_reg_2482(0) = '1') else 
        lb1_2_q0;
    reuse_select26_fu_1200_p3 <= 
        reuse_reg21_fu_120 when (addr_cmp25_reg_2471(0) = '1') else 
        lb1_3_q0;
    reuse_select32_fu_1189_p3 <= 
        reuse_reg27_fu_112 when (addr_cmp31_reg_2460(0) = '1') else 
        lb1_4_q0;
    reuse_select38_fu_1178_p3 <= 
        reuse_reg33_fu_104 when (addr_cmp37_reg_2449(0) = '1') else 
        lb1_5_q0;
    reuse_select44_fu_1167_p3 <= 
        reuse_reg39_fu_96 when (addr_cmp43_reg_2438(0) = '1') else 
        lb1_6_q0;
    reuse_select50_fu_1157_p3 <= 
        reuse_reg45_fu_88 when (addr_cmp49_reg_2427(0) = '1') else 
        lb1_7_q0;
    reuse_select_fu_1233_p3 <= 
        reuse_reg_fu_144 when (addr_cmp_reg_2504(0) = '1') else 
        lb1_q0;

    s_pix_i_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, s_pix_i_empty_n, icmp_ln117_reg_2417, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln117_reg_2417 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            s_pix_i_blk_n <= s_pix_i_empty_n;
        else 
            s_pix_i_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    s_pix_i_read_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln117_reg_2417, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln117_reg_2417 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            s_pix_i_read <= ap_const_logic_1;
        else 
            s_pix_i_read <= ap_const_logic_0;
        end if; 
    end process;


    s_win_i_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, s_win_i_full_n, ap_predicate_op312_write_state3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op312_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            s_win_i_blk_n <= s_win_i_full_n;
        else 
            s_win_i_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    s_win_i_din <= (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((w_valid_reg_2513 & s_pix_i_dout) & p_0_0_016_8_7144_i_fu_444) & p_0_0_016_8_6143_i_fu_440) & p_0_0_016_8_5142_i_fu_436) & p_0_0_016_8_4141_i_fu_432) & p_0_0_016_8_3140_i_fu_428) & p_0_0_016_8_2139_i_fu_424) & p_0_0_016_8_1138_i_fu_420) & p_0_0_016_8137_i_fu_192) & reuse_select_fu_1233_p3) & p_0_0_016_7_7136_i_fu_416) & p_0_0_016_7_6135_i_fu_412) & p_0_0_016_7_5134_i_fu_408) & p_0_0_016_7_4133_i_fu_404) & p_0_0_016_7_3132_i_fu_400) & p_0_0_016_7_2131_i_fu_396) & p_0_0_016_7_1130_i_fu_392) & p_0_0_016_7129_i_fu_188) & reuse_select14_fu_1222_p3) & p_0_0_016_6_7128_i_fu_388) & p_0_0_016_6_6127_i_fu_384) & p_0_0_016_6_5126_i_fu_380) & p_0_0_016_6_4125_i_fu_376) & p_0_0_016_6_3124_i_fu_372) & p_0_0_016_6_2123_i_fu_368) & p_0_0_016_6_1122_i_fu_364) & p_0_0_016_6121_i_fu_184) & reuse_select20_fu_1211_p3) & p_0_0_016_5_7120_i_fu_360) & p_0_0_016_5_6119_i_fu_356) & p_0_0_016_5_5118_i_fu_352) & p_0_0_016_5_4117_i_fu_348) & p_0_0_016_5_3116_i_fu_344) 
    & p_0_0_016_5_2115_i_fu_340) & p_0_0_016_5_1114_i_fu_336) & p_0_0_016_5113_i_fu_180) & reuse_select26_fu_1200_p3) & p_0_0_016_4_7112_i_fu_332) & p_0_0_016_4_6111_i_fu_328) & p_0_0_016_4_5110_i_fu_324) & p_0_0_016_4_4109_i_fu_320) & p_0_0_016_4_3108_i_fu_316) & p_0_0_016_4_2107_i_fu_312) & p_0_0_016_4_1106_i_fu_308) & p_0_0_016_4105_i_fu_176) & reuse_select32_fu_1189_p3) & p_0_0_016_3_7104_i_fu_304) & p_0_0_016_3_6103_i_fu_300) & p_0_0_016_3_5102_i_fu_296) & p_0_0_016_3_4101_i_fu_292) & p_0_0_016_3_3100_i_fu_288) & p_0_0_016_3_299_i_fu_284) & p_0_0_016_3_198_i_fu_280) & p_0_0_016_397_i_fu_172) & reuse_select38_fu_1178_p3) & p_0_0_016_2_796_i_fu_276) & p_0_0_016_2_695_i_fu_272) & p_0_0_016_2_594_i_fu_268) & p_0_0_016_2_493_i_fu_264) & p_0_0_016_2_392_i_fu_260) & p_0_0_016_2_291_i_fu_256) & p_0_0_016_2_190_i_fu_252) & p_0_0_016_289_i_fu_168) & reuse_select44_fu_1167_p3) & p_0_0_016_1_788_i_fu_248) & p_0_0_016_1_687_i_fu_244) & p_0_0_016_1_586_i_fu_240) & p_0_0_016_1_485_i_fu_236) & p_0_0_016_1_384_i_fu_232) & p_0_0_016_1_283_i_fu_228) 
    & p_0_0_016_1_182_i_fu_224) & p_0_0_016_181_i_fu_164) & reuse_select50_fu_1157_p3) & p_0_0_016_73780_i_fu_220) & p_0_0_016_63379_i_fu_216) & p_0_0_016_52978_i_fu_212) & p_0_0_016_42577_i_fu_208) & p_0_0_016_32176_i_fu_204) & p_0_0_016_21775_i_fu_200) & p_0_0_016_11374_i_fu_196) & p_0_0_01673_i_fu_160);

    s_win_i_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op312_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op312_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            s_win_i_write <= ap_const_logic_1;
        else 
            s_win_i_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_71_fu_863_p4 <= y_fu_152(31 downto 3);
    tmp_72_fu_879_p4 <= x_fu_148(31 downto 3);
    w_valid_fu_911_p2 <= (icmp_ln164_fu_901_p2 and icmp_ln164_1_fu_906_p2);
    x_4_fu_917_p2 <= std_logic_vector(unsigned(x_fu_148) + unsigned(ap_const_lv32_1));
    x_5_fu_934_p3 <= 
        ap_const_lv32_0 when (icmp_ln172_fu_923_p2(0) = '1') else 
        x_4_fu_917_p2;
    y_3_fu_942_p3 <= 
        add_ln174_fu_928_p2 when (icmp_ln172_fu_923_p2(0) = '1') else 
        y_fu_152;
    zext_ln97_cast_fu_616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln97),32));
    zext_ln98_cast_fu_620_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln98),32));
end behav;
