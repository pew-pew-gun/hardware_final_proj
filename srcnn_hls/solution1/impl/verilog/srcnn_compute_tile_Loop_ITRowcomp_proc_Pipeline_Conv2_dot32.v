// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_compute_tile_Loop_ITRowcomp_proc_Pipeline_Conv2_dot32 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        zext_ln130,
        acc2_7_address0,
        acc2_7_ce0,
        acc2_7_we0,
        acc2_7_d0,
        acc2_7_address1,
        acc2_7_ce1,
        acc2_7_q1,
        acc2_6_address0,
        acc2_6_ce0,
        acc2_6_we0,
        acc2_6_d0,
        acc2_6_address1,
        acc2_6_ce1,
        acc2_6_q1,
        acc2_5_address0,
        acc2_5_ce0,
        acc2_5_we0,
        acc2_5_d0,
        acc2_5_address1,
        acc2_5_ce1,
        acc2_5_q1,
        acc2_4_address0,
        acc2_4_ce0,
        acc2_4_we0,
        acc2_4_d0,
        acc2_4_address1,
        acc2_4_ce1,
        acc2_4_q1,
        acc2_3_address0,
        acc2_3_ce0,
        acc2_3_we0,
        acc2_3_d0,
        acc2_3_address1,
        acc2_3_ce1,
        acc2_3_q1,
        acc2_2_address0,
        acc2_2_ce0,
        acc2_2_we0,
        acc2_2_d0,
        acc2_2_address1,
        acc2_2_ce1,
        acc2_2_q1,
        acc2_1_address0,
        acc2_1_ce0,
        acc2_1_we0,
        acc2_1_d0,
        acc2_1_address1,
        acc2_1_ce1,
        acc2_1_q1,
        acc2_address0,
        acc2_ce0,
        acc2_we0,
        acc2_d0,
        acc2_address1,
        acc2_ce1,
        acc2_q1,
        acc1_1,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_q0,
        grp_fu_3180_p_din0,
        grp_fu_3180_p_din1,
        grp_fu_3180_p_opcode,
        grp_fu_3180_p_dout0,
        grp_fu_3180_p_ce,
        grp_fu_5700_p_din0,
        grp_fu_5700_p_din1,
        grp_fu_5700_p_opcode,
        grp_fu_5700_p_dout0,
        grp_fu_5700_p_ce,
        grp_fu_5704_p_din0,
        grp_fu_5704_p_din1,
        grp_fu_5704_p_opcode,
        grp_fu_5704_p_dout0,
        grp_fu_5704_p_ce,
        grp_fu_5720_p_din0,
        grp_fu_5720_p_din1,
        grp_fu_5720_p_opcode,
        grp_fu_5720_p_dout0,
        grp_fu_5720_p_ce,
        grp_fu_5724_p_din0,
        grp_fu_5724_p_din1,
        grp_fu_5724_p_opcode,
        grp_fu_5724_p_dout0,
        grp_fu_5724_p_ce,
        grp_fu_5728_p_din0,
        grp_fu_5728_p_din1,
        grp_fu_5728_p_opcode,
        grp_fu_5728_p_dout0,
        grp_fu_5728_p_ce,
        grp_fu_5732_p_din0,
        grp_fu_5732_p_din1,
        grp_fu_5732_p_opcode,
        grp_fu_5732_p_dout0,
        grp_fu_5732_p_ce,
        grp_fu_5736_p_din0,
        grp_fu_5736_p_din1,
        grp_fu_5736_p_opcode,
        grp_fu_5736_p_dout0,
        grp_fu_5736_p_ce,
        grp_fu_5708_p_din0,
        grp_fu_5708_p_din1,
        grp_fu_5708_p_dout0,
        grp_fu_5708_p_ce,
        grp_fu_5712_p_din0,
        grp_fu_5712_p_din1,
        grp_fu_5712_p_dout0,
        grp_fu_5712_p_ce,
        grp_fu_5716_p_din0,
        grp_fu_5716_p_din1,
        grp_fu_5716_p_dout0,
        grp_fu_5716_p_ce,
        grp_fu_5740_p_din0,
        grp_fu_5740_p_din1,
        grp_fu_5740_p_dout0,
        grp_fu_5740_p_ce,
        grp_fu_5744_p_din0,
        grp_fu_5744_p_din1,
        grp_fu_5744_p_dout0,
        grp_fu_5744_p_ce,
        grp_fu_5748_p_din0,
        grp_fu_5748_p_din1,
        grp_fu_5748_p_dout0,
        grp_fu_5748_p_ce,
        grp_fu_5752_p_din0,
        grp_fu_5752_p_din1,
        grp_fu_5752_p_dout0,
        grp_fu_5752_p_ce,
        grp_fu_5756_p_din0,
        grp_fu_5756_p_din1,
        grp_fu_5756_p_dout0,
        grp_fu_5756_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [5:0] zext_ln130;
output  [1:0] acc2_7_address0;
output   acc2_7_ce0;
output   acc2_7_we0;
output  [31:0] acc2_7_d0;
output  [1:0] acc2_7_address1;
output   acc2_7_ce1;
input  [31:0] acc2_7_q1;
output  [1:0] acc2_6_address0;
output   acc2_6_ce0;
output   acc2_6_we0;
output  [31:0] acc2_6_d0;
output  [1:0] acc2_6_address1;
output   acc2_6_ce1;
input  [31:0] acc2_6_q1;
output  [1:0] acc2_5_address0;
output   acc2_5_ce0;
output   acc2_5_we0;
output  [31:0] acc2_5_d0;
output  [1:0] acc2_5_address1;
output   acc2_5_ce1;
input  [31:0] acc2_5_q1;
output  [1:0] acc2_4_address0;
output   acc2_4_ce0;
output   acc2_4_we0;
output  [31:0] acc2_4_d0;
output  [1:0] acc2_4_address1;
output   acc2_4_ce1;
input  [31:0] acc2_4_q1;
output  [1:0] acc2_3_address0;
output   acc2_3_ce0;
output   acc2_3_we0;
output  [31:0] acc2_3_d0;
output  [1:0] acc2_3_address1;
output   acc2_3_ce1;
input  [31:0] acc2_3_q1;
output  [1:0] acc2_2_address0;
output   acc2_2_ce0;
output   acc2_2_we0;
output  [31:0] acc2_2_d0;
output  [1:0] acc2_2_address1;
output   acc2_2_ce1;
input  [31:0] acc2_2_q1;
output  [1:0] acc2_1_address0;
output   acc2_1_ce0;
output   acc2_1_we0;
output  [31:0] acc2_1_d0;
output  [1:0] acc2_1_address1;
output   acc2_1_ce1;
input  [31:0] acc2_1_q1;
output  [1:0] acc2_address0;
output   acc2_ce0;
output   acc2_we0;
output  [31:0] acc2_d0;
output  [1:0] acc2_address1;
output   acc2_ce1;
input  [31:0] acc2_q1;
input  [31:0] acc1_1;
output  [7:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_q0;
output  [7:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_q0;
output  [7:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_q0;
output  [7:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_q0;
output  [7:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_q0;
output  [7:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_q0;
output  [7:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_q0;
output  [7:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_q0;
output  [31:0] grp_fu_3180_p_din0;
output  [31:0] grp_fu_3180_p_din1;
output  [1:0] grp_fu_3180_p_opcode;
input  [31:0] grp_fu_3180_p_dout0;
output   grp_fu_3180_p_ce;
output  [31:0] grp_fu_5700_p_din0;
output  [31:0] grp_fu_5700_p_din1;
output  [1:0] grp_fu_5700_p_opcode;
input  [31:0] grp_fu_5700_p_dout0;
output   grp_fu_5700_p_ce;
output  [31:0] grp_fu_5704_p_din0;
output  [31:0] grp_fu_5704_p_din1;
output  [1:0] grp_fu_5704_p_opcode;
input  [31:0] grp_fu_5704_p_dout0;
output   grp_fu_5704_p_ce;
output  [31:0] grp_fu_5720_p_din0;
output  [31:0] grp_fu_5720_p_din1;
output  [1:0] grp_fu_5720_p_opcode;
input  [31:0] grp_fu_5720_p_dout0;
output   grp_fu_5720_p_ce;
output  [31:0] grp_fu_5724_p_din0;
output  [31:0] grp_fu_5724_p_din1;
output  [1:0] grp_fu_5724_p_opcode;
input  [31:0] grp_fu_5724_p_dout0;
output   grp_fu_5724_p_ce;
output  [31:0] grp_fu_5728_p_din0;
output  [31:0] grp_fu_5728_p_din1;
output  [1:0] grp_fu_5728_p_opcode;
input  [31:0] grp_fu_5728_p_dout0;
output   grp_fu_5728_p_ce;
output  [31:0] grp_fu_5732_p_din0;
output  [31:0] grp_fu_5732_p_din1;
output  [1:0] grp_fu_5732_p_opcode;
input  [31:0] grp_fu_5732_p_dout0;
output   grp_fu_5732_p_ce;
output  [31:0] grp_fu_5736_p_din0;
output  [31:0] grp_fu_5736_p_din1;
output  [1:0] grp_fu_5736_p_opcode;
input  [31:0] grp_fu_5736_p_dout0;
output   grp_fu_5736_p_ce;
output  [31:0] grp_fu_5708_p_din0;
output  [31:0] grp_fu_5708_p_din1;
input  [31:0] grp_fu_5708_p_dout0;
output   grp_fu_5708_p_ce;
output  [31:0] grp_fu_5712_p_din0;
output  [31:0] grp_fu_5712_p_din1;
input  [31:0] grp_fu_5712_p_dout0;
output   grp_fu_5712_p_ce;
output  [31:0] grp_fu_5716_p_din0;
output  [31:0] grp_fu_5716_p_din1;
input  [31:0] grp_fu_5716_p_dout0;
output   grp_fu_5716_p_ce;
output  [31:0] grp_fu_5740_p_din0;
output  [31:0] grp_fu_5740_p_din1;
input  [31:0] grp_fu_5740_p_dout0;
output   grp_fu_5740_p_ce;
output  [31:0] grp_fu_5744_p_din0;
output  [31:0] grp_fu_5744_p_din1;
input  [31:0] grp_fu_5744_p_dout0;
output   grp_fu_5744_p_ce;
output  [31:0] grp_fu_5748_p_din0;
output  [31:0] grp_fu_5748_p_din1;
input  [31:0] grp_fu_5748_p_dout0;
output   grp_fu_5748_p_ce;
output  [31:0] grp_fu_5752_p_din0;
output  [31:0] grp_fu_5752_p_din1;
input  [31:0] grp_fu_5752_p_dout0;
output   grp_fu_5752_p_ce;
output  [31:0] grp_fu_5756_p_din0;
output  [31:0] grp_fu_5756_p_din1;
input  [31:0] grp_fu_5756_p_dout0;
output   grp_fu_5756_p_ce;

reg ap_idle;
reg acc2_7_ce0;
reg acc2_7_we0;
reg acc2_7_ce1;
reg acc2_6_ce0;
reg acc2_6_we0;
reg acc2_6_ce1;
reg acc2_5_ce0;
reg acc2_5_we0;
reg acc2_5_ce1;
reg acc2_4_ce0;
reg acc2_4_we0;
reg acc2_4_ce1;
reg acc2_3_ce0;
reg acc2_3_we0;
reg acc2_3_ce1;
reg acc2_2_ce0;
reg acc2_2_we0;
reg acc2_2_ce1;
reg acc2_1_ce0;
reg acc2_1_we0;
reg acc2_1_ce1;
reg acc2_ce0;
reg acc2_we0;
reg acc2_ce1;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] tmp_fu_428_p3;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [1:0] lshr_ln4_fu_436_p4;
reg   [1:0] lshr_ln4_reg_511;
reg   [1:0] lshr_ln4_reg_511_pp0_iter1_reg;
reg   [1:0] lshr_ln4_reg_511_pp0_iter2_reg;
reg   [1:0] lshr_ln4_reg_511_pp0_iter3_reg;
reg   [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_57_reg_556;
reg   [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_58_reg_561;
reg   [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_59_reg_566;
reg   [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_60_reg_571;
reg   [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_61_reg_576;
reg   [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_62_reg_581;
reg   [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_63_reg_586;
reg   [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_64_reg_591;
reg   [31:0] mul1_i_i_reg_596;
reg   [1:0] acc2_addr_reg_601;
reg   [1:0] acc2_addr_reg_601_pp0_iter5_reg;
reg   [1:0] acc2_addr_reg_601_pp0_iter6_reg;
reg   [1:0] acc2_addr_reg_601_pp0_iter7_reg;
reg   [1:0] acc2_1_addr_reg_607;
reg   [1:0] acc2_1_addr_reg_607_pp0_iter5_reg;
reg   [1:0] acc2_1_addr_reg_607_pp0_iter6_reg;
reg   [1:0] acc2_1_addr_reg_607_pp0_iter7_reg;
reg   [1:0] acc2_2_addr_reg_613;
reg   [1:0] acc2_2_addr_reg_613_pp0_iter5_reg;
reg   [1:0] acc2_2_addr_reg_613_pp0_iter6_reg;
reg   [1:0] acc2_2_addr_reg_613_pp0_iter7_reg;
reg   [1:0] acc2_3_addr_reg_619;
reg   [1:0] acc2_3_addr_reg_619_pp0_iter5_reg;
reg   [1:0] acc2_3_addr_reg_619_pp0_iter6_reg;
reg   [1:0] acc2_3_addr_reg_619_pp0_iter7_reg;
reg   [1:0] acc2_4_addr_reg_625;
reg   [1:0] acc2_4_addr_reg_625_pp0_iter5_reg;
reg   [1:0] acc2_4_addr_reg_625_pp0_iter6_reg;
reg   [1:0] acc2_4_addr_reg_625_pp0_iter7_reg;
reg   [1:0] acc2_5_addr_reg_631;
reg   [1:0] acc2_5_addr_reg_631_pp0_iter5_reg;
reg   [1:0] acc2_5_addr_reg_631_pp0_iter6_reg;
reg   [1:0] acc2_5_addr_reg_631_pp0_iter7_reg;
reg   [1:0] acc2_6_addr_reg_637;
reg   [1:0] acc2_6_addr_reg_637_pp0_iter5_reg;
reg   [1:0] acc2_6_addr_reg_637_pp0_iter6_reg;
reg   [1:0] acc2_6_addr_reg_637_pp0_iter7_reg;
reg   [31:0] mul83_1_i_i_reg_643;
reg   [31:0] mul83_2_i_i_reg_648;
reg   [31:0] mul83_3_i_i_reg_653;
reg   [31:0] mul83_4_i_i_reg_658;
reg   [31:0] mul83_5_i_i_reg_663;
reg   [31:0] mul83_6_i_i_reg_668;
reg   [31:0] mul83_7_i_i_reg_673;
reg   [1:0] acc2_7_addr_reg_678;
reg   [1:0] acc2_7_addr_reg_678_pp0_iter5_reg;
reg   [1:0] acc2_7_addr_reg_678_pp0_iter6_reg;
reg   [1:0] acc2_7_addr_reg_678_pp0_iter7_reg;
wire   [63:0] zext_ln185_fu_454_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln182_fu_477_p1;
reg   [5:0] n2_fu_84;
wire   [5:0] add_ln182_fu_466_p2;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_n2_4;
wire   [7:0] add_ln_fu_446_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage0_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_done_reg = 1'b0;
end

srcnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((tmp_fu_428_p3 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            n2_fu_84 <= add_ln182_fu_466_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            n2_fu_84 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        acc2_1_addr_reg_607 <= zext_ln182_fu_477_p1;
        acc2_1_addr_reg_607_pp0_iter5_reg <= acc2_1_addr_reg_607;
        acc2_1_addr_reg_607_pp0_iter6_reg <= acc2_1_addr_reg_607_pp0_iter5_reg;
        acc2_1_addr_reg_607_pp0_iter7_reg <= acc2_1_addr_reg_607_pp0_iter6_reg;
        acc2_2_addr_reg_613 <= zext_ln182_fu_477_p1;
        acc2_2_addr_reg_613_pp0_iter5_reg <= acc2_2_addr_reg_613;
        acc2_2_addr_reg_613_pp0_iter6_reg <= acc2_2_addr_reg_613_pp0_iter5_reg;
        acc2_2_addr_reg_613_pp0_iter7_reg <= acc2_2_addr_reg_613_pp0_iter6_reg;
        acc2_3_addr_reg_619 <= zext_ln182_fu_477_p1;
        acc2_3_addr_reg_619_pp0_iter5_reg <= acc2_3_addr_reg_619;
        acc2_3_addr_reg_619_pp0_iter6_reg <= acc2_3_addr_reg_619_pp0_iter5_reg;
        acc2_3_addr_reg_619_pp0_iter7_reg <= acc2_3_addr_reg_619_pp0_iter6_reg;
        acc2_4_addr_reg_625 <= zext_ln182_fu_477_p1;
        acc2_4_addr_reg_625_pp0_iter5_reg <= acc2_4_addr_reg_625;
        acc2_4_addr_reg_625_pp0_iter6_reg <= acc2_4_addr_reg_625_pp0_iter5_reg;
        acc2_4_addr_reg_625_pp0_iter7_reg <= acc2_4_addr_reg_625_pp0_iter6_reg;
        acc2_5_addr_reg_631 <= zext_ln182_fu_477_p1;
        acc2_5_addr_reg_631_pp0_iter5_reg <= acc2_5_addr_reg_631;
        acc2_5_addr_reg_631_pp0_iter6_reg <= acc2_5_addr_reg_631_pp0_iter5_reg;
        acc2_5_addr_reg_631_pp0_iter7_reg <= acc2_5_addr_reg_631_pp0_iter6_reg;
        acc2_6_addr_reg_637 <= zext_ln182_fu_477_p1;
        acc2_6_addr_reg_637_pp0_iter5_reg <= acc2_6_addr_reg_637;
        acc2_6_addr_reg_637_pp0_iter6_reg <= acc2_6_addr_reg_637_pp0_iter5_reg;
        acc2_6_addr_reg_637_pp0_iter7_reg <= acc2_6_addr_reg_637_pp0_iter6_reg;
        acc2_7_addr_reg_678 <= zext_ln182_fu_477_p1;
        acc2_7_addr_reg_678_pp0_iter5_reg <= acc2_7_addr_reg_678;
        acc2_7_addr_reg_678_pp0_iter6_reg <= acc2_7_addr_reg_678_pp0_iter5_reg;
        acc2_7_addr_reg_678_pp0_iter7_reg <= acc2_7_addr_reg_678_pp0_iter6_reg;
        acc2_addr_reg_601 <= zext_ln182_fu_477_p1;
        acc2_addr_reg_601_pp0_iter5_reg <= acc2_addr_reg_601;
        acc2_addr_reg_601_pp0_iter6_reg <= acc2_addr_reg_601_pp0_iter5_reg;
        acc2_addr_reg_601_pp0_iter7_reg <= acc2_addr_reg_601_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        lshr_ln4_reg_511_pp0_iter2_reg <= lshr_ln4_reg_511_pp0_iter1_reg;
        lshr_ln4_reg_511_pp0_iter3_reg <= lshr_ln4_reg_511_pp0_iter2_reg;
        mul1_i_i_reg_596 <= grp_fu_5708_p_dout0;
        mul83_1_i_i_reg_643 <= grp_fu_5712_p_dout0;
        mul83_2_i_i_reg_648 <= grp_fu_5716_p_dout0;
        mul83_3_i_i_reg_653 <= grp_fu_5740_p_dout0;
        mul83_4_i_i_reg_658 <= grp_fu_5744_p_dout0;
        mul83_5_i_i_reg_663 <= grp_fu_5748_p_dout0;
        mul83_6_i_i_reg_668 <= grp_fu_5752_p_dout0;
        mul83_7_i_i_reg_673 <= grp_fu_5756_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        lshr_ln4_reg_511_pp0_iter1_reg <= lshr_ln4_reg_511;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_57_reg_556 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_q0;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_58_reg_561 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_q0;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_59_reg_566 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_q0;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_60_reg_571 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_q0;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_61_reg_576 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_q0;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_62_reg_581 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_q0;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_63_reg_586 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_q0;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_64_reg_591 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_428_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lshr_ln4_reg_511 <= {{ap_sig_allocacmp_n2_4[4:3]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        acc2_1_ce0 = 1'b1;
    end else begin
        acc2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        acc2_1_ce1 = 1'b1;
    end else begin
        acc2_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        acc2_1_we0 = 1'b1;
    end else begin
        acc2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        acc2_2_ce0 = 1'b1;
    end else begin
        acc2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        acc2_2_ce1 = 1'b1;
    end else begin
        acc2_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        acc2_2_we0 = 1'b1;
    end else begin
        acc2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        acc2_3_ce0 = 1'b1;
    end else begin
        acc2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        acc2_3_ce1 = 1'b1;
    end else begin
        acc2_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        acc2_3_we0 = 1'b1;
    end else begin
        acc2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        acc2_4_ce0 = 1'b1;
    end else begin
        acc2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        acc2_4_ce1 = 1'b1;
    end else begin
        acc2_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        acc2_4_we0 = 1'b1;
    end else begin
        acc2_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        acc2_5_ce0 = 1'b1;
    end else begin
        acc2_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        acc2_5_ce1 = 1'b1;
    end else begin
        acc2_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        acc2_5_we0 = 1'b1;
    end else begin
        acc2_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        acc2_6_ce0 = 1'b1;
    end else begin
        acc2_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        acc2_6_ce1 = 1'b1;
    end else begin
        acc2_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        acc2_6_we0 = 1'b1;
    end else begin
        acc2_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        acc2_7_ce0 = 1'b1;
    end else begin
        acc2_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        acc2_7_ce1 = 1'b1;
    end else begin
        acc2_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        acc2_7_we0 = 1'b1;
    end else begin
        acc2_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        acc2_ce0 = 1'b1;
    end else begin
        acc2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        acc2_ce1 = 1'b1;
    end else begin
        acc2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        acc2_we0 = 1'b1;
    end else begin
        acc2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_428_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_n2_4 = 6'd0;
    end else begin
        ap_sig_allocacmp_n2_4 = n2_fu_84;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc2_1_address0 = acc2_1_addr_reg_607_pp0_iter7_reg;

assign acc2_1_address1 = zext_ln182_fu_477_p1;

assign acc2_1_d0 = grp_fu_5700_p_dout0;

assign acc2_2_address0 = acc2_2_addr_reg_613_pp0_iter7_reg;

assign acc2_2_address1 = zext_ln182_fu_477_p1;

assign acc2_2_d0 = grp_fu_5704_p_dout0;

assign acc2_3_address0 = acc2_3_addr_reg_619_pp0_iter7_reg;

assign acc2_3_address1 = zext_ln182_fu_477_p1;

assign acc2_3_d0 = grp_fu_5720_p_dout0;

assign acc2_4_address0 = acc2_4_addr_reg_625_pp0_iter7_reg;

assign acc2_4_address1 = zext_ln182_fu_477_p1;

assign acc2_4_d0 = grp_fu_5724_p_dout0;

assign acc2_5_address0 = acc2_5_addr_reg_631_pp0_iter7_reg;

assign acc2_5_address1 = zext_ln182_fu_477_p1;

assign acc2_5_d0 = grp_fu_5728_p_dout0;

assign acc2_6_address0 = acc2_6_addr_reg_637_pp0_iter7_reg;

assign acc2_6_address1 = zext_ln182_fu_477_p1;

assign acc2_6_d0 = grp_fu_5732_p_dout0;

assign acc2_7_address0 = acc2_7_addr_reg_678_pp0_iter7_reg;

assign acc2_7_address1 = zext_ln182_fu_477_p1;

assign acc2_7_d0 = grp_fu_5736_p_dout0;

assign acc2_address0 = acc2_addr_reg_601_pp0_iter7_reg;

assign acc2_address1 = zext_ln182_fu_477_p1;

assign acc2_d0 = grp_fu_3180_p_dout0;

assign add_ln182_fu_466_p2 = (ap_sig_allocacmp_n2_4 + 6'd8);

assign add_ln_fu_446_p3 = {{lshr_ln4_fu_436_p4}, {zext_ln130}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_3180_p_ce = 1'b1;

assign grp_fu_3180_p_din0 = acc2_q1;

assign grp_fu_3180_p_din1 = mul1_i_i_reg_596;

assign grp_fu_3180_p_opcode = 2'd0;

assign grp_fu_5700_p_ce = 1'b1;

assign grp_fu_5700_p_din0 = acc2_1_q1;

assign grp_fu_5700_p_din1 = mul83_1_i_i_reg_643;

assign grp_fu_5700_p_opcode = 2'd0;

assign grp_fu_5704_p_ce = 1'b1;

assign grp_fu_5704_p_din0 = acc2_2_q1;

assign grp_fu_5704_p_din1 = mul83_2_i_i_reg_648;

assign grp_fu_5704_p_opcode = 2'd0;

assign grp_fu_5708_p_ce = 1'b1;

assign grp_fu_5708_p_din0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_57_reg_556;

assign grp_fu_5708_p_din1 = acc1_1;

assign grp_fu_5712_p_ce = 1'b1;

assign grp_fu_5712_p_din0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_58_reg_561;

assign grp_fu_5712_p_din1 = acc1_1;

assign grp_fu_5716_p_ce = 1'b1;

assign grp_fu_5716_p_din0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_59_reg_566;

assign grp_fu_5716_p_din1 = acc1_1;

assign grp_fu_5720_p_ce = 1'b1;

assign grp_fu_5720_p_din0 = acc2_3_q1;

assign grp_fu_5720_p_din1 = mul83_3_i_i_reg_653;

assign grp_fu_5720_p_opcode = 2'd0;

assign grp_fu_5724_p_ce = 1'b1;

assign grp_fu_5724_p_din0 = acc2_4_q1;

assign grp_fu_5724_p_din1 = mul83_4_i_i_reg_658;

assign grp_fu_5724_p_opcode = 2'd0;

assign grp_fu_5728_p_ce = 1'b1;

assign grp_fu_5728_p_din0 = acc2_5_q1;

assign grp_fu_5728_p_din1 = mul83_5_i_i_reg_663;

assign grp_fu_5728_p_opcode = 2'd0;

assign grp_fu_5732_p_ce = 1'b1;

assign grp_fu_5732_p_din0 = acc2_6_q1;

assign grp_fu_5732_p_din1 = mul83_6_i_i_reg_668;

assign grp_fu_5732_p_opcode = 2'd0;

assign grp_fu_5736_p_ce = 1'b1;

assign grp_fu_5736_p_din0 = acc2_7_q1;

assign grp_fu_5736_p_din1 = mul83_7_i_i_reg_673;

assign grp_fu_5736_p_opcode = 2'd0;

assign grp_fu_5740_p_ce = 1'b1;

assign grp_fu_5740_p_din0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_60_reg_571;

assign grp_fu_5740_p_din1 = acc1_1;

assign grp_fu_5744_p_ce = 1'b1;

assign grp_fu_5744_p_din0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_61_reg_576;

assign grp_fu_5744_p_din1 = acc1_1;

assign grp_fu_5748_p_ce = 1'b1;

assign grp_fu_5748_p_din0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_62_reg_581;

assign grp_fu_5748_p_din1 = acc1_1;

assign grp_fu_5752_p_ce = 1'b1;

assign grp_fu_5752_p_din0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_63_reg_586;

assign grp_fu_5752_p_din1 = acc1_1;

assign grp_fu_5756_p_ce = 1'b1;

assign grp_fu_5756_p_din0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_64_reg_591;

assign grp_fu_5756_p_din1 = acc1_1;

assign lshr_ln4_fu_436_p4 = {{ap_sig_allocacmp_n2_4[4:3]}};

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 = zext_ln185_fu_454_p1;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 = zext_ln185_fu_454_p1;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 = zext_ln185_fu_454_p1;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 = zext_ln185_fu_454_p1;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 = zext_ln185_fu_454_p1;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 = zext_ln185_fu_454_p1;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 = zext_ln185_fu_454_p1;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 = zext_ln185_fu_454_p1;

assign tmp_fu_428_p3 = ap_sig_allocacmp_n2_4[32'd5];

assign zext_ln182_fu_477_p1 = lshr_ln4_reg_511_pp0_iter3_reg;

assign zext_ln185_fu_454_p1 = add_ln_fu_446_p3;

endmodule //srcnn_compute_tile_Loop_ITRowcomp_proc_Pipeline_Conv2_dot32
