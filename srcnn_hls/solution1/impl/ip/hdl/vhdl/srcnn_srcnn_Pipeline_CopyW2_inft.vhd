-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity srcnn_srcnn_Pipeline_CopyW2_inft is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_w2_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_w2_AWREADY : IN STD_LOGIC;
    m_axi_gmem_w2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_w2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_w2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_w2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_w2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_w2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_w2_WVALID : OUT STD_LOGIC;
    m_axi_gmem_w2_WREADY : IN STD_LOGIC;
    m_axi_gmem_w2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_w2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w2_WLAST : OUT STD_LOGIC;
    m_axi_gmem_w2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_w2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_w2_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_w2_ARREADY : IN STD_LOGIC;
    m_axi_gmem_w2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_w2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_w2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_w2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_w2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_w2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_w2_RVALID : IN STD_LOGIC;
    m_axi_gmem_w2_RREADY : OUT STD_LOGIC;
    m_axi_gmem_w2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_w2_RLAST : IN STD_LOGIC;
    m_axi_gmem_w2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_w2_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_w2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_w2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w2_BVALID : IN STD_LOGIC;
    m_axi_gmem_w2_BREADY : OUT STD_LOGIC;
    m_axi_gmem_w2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_w2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    zext_ln576_7 : IN STD_LOGIC_VECTOR (7 downto 0);
    zext_ln566_1 : IN STD_LOGIC_VECTOR (10 downto 0);
    sext_ln566 : IN STD_LOGIC_VECTOR (61 downto 0);
    trunc_ln566_3 : IN STD_LOGIC_VECTOR (2 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    grp_fu_5410_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_5410_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_5410_p_ce : OUT STD_LOGIC );
end;


architecture behav of srcnn_srcnn_Pipeline_CopyW2_inft is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_E : STD_LOGIC_VECTOR (11 downto 0) := "000000001110";
    constant ap_const_lv12_FF2 : STD_LOGIC_VECTOR (11 downto 0) := "111111110010";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv12_FF0 : STD_LOGIC_VECTOR (11 downto 0) := "111111110000";
    constant ap_const_lv12_35 : STD_LOGIC_VECTOR (11 downto 0) := "000000110101";
    constant ap_const_lv10_201 : STD_LOGIC_VECTOR (9 downto 0) := "1000000001";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv11_7F1 : STD_LOGIC_VECTOR (10 downto 0) := "11111110001";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv54_3FFFFFFFFFFFFF : STD_LOGIC_VECTOR (53 downto 0) := "111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv12_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000011";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv16_7FFF : STD_LOGIC_VECTOR (15 downto 0) := "0111111111111111";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln570_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal gmem_w2_blk_n_AR : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal gmem_w2_blk_n_R : STD_LOGIC;
    signal trunc_ln566_3_read_reg_1217 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i2_1_reg_1226 : STD_LOGIC_VECTOR (6 downto 0);
    signal i2_1_reg_1226_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal i2_1_reg_1226_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal i2_1_reg_1226_pp0_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal i2_1_reg_1226_pp0_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal i2_1_reg_1226_pp0_iter5_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal i2_1_reg_1226_pp0_iter6_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal i2_1_reg_1226_pp0_iter7_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal i2_1_reg_1226_pp0_iter8_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal i2_1_reg_1226_pp0_iter9_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal i2_1_reg_1226_pp0_iter10_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal i2_1_reg_1226_pp0_iter11_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal gmem_w2_addr_reg_1235 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_w2_addr_read_reg_1241 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_w2_addr_read_reg_1241_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_w2_addr_read_reg_1241_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln576_fu_390_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_1252 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln576_6_fu_436_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal zext_ln576_6_reg_1261 : STD_LOGIC_VECTOR (53 downto 0);
    signal sub_ln576_fu_440_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal sub_ln576_reg_1266 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln576_fu_446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln576_reg_1271 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln576_1_fu_452_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln576_1_reg_1277 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln576_2_fu_458_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln576_2_reg_1285 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln576_1_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln576_1_reg_1290 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln576_1_fu_480_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln576_1_reg_1295 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln576_4_fu_488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln576_4_reg_1302 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln576_5_fu_504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln576_5_reg_1307 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln576_6_fu_520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln576_6_reg_1312 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln576_7_fu_526_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln576_7_reg_1317 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln576_7_fu_536_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln576_7_reg_1323 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln576_10_fu_570_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln576_10_reg_1328 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln576_5_fu_584_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln576_fu_375_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i2_fu_180 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln570_fu_349_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i2_1 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln576_18_fu_1194_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln566_1_cast_fu_331_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln570_fu_355_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln576_5_fu_359_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln576_1_fu_365_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal sext_ln566_cast_fu_327_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal add_ln576_fu_369_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal bitcast_ln724_fu_394_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_410_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln576_1_fu_424_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln576_2_cast_fu_428_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal trunc_ln576_fu_398_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln576_fu_420_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln576_1_fu_468_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln576_2_fu_474_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_19_fu_494_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_fu_510_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln576_3_fu_530_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln576_4_fu_542_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln576_4_fu_550_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln576_6_fu_554_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_23_fu_560_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln576_2_fu_576_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln576_9_fu_579_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln576_fu_596_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_18_fu_618_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln576_2_fu_633_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln576_9_fu_636_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln576_fu_640_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln576_3_fu_613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln576_4_fu_646_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln576_3_fu_625_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln576_2_fu_650_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln576_2_fu_662_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln576_4_fu_667_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln576_1_fu_601_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln576_3_fu_609_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln576_1cast_fu_679_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bit_select59_i3_fu_671_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln576_3_fu_695_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln576_19_fu_700_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln576_10_fu_707_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal lshr_ln576_2_fu_711_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal and_ln576_21_fu_717_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln576_8_fu_723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln576_5_fu_658_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln576_1_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln576_fu_742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln576_8_fu_689_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln576_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln576_3_fu_754_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln576_4_fu_758_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_fu_764_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln576_2_fu_604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln576_1_fu_786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln576_10_fu_792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln576_9_fu_778_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln576_9_fu_805_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln576_11_fu_810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln576_fu_683_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln576_10_fu_797_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_fu_734_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln576_8_fu_772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln576_12_fu_823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln576_7_fu_835_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln576_11_fu_815_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_25_fu_863_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln576_5_fu_840_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln576_12_fu_877_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tobool_i3_fu_883_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln576_8_fu_844_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln576_10_fu_909_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln576_8_fu_914_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal lshr_ln576_fu_918_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal lshr_ln576_1_fu_924_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_26_fu_936_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln576_14_fu_903_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln576_15_fu_930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln576_10_fu_944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln576_13_fu_897_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln576_9_fu_871_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln576_12_fu_950_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln576_14_fu_891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln576_16_fu_976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln576_fu_970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln576_17_fu_988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln576_2_fu_958_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln576_3_fu_964_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln576_6_fu_994_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln576_4_fu_982_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln576_7_fu_1002_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln576_13_fu_829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln576_13_fu_1010_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln576_14_fu_1018_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_1034_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln576_1_fu_1042_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln576_5_fu_1048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln576_6_fu_1062_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln576_11_fu_857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln576_15_fu_1054_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln576_3_fu_1074_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_849_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln576_15_fu_1086_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln576_17_fu_1097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln576_2_fu_1068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln576_16_fu_1092_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln576_4_fu_1026_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln576_4_fu_1110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln576_18_fu_1116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln576_2_fu_1122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln576_5_fu_1128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln576_5_fu_1080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln576_8_fu_1139_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln576_16_fu_1102_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln576_6_fu_1145_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln576_9_fu_1151_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln576_7_fu_1133_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln576_3_fu_1157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln576_7_fu_1178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln576_19_fu_1183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln576_20_fu_1189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln576_5_fu_1163_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln576_17_fu_1171_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_324_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component srcnn_fpext_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component srcnn_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component srcnn_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter11_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    i2_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln570_fu_343_p2 = ap_const_lv1_0))) then 
                    i2_fu_180 <= add_ln570_fu_349_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i2_fu_180 <= ap_const_lv7_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                gmem_w2_addr_read_reg_1241 <= m_axi_gmem_w2_RDATA;
                gmem_w2_addr_read_reg_1241_pp0_iter10_reg <= gmem_w2_addr_read_reg_1241;
                gmem_w2_addr_read_reg_1241_pp0_iter11_reg <= gmem_w2_addr_read_reg_1241_pp0_iter10_reg;
                i2_1_reg_1226_pp0_iter10_reg <= i2_1_reg_1226_pp0_iter9_reg;
                i2_1_reg_1226_pp0_iter11_reg <= i2_1_reg_1226_pp0_iter10_reg;
                i2_1_reg_1226_pp0_iter2_reg <= i2_1_reg_1226_pp0_iter1_reg;
                i2_1_reg_1226_pp0_iter3_reg <= i2_1_reg_1226_pp0_iter2_reg;
                i2_1_reg_1226_pp0_iter4_reg <= i2_1_reg_1226_pp0_iter3_reg;
                i2_1_reg_1226_pp0_iter5_reg <= i2_1_reg_1226_pp0_iter4_reg;
                i2_1_reg_1226_pp0_iter6_reg <= i2_1_reg_1226_pp0_iter5_reg;
                i2_1_reg_1226_pp0_iter7_reg <= i2_1_reg_1226_pp0_iter6_reg;
                i2_1_reg_1226_pp0_iter8_reg <= i2_1_reg_1226_pp0_iter7_reg;
                i2_1_reg_1226_pp0_iter9_reg <= i2_1_reg_1226_pp0_iter8_reg;
                icmp_ln576_10_reg_1328 <= icmp_ln576_10_fu_570_p2;
                icmp_ln576_1_reg_1290 <= icmp_ln576_1_fu_462_p2;
                icmp_ln576_4_reg_1302 <= icmp_ln576_4_fu_488_p2;
                icmp_ln576_5_reg_1307 <= icmp_ln576_5_fu_504_p2;
                icmp_ln576_6_reg_1312 <= icmp_ln576_6_fu_520_p2;
                icmp_ln576_7_reg_1323 <= icmp_ln576_7_fu_536_p2;
                icmp_ln576_reg_1271 <= icmp_ln576_fu_446_p2;
                select_ln576_1_reg_1295 <= select_ln576_1_fu_480_p3;
                sub_ln576_1_reg_1277 <= sub_ln576_1_fu_452_p2;
                sub_ln576_reg_1266 <= sub_ln576_fu_440_p2;
                tmp_reg_1252 <= bitcast_ln724_fu_394_p1(63 downto 63);
                trunc_ln576_2_reg_1285 <= trunc_ln576_2_fu_458_p1;
                trunc_ln576_7_reg_1317 <= trunc_ln576_7_fu_526_p1;
                    zext_ln576_6_reg_1261(51 downto 0) <= zext_ln576_6_fu_436_p1(51 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                i2_1_reg_1226 <= ap_sig_allocacmp_i2_1;
                i2_1_reg_1226_pp0_iter1_reg <= i2_1_reg_1226;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln570_fu_343_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                gmem_w2_addr_reg_1235 <= sext_ln576_fu_375_p1;
            end if;
        end if;
    end process;
    zext_ln576_6_reg_1261(53 downto 52) <= "01";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln570_fu_349_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i2_1) + unsigned(ap_const_lv7_1));
    add_ln576_10_fu_909_p2 <= std_logic_vector(unsigned(trunc_ln576_7_reg_1317) + unsigned(ap_const_lv6_3));
    add_ln576_1_fu_468_p2 <= std_logic_vector(unsigned(sub_ln576_1_fu_452_p2) + unsigned(ap_const_lv12_FF2));
    add_ln576_2_fu_662_p2 <= std_logic_vector(unsigned(trunc_ln576_2_reg_1285) + unsigned(ap_const_lv11_7F1));
    add_ln576_3_fu_530_p2 <= std_logic_vector(unsigned(sub_ln576_1_fu_452_p2) + unsigned(ap_const_lv12_FF0));
    add_ln576_4_fu_758_p2 <= std_logic_vector(unsigned(select_ln576_2_fu_650_p3) + unsigned(zext_ln576_3_fu_754_p1));
    add_ln576_5_fu_359_p2 <= std_logic_vector(unsigned(zext_ln566_1_cast_fu_331_p1) + unsigned(zext_ln570_fu_355_p1));
    add_ln576_6_fu_554_p2 <= std_logic_vector(signed(sext_ln576_4_fu_550_p1) + signed(zext_ln576_fu_420_p1));
    add_ln576_7_fu_835_p2 <= std_logic_vector(unsigned(sub_ln576_1_reg_1277) + unsigned(ap_const_lv12_2));
    add_ln576_8_fu_844_p2 <= std_logic_vector(unsigned(sub_ln576_1_reg_1277) + unsigned(ap_const_lv12_3));
    add_ln576_9_fu_579_p2 <= std_logic_vector(unsigned(zext_ln576_7) + unsigned(zext_ln576_2_fu_576_p1));
    add_ln576_fu_369_p2 <= std_logic_vector(unsigned(zext_ln576_1_fu_365_p1) + unsigned(sext_ln566_cast_fu_327_p1));
    and_ln576_10_fu_792_p2 <= (xor_ln576_1_fu_786_p2 and icmp_ln576_1_reg_1290);
    and_ln576_11_fu_810_p2 <= (icmp_ln576_9_fu_805_p2 and icmp_ln576_5_reg_1307);
    and_ln576_12_fu_823_p2 <= (xor_ln576_8_fu_772_p2 and tmp_21_fu_734_p3);
    and_ln576_13_fu_829_p2 <= (and_ln576_12_fu_823_p2 and and_ln576_10_fu_792_p2);
    and_ln576_14_fu_891_p2 <= (tobool_i3_fu_883_p3 and icmp_ln576_12_fu_877_p2);
    and_ln576_15_fu_1086_p2 <= (xor_ln576_3_fu_1074_p2 and tmp_24_fu_849_p3);
    and_ln576_16_fu_1092_p2 <= (tmp_reg_1252 and and_ln576_15_fu_1086_p2);
    and_ln576_17_fu_1097_p2 <= (tmp_reg_1252 and icmp_ln576_11_fu_857_p2);
    and_ln576_18_fu_1116_p2 <= (xor_ln576_4_fu_1110_p2 and icmp_ln576_11_fu_857_p2);
    and_ln576_19_fu_1183_p2 <= (xor_ln576_7_fu_1178_p2 and or_ln576_3_fu_1157_p2);
    and_ln576_1_fu_729_p2 <= (icmp_ln576_8_fu_723_p2 and icmp_ln576_6_reg_1312);
    and_ln576_20_fu_1189_p2 <= (icmp_ln576_10_reg_1328 and and_ln576_19_fu_1183_p2);
    and_ln576_21_fu_717_p2 <= (select_ln576_fu_596_p3 and lshr_ln576_2_fu_711_p2);
    and_ln576_2_fu_958_p2 <= (xor_ln576_9_fu_871_p2 and icmp_ln576_13_fu_897_p2);
    and_ln576_3_fu_964_p2 <= (select_ln576_12_fu_950_p3 and and_ln576_14_fu_891_p2);
    and_ln576_4_fu_982_p2 <= (xor_ln576_fu_970_p2 and icmp_ln576_16_fu_976_p2);
    and_ln576_5_fu_1048_p2 <= (select_ln576_12_fu_950_p3 and or_ln576_1_fu_1042_p2);
    and_ln576_6_fu_1062_p2 <= (select_ln576_13_fu_1010_p3 and and_ln576_13_fu_829_p2);
    and_ln576_7_fu_1133_p2 <= (xor_ln576_5_fu_1128_p2 and or_ln576_2_fu_1122_p2);
    and_ln576_8_fu_1139_p2 <= (tmp_24_fu_849_p3 and or_ln576_5_fu_1080_p2);
    and_ln576_9_fu_1151_p2 <= (xor_ln576_6_fu_1145_p2 and select_ln576_16_fu_1102_p3);
    and_ln576_fu_748_p2 <= (select_ln576_8_fu_689_p3 and or_ln576_fu_742_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, m_axi_gmem_w2_ARREADY, m_axi_gmem_w2_RVALID)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (m_axi_gmem_w2_RVALID = ap_const_logic_0)) or ((m_axi_gmem_w2_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, m_axi_gmem_w2_ARREADY, m_axi_gmem_w2_RVALID)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (m_axi_gmem_w2_RVALID = ap_const_logic_0)) or ((m_axi_gmem_w2_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state10_pp0_stage0_iter9_assign_proc : process(m_axi_gmem_w2_RVALID)
    begin
                ap_block_state10_pp0_stage0_iter9 <= (m_axi_gmem_w2_RVALID = ap_const_logic_0);
    end process;

        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln570_fu_343_p2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln570_fu_343_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter11_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter11_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i2_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i2_fu_180, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_i2_1 <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_i2_1 <= i2_fu_180;
        end if; 
    end process;

    ashr_ln576_fu_640_p2 <= std_logic_vector(shift_right(signed(select_ln576_fu_596_p3),to_integer(unsigned('0' & zext_ln576_9_fu_636_p1(31-1 downto 0)))));
    bit_select59_i3_fu_671_p3 <= select_ln576_fu_596_p3(to_integer(unsigned(zext_ln576_4_fu_667_p1)) downto to_integer(unsigned(zext_ln576_4_fu_667_p1))) when (to_integer(unsigned(zext_ln576_4_fu_667_p1)) >= 0 and to_integer(unsigned(zext_ln576_4_fu_667_p1)) <=53) else "-";
    bitcast_ln576_fu_390_p1 <= gmem_w2_addr_read_reg_1241;
    bitcast_ln724_fu_394_p1 <= grp_fu_5410_p_dout0;

    gmem_w2_blk_n_AR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, m_axi_gmem_w2_ARREADY, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            gmem_w2_blk_n_AR <= m_axi_gmem_w2_ARREADY;
        else 
            gmem_w2_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_w2_blk_n_R_assign_proc : process(ap_enable_reg_pp0_iter9, m_axi_gmem_w2_RVALID, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            gmem_w2_blk_n_R <= m_axi_gmem_w2_RVALID;
        else 
            gmem_w2_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_324_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_324_ce <= ap_const_logic_1;
        else 
            grp_fu_324_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_5410_p_ce <= grp_fu_324_ce;
    grp_fu_5410_p_din0 <= bitcast_ln576_fu_390_p1;
    icmp_ln570_fu_343_p2 <= "1" when (ap_sig_allocacmp_i2_1 = ap_const_lv7_40) else "0";
    icmp_ln576_10_fu_570_p2 <= "1" when (signed(tmp_23_fu_560_p4) > signed(ap_const_lv11_0)) else "0";
    icmp_ln576_11_fu_857_p2 <= "1" when (signed(add_ln576_7_fu_835_p2) < signed(ap_const_lv12_36)) else "0";
    icmp_ln576_12_fu_877_p2 <= "1" when (unsigned(add_ln576_7_fu_835_p2) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln576_13_fu_897_p2 <= "1" when (signed(add_ln576_8_fu_844_p2) < signed(ap_const_lv12_36)) else "0";
    icmp_ln576_14_fu_903_p2 <= "1" when (unsigned(add_ln576_8_fu_844_p2) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln576_15_fu_930_p2 <= "1" when (lshr_ln576_fu_918_p2 = lshr_ln576_1_fu_924_p2) else "0";
    icmp_ln576_16_fu_976_p2 <= "1" when (lshr_ln576_fu_918_p2 = ap_const_lv54_0) else "0";
    icmp_ln576_17_fu_988_p2 <= "1" when (add_ln576_8_fu_844_p2 = ap_const_lv12_36) else "0";
    icmp_ln576_1_fu_462_p2 <= "1" when (signed(sub_ln576_1_fu_452_p2) > signed(ap_const_lv12_E)) else "0";
    icmp_ln576_2_fu_604_p2 <= "1" when (sub_ln576_1_reg_1277 = ap_const_lv12_E) else "0";
    icmp_ln576_3_fu_613_p2 <= "1" when (unsigned(select_ln576_1_reg_1295) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln576_4_fu_488_p2 <= "1" when (signed(add_ln576_1_fu_468_p2) > signed(ap_const_lv12_36)) else "0";
    icmp_ln576_5_fu_504_p2 <= "1" when (tmp_19_fu_494_p4 = ap_const_lv8_0) else "0";
    icmp_ln576_6_fu_520_p2 <= "1" when (signed(tmp_20_fu_510_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln576_7_fu_536_p2 <= "1" when (signed(add_ln576_3_fu_530_p2) > signed(ap_const_lv12_35)) else "0";
    icmp_ln576_8_fu_723_p2 <= "0" when (and_ln576_21_fu_717_p2 = ap_const_lv54_0) else "1";
    icmp_ln576_9_fu_805_p2 <= "1" when (signed(sub_ln576_1_reg_1277) < signed(ap_const_lv12_E)) else "0";
    icmp_ln576_fu_446_p2 <= "1" when (trunc_ln576_fu_398_p1 = ap_const_lv63_0) else "0";
    lshr_ln576_1_fu_924_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln576_8_fu_914_p1(31-1 downto 0)))));
    lshr_ln576_2_fu_711_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln576_10_fu_707_p1(31-1 downto 0)))));
    lshr_ln576_fu_918_p2 <= std_logic_vector(shift_right(unsigned(select_ln576_fu_596_p3),to_integer(unsigned('0' & zext_ln576_8_fu_914_p1(31-1 downto 0)))));
    m_axi_gmem_w2_ARADDR <= gmem_w2_addr_reg_1235;
    m_axi_gmem_w2_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_w2_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_w2_ARID <= ap_const_lv1_0;
    m_axi_gmem_w2_ARLEN <= ap_const_lv32_1;
    m_axi_gmem_w2_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_w2_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_w2_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_w2_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_w2_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_w2_ARUSER <= ap_const_lv1_0;

    m_axi_gmem_w2_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            m_axi_gmem_w2_ARVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_w2_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_w2_AWADDR <= ap_const_lv64_0;
    m_axi_gmem_w2_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_w2_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_w2_AWID <= ap_const_lv1_0;
    m_axi_gmem_w2_AWLEN <= ap_const_lv32_0;
    m_axi_gmem_w2_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_w2_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_w2_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_w2_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_w2_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_w2_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_w2_AWVALID <= ap_const_logic_0;
    m_axi_gmem_w2_BREADY <= ap_const_logic_0;

    m_axi_gmem_w2_RREADY_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            m_axi_gmem_w2_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_w2_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_w2_WDATA <= ap_const_lv32_0;
    m_axi_gmem_w2_WID <= ap_const_lv1_0;
    m_axi_gmem_w2_WLAST <= ap_const_logic_0;
    m_axi_gmem_w2_WSTRB <= ap_const_lv4_0;
    m_axi_gmem_w2_WUSER <= ap_const_lv1_0;
    m_axi_gmem_w2_WVALID <= ap_const_logic_0;
    or_ln576_1_fu_1042_p2 <= (xor_ln576_fu_970_p2 or tmp_27_fu_1034_p3);
    or_ln576_2_fu_1122_p2 <= (tmp_24_fu_849_p3 or and_ln576_18_fu_1116_p2);
    or_ln576_3_fu_1157_p2 <= (and_ln576_9_fu_1151_p2 or and_ln576_7_fu_1133_p2);
    or_ln576_4_fu_542_p3 <= (ap_const_lv10_201 & icmp_ln576_1_fu_462_p2);
    or_ln576_5_fu_1080_p2 <= (xor_ln576_3_fu_1074_p2 or select_ln576_15_fu_1054_p3);
    or_ln576_fu_742_p2 <= (trunc_ln576_5_fu_658_p1 or and_ln576_1_fu_729_p2);
    select_ln576_10_fu_797_p3 <= 
        add_ln576_4_fu_758_p2 when (and_ln576_10_fu_792_p2(0) = '1') else 
        select_ln576_9_fu_778_p3;
    select_ln576_11_fu_815_p3 <= 
        shl_ln576_fu_683_p2 when (and_ln576_11_fu_810_p2(0) = '1') else 
        select_ln576_10_fu_797_p3;
    select_ln576_12_fu_950_p3 <= 
        icmp_ln576_15_fu_930_p2 when (icmp_ln576_14_fu_903_p2(0) = '1') else 
        xor_ln576_10_fu_944_p2;
    select_ln576_13_fu_1010_p3 <= 
        and_ln576_3_fu_964_p2 when (and_ln576_2_fu_958_p2(0) = '1') else 
        select_ln576_6_fu_994_p3;
    select_ln576_14_fu_1018_p3 <= 
        and_ln576_4_fu_982_p2 when (and_ln576_2_fu_958_p2(0) = '1') else 
        select_ln576_7_fu_1002_p3;
    select_ln576_15_fu_1054_p3 <= 
        and_ln576_5_fu_1048_p2 when (and_ln576_13_fu_829_p2(0) = '1') else 
        select_ln576_13_fu_1010_p3;
    select_ln576_16_fu_1102_p3 <= 
        xor_ln576_2_fu_1068_p2 when (and_ln576_17_fu_1097_p2(0) = '1') else 
        and_ln576_16_fu_1092_p2;
    select_ln576_17_fu_1171_p3 <= 
        ap_const_lv16_0 when (icmp_ln576_reg_1271(0) = '1') else 
        select_ln576_11_fu_815_p3;
    select_ln576_18_fu_1194_p3 <= 
        select_ln576_5_fu_1163_p3 when (and_ln576_20_fu_1189_p2(0) = '1') else 
        select_ln576_17_fu_1171_p3;
    select_ln576_19_fu_700_p3 <= 
        ap_const_lv6_0 when (icmp_ln576_7_reg_1323(0) = '1') else 
        sub_ln576_3_fu_695_p2;
    select_ln576_1_fu_480_p3 <= 
        add_ln576_1_fu_468_p2 when (icmp_ln576_1_fu_462_p2(0) = '1') else 
        sub_ln576_2_fu_474_p2;
    select_ln576_2_fu_650_p3 <= 
        trunc_ln576_4_fu_646_p1 when (icmp_ln576_3_fu_613_p2(0) = '1') else 
        select_ln576_3_fu_625_p3;
    select_ln576_3_fu_625_p3 <= 
        ap_const_lv16_FFFF when (tmp_18_fu_618_p3(0) = '1') else 
        ap_const_lv16_0;
    select_ln576_4_fu_1026_p3 <= 
        select_ln576_13_fu_1010_p3 when (and_ln576_13_fu_829_p2(0) = '1') else 
        select_ln576_14_fu_1018_p3;
    select_ln576_5_fu_1163_p3 <= 
        ap_const_lv16_7FFF when (and_ln576_7_fu_1133_p2(0) = '1') else 
        ap_const_lv16_8000;
    select_ln576_6_fu_994_p3 <= 
        and_ln576_14_fu_891_p2 when (icmp_ln576_17_fu_988_p2(0) = '1') else 
        xor_ln576_9_fu_871_p2;
    select_ln576_7_fu_1002_p3 <= 
        xor_ln576_fu_970_p2 when (icmp_ln576_17_fu_988_p2(0) = '1') else 
        xor_ln576_9_fu_871_p2;
    select_ln576_8_fu_689_p3 <= 
        tmp_reg_1252 when (icmp_ln576_4_reg_1302(0) = '1') else 
        bit_select59_i3_fu_671_p3;
    select_ln576_9_fu_778_p3 <= 
        trunc_ln576_3_fu_609_p1 when (icmp_ln576_2_fu_604_p2(0) = '1') else 
        ap_const_lv16_0;
    select_ln576_fu_596_p3 <= 
        sub_ln576_reg_1266 when (tmp_reg_1252(0) = '1') else 
        zext_ln576_6_reg_1261;
        sext_ln566_cast_fu_327_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln566),63));

        sext_ln576_1_fu_601_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln576_1_reg_1295),31));

    sext_ln576_1cast_fu_679_p1 <= sext_ln576_1_fu_601_p1(16 - 1 downto 0);
        sext_ln576_2_fu_633_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln576_1_reg_1295),32));

        sext_ln576_4_fu_550_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(or_ln576_4_fu_542_p3),12));

        sext_ln576_5_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln576_7_fu_835_p2),32));

        sext_ln576_fu_375_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln576_fu_369_p2),64));

    shl_ln576_fu_683_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln576_3_fu_609_p1),to_integer(unsigned('0' & sext_ln576_1cast_fu_679_p1(16-1 downto 0)))));
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 <= zext_ln576_5_fu_584_p1(8 - 1 downto 0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_d0 <= select_ln576_18_fu_1194_p3;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0_assign_proc : process(ap_enable_reg_pp0_iter12, trunc_ln566_3_read_reg_1217, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (trunc_ln566_3_read_reg_1217 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 <= zext_ln576_5_fu_584_p1(8 - 1 downto 0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_d0 <= select_ln576_18_fu_1194_p3;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0_assign_proc : process(ap_enable_reg_pp0_iter12, trunc_ln566_3_read_reg_1217, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (trunc_ln566_3_read_reg_1217 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 <= zext_ln576_5_fu_584_p1(8 - 1 downto 0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_d0 <= select_ln576_18_fu_1194_p3;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0_assign_proc : process(ap_enable_reg_pp0_iter12, trunc_ln566_3_read_reg_1217, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (trunc_ln566_3_read_reg_1217 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 <= zext_ln576_5_fu_584_p1(8 - 1 downto 0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_d0 <= select_ln576_18_fu_1194_p3;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0_assign_proc : process(ap_enable_reg_pp0_iter12, trunc_ln566_3_read_reg_1217, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (trunc_ln566_3_read_reg_1217 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 <= zext_ln576_5_fu_584_p1(8 - 1 downto 0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_d0 <= select_ln576_18_fu_1194_p3;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0_assign_proc : process(ap_enable_reg_pp0_iter12, trunc_ln566_3_read_reg_1217, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (trunc_ln566_3_read_reg_1217 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 <= zext_ln576_5_fu_584_p1(8 - 1 downto 0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_d0 <= select_ln576_18_fu_1194_p3;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0_assign_proc : process(ap_enable_reg_pp0_iter12, trunc_ln566_3_read_reg_1217, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (trunc_ln566_3_read_reg_1217 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 <= zext_ln576_5_fu_584_p1(8 - 1 downto 0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_d0 <= select_ln576_18_fu_1194_p3;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0_assign_proc : process(ap_enable_reg_pp0_iter12, trunc_ln566_3_read_reg_1217, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (trunc_ln566_3_read_reg_1217 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 <= zext_ln576_5_fu_584_p1(8 - 1 downto 0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_d0 <= select_ln576_18_fu_1194_p3;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0_assign_proc : process(ap_enable_reg_pp0_iter12, trunc_ln566_3_read_reg_1217, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (trunc_ln566_3_read_reg_1217 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln576_1_fu_452_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln576_fu_420_p1));
    sub_ln576_2_fu_474_p2 <= std_logic_vector(unsigned(ap_const_lv12_E) - unsigned(sub_ln576_1_fu_452_p2));
    sub_ln576_3_fu_695_p2 <= std_logic_vector(unsigned(ap_const_lv6_5) - unsigned(trunc_ln576_7_reg_1317));
    sub_ln576_fu_440_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln576_6_fu_436_p1));
    tmp_18_fu_618_p3 <= gmem_w2_addr_read_reg_1241_pp0_iter11_reg(31 downto 31);
    tmp_19_fu_494_p4 <= select_ln576_1_fu_480_p3(11 downto 4);
    tmp_20_fu_510_p4 <= sub_ln576_1_fu_452_p2(11 downto 4);
    tmp_21_fu_734_p3 <= select_ln576_2_fu_650_p3(15 downto 15);
    tmp_22_fu_764_p3 <= add_ln576_4_fu_758_p2(15 downto 15);
    tmp_23_fu_560_p4 <= add_ln576_6_fu_554_p2(11 downto 1);
    tmp_24_fu_849_p3 <= select_ln576_11_fu_815_p3(15 downto 15);
    tmp_25_fu_863_p3 <= add_ln576_7_fu_835_p2(11 downto 11);
    tmp_26_fu_936_p3 <= add_ln576_8_fu_844_p2(11 downto 11);
    tmp_27_fu_1034_p3 <= add_ln576_7_fu_835_p2(11 downto 11);
    tmp_s_fu_410_p4 <= bitcast_ln724_fu_394_p1(62 downto 52);
    tobool_i3_fu_883_p3 <= select_ln576_fu_596_p3(to_integer(unsigned(sext_ln576_5_fu_840_p1)) downto to_integer(unsigned(sext_ln576_5_fu_840_p1))) when (to_integer(unsigned(sext_ln576_5_fu_840_p1)) >= 0 and to_integer(unsigned(sext_ln576_5_fu_840_p1)) <=53) else "-";
    trunc_ln566_3_read_reg_1217 <= trunc_ln566_3;
    trunc_ln576_1_fu_424_p1 <= bitcast_ln724_fu_394_p1(52 - 1 downto 0);
    trunc_ln576_2_fu_458_p1 <= sub_ln576_1_fu_452_p2(11 - 1 downto 0);
    trunc_ln576_3_fu_609_p1 <= select_ln576_fu_596_p3(16 - 1 downto 0);
    trunc_ln576_4_fu_646_p1 <= ashr_ln576_fu_640_p2(16 - 1 downto 0);
    trunc_ln576_5_fu_658_p1 <= select_ln576_2_fu_650_p3(1 - 1 downto 0);
    trunc_ln576_7_fu_526_p1 <= sub_ln576_1_fu_452_p2(6 - 1 downto 0);
    trunc_ln576_fu_398_p1 <= bitcast_ln724_fu_394_p1(63 - 1 downto 0);
    xor_ln576_10_fu_944_p2 <= (tmp_26_fu_936_p3 xor ap_const_lv1_1);
    xor_ln576_1_fu_786_p2 <= (icmp_ln576_2_fu_604_p2 xor ap_const_lv1_1);
    xor_ln576_2_fu_1068_p2 <= (ap_const_lv1_1 xor and_ln576_6_fu_1062_p2);
    xor_ln576_3_fu_1074_p2 <= (icmp_ln576_11_fu_857_p2 xor ap_const_lv1_1);
    xor_ln576_4_fu_1110_p2 <= (select_ln576_4_fu_1026_p3 xor ap_const_lv1_1);
    xor_ln576_5_fu_1128_p2 <= (tmp_reg_1252 xor ap_const_lv1_1);
    xor_ln576_6_fu_1145_p2 <= (ap_const_lv1_1 xor and_ln576_8_fu_1139_p2);
    xor_ln576_7_fu_1178_p2 <= (icmp_ln576_reg_1271 xor ap_const_lv1_1);
    xor_ln576_8_fu_772_p2 <= (tmp_22_fu_764_p3 xor ap_const_lv1_1);
    xor_ln576_9_fu_871_p2 <= (tmp_25_fu_863_p3 xor ap_const_lv1_1);
    xor_ln576_fu_970_p2 <= (ap_const_lv1_1 xor and_ln576_14_fu_891_p2);
    zext_ln566_1_cast_fu_331_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln566_1),12));
    zext_ln570_fu_355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_i2_1),12));
    zext_ln576_10_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln576_19_fu_700_p3),54));
    zext_ln576_1_fu_365_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln576_5_fu_359_p2),63));
    zext_ln576_2_cast_fu_428_p3 <= (ap_const_lv1_1 & trunc_ln576_1_fu_424_p1);
    zext_ln576_2_fu_576_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i2_1_reg_1226_pp0_iter11_reg),8));
    zext_ln576_3_fu_754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln576_fu_748_p2),16));
    zext_ln576_4_fu_667_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln576_2_fu_662_p2),32));
    zext_ln576_5_fu_584_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln576_9_fu_579_p2),64));
    zext_ln576_6_fu_436_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln576_2_cast_fu_428_p3),54));
    zext_ln576_8_fu_914_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln576_10_fu_909_p2),54));
    zext_ln576_9_fu_636_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln576_2_fu_633_p1),54));
    zext_ln576_fu_420_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_410_p4),12));
end behav;
