-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity srcnn_load_tile_to_stream3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_in_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_in_AWREADY : IN STD_LOGIC;
    m_axi_gmem_in_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_in_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_in_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_in_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_in_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_in_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_in_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_in_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_in_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_in_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_in_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_in_WVALID : OUT STD_LOGIC;
    m_axi_gmem_in_WREADY : IN STD_LOGIC;
    m_axi_gmem_in_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_in_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_in_WLAST : OUT STD_LOGIC;
    m_axi_gmem_in_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_in_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_in_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_in_ARREADY : IN STD_LOGIC;
    m_axi_gmem_in_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_in_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_in_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_in_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_in_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_in_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_in_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_in_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_in_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_in_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_in_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_in_RVALID : IN STD_LOGIC;
    m_axi_gmem_in_RREADY : OUT STD_LOGIC;
    m_axi_gmem_in_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_in_RLAST : IN STD_LOGIC;
    m_axi_gmem_in_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_in_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_in_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_in_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_in_BVALID : IN STD_LOGIC;
    m_axi_gmem_in_BREADY : OUT STD_LOGIC;
    m_axi_gmem_in_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_in_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_in_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    input_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
    h0 : IN STD_LOGIC_VECTOR (8 downto 0);
    w0 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read : IN STD_LOGIC_VECTOR (7 downto 0);
    s_pix_i_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    s_pix_i_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    s_pix_i_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    s_pix_i_full_n : IN STD_LOGIC;
    s_pix_i_write : OUT STD_LOGIC;
    tw_eff_loc_i_c2_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    tw_eff_loc_i_c2_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    tw_eff_loc_i_c2_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    tw_eff_loc_i_c2_full_n : IN STD_LOGIC;
    tw_eff_loc_i_c2_write : OUT STD_LOGIC;
    w0_c_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    w0_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    w0_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    w0_c_full_n : IN STD_LOGIC;
    w0_c_write : OUT STD_LOGIC;
    h0_c5_din : OUT STD_LOGIC_VECTOR (8 downto 0);
    h0_c5_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    h0_c5_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    h0_c5_full_n : IN STD_LOGIC;
    h0_c5_write : OUT STD_LOGIC );
end;


architecture behav of srcnn_load_tile_to_stream3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (14 downto 0) := "000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (14 downto 0) := "000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (14 downto 0) := "000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (14 downto 0) := "000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (14 downto 0) := "000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (14 downto 0) := "001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (14 downto 0) := "010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv9_10 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_10 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_const_lv9_C : STD_LOGIC_VECTOR (8 downto 0) := "000001100";
    constant ap_const_lv10_3FA : STD_LOGIC_VECTOR (9 downto 0) := "1111111010";
    constant ap_const_lv9_1FA : STD_LOGIC_VECTOR (8 downto 0) := "111111010";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv10_FE : STD_LOGIC_VECTOR (9 downto 0) := "0011111110";
    constant ap_const_lv8_FE : STD_LOGIC_VECTOR (7 downto 0) := "11111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_E : STD_LOGIC_VECTOR (11 downto 0) := "000000001110";
    constant ap_const_lv12_FF2 : STD_LOGIC_VECTOR (11 downto 0) := "111111110010";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv11_7F1 : STD_LOGIC_VECTOR (10 downto 0) := "11111110001";
    constant ap_const_lv12_FF0 : STD_LOGIC_VECTOR (11 downto 0) := "111111110000";
    constant ap_const_lv12_35 : STD_LOGIC_VECTOR (11 downto 0) := "000000110101";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv54_3FFFFFFFFFFFFF : STD_LOGIC_VECTOR (53 downto 0) := "111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv12_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000011";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal gmem_in_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal gmem_in_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal s_pix_i_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal tw_eff_loc_i_c2_blk_n : STD_LOGIC;
    signal w0_c_blk_n : STD_LOGIC;
    signal h0_c5_blk_n : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal add_ln76_fu_313_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln76_reg_1286 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln77_fu_319_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln77_reg_1291 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln77_fu_325_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln77_reg_1296 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln76_fu_335_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln76_reg_1301 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln76_1_fu_343_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln76_1_reg_1306 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln83_fu_349_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln83_reg_1311 : STD_LOGIC_VECTOR (9 downto 0);
    signal py_2_fu_370_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal py_2_reg_1319 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal sext_ln82_fu_454_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln82_reg_1324 : STD_LOGIC_VECTOR (19 downto 0);
    signal icmp_ln76_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal px_1_fu_467_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal px_1_reg_1332 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal gmem_in_addr_reg_1337 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln82_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_in_addr_read_reg_1343 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal tmp_75_fu_583_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_75_reg_1354 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal select_ln86_fu_627_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln86_reg_1362 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln86_fu_635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_reg_1367 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_1_fu_651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_1_reg_1372 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_1_fu_669_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln86_1_reg_1377 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln86_2_fu_677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_2_reg_1384 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln86_4_fu_683_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln86_4_reg_1390 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln86_4_fu_687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_4_reg_1396 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_5_fu_703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_5_reg_1401 : STD_LOGIC_VECTOR (0 downto 0);
    signal bit_select59_i_i_fu_719_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal bit_select59_i_i_reg_1406 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_6_fu_737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_6_reg_1411 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_8_fu_789_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_8_reg_1416 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_9_fu_795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_9_reg_1421 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_10_fu_817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_10_reg_1426 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_13_fu_971_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_13_reg_1432 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_14_fu_979_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_14_reg_1438 : STD_LOGIC_VECTOR (0 downto 0);
    signal px_reg_255 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln86_fu_557_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal py_fu_184 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_266_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln616_fu_269_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln615_fu_283_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_275_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln616_fu_287_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal th_eff_fu_293_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal th_eff_cast_fu_309_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal h0_cast4_i_fu_305_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal w0_cast_fu_301_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln83_fu_329_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read_cast_fu_339_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln76_fu_361_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln77_fu_376_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal iy_fu_380_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_73_fu_390_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln77_2_fu_385_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal iy_1_fu_398_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln79_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln77_fu_406_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal iy_2_fu_416_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln_fu_424_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal shl_ln86_1_fu_436_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln86_fu_432_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln86_1_fu_444_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln86_fu_448_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln82_fu_458_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln83_fu_473_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ix_fu_477_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_74_fu_487_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln83_2_fu_482_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ix_1_fu_495_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln85_fu_503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln86_fu_509_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln85_fu_513_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln86_2_fu_521_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln86_2_fu_529_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln86_fu_533_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln86_3_fu_538_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln86_1_fu_542_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln_fu_547_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal grp_fu_266_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln724_fu_575_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_fu_591_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln86_2_fu_605_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln86_4_cast_fu_609_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln86_4_fu_617_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal sub_ln86_1_fu_621_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln86_1_fu_579_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln86_3_fu_601_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln86_2_fu_641_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln86_2_fu_657_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln86_3_fu_663_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_77_fu_693_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln86_3_fu_647_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln86_3_fu_709_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln86_6_fu_715_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_78_fu_727_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln86_4_fu_747_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln86_8_fu_743_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln86_7_fu_753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln86_4_fu_759_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln86_18_fu_765_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln86_8_fu_773_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal lshr_ln86_2_fu_777_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal and_ln86_16_fu_783_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal add_ln86_6_fu_801_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_82_fu_823_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln86_4_fu_807_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln86_11_fu_837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tobool_i_i_fu_843_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln86_7_fu_811_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln86_8_fu_869_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln86_10_fu_875_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal lshr_ln86_fu_879_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal lshr_ln86_1_fu_885_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_83_fu_897_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_13_fu_863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_14_fu_891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln86_8_fu_905_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_12_fu_857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln86_7_fu_831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_12_fu_911_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_10_fu_851_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_15_fu_937_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln86_fu_931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_16_fu_949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_2_fu_919_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_3_fu_925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_4_fu_955_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_4_fu_943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_5_fu_963_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_fu_995_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln86_6_fu_1010_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln86_5_fu_1013_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln86_fu_1017_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln86_3_fu_990_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln86_5_fu_1022_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln86_3_fu_1002_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln86_2_fu_1026_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln86_1_fu_987_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln86_1cast_fu_1038_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln86_6_fu_1034_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_1_fu_1052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln86_fu_1064_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_8_fu_1047_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_fu_1070_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln86_9_fu_1076_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln86_5_fu_1080_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_80_fu_1086_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln86_1_fu_1106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_6_fu_1111_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_9_fu_1100_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln86_7_fu_1124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln86_fu_1042_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln86_10_fu_1116_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_79_fu_1056_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln86_6_fu_1094_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_8_fu_1136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_11_fu_1128_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln86_9_fu_1142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_5_fu_1162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_fu_1148_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln86_3_fu_1173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_11_fu_1178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_13_fu_1189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_6_fu_1156_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_14_fu_1193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln86_2_fu_1167_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_12_fu_1184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln86_4_fu_1207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_15_fu_1213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_15_fu_1199_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln86_2_fu_1227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln86_3_fu_1233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_16_fu_1219_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln86_5_fu_1238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln86_1_fu_1244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_19_fu_1250_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln86_7_fu_1258_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component srcnn_fpext_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    fpext_32ns_64_2_no_dsp_1_U147 : component srcnn_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_266_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_266_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln76_fu_365_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    px_reg_255_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (s_pix_i_full_n = ap_const_logic_1))) then 
                px_reg_255 <= px_1_reg_1332;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln76_fu_365_p2 = ap_const_lv1_0))) then 
                px_reg_255 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    py_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (h0_c5_full_n = ap_const_logic_0) or (w0_c_full_n = ap_const_logic_0) or (tw_eff_loc_i_c2_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                py_fu_184 <= ap_const_lv9_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln82_fu_462_p2 = ap_const_lv1_1))) then 
                py_fu_184 <= py_2_reg_1319;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (h0_c5_full_n = ap_const_logic_0) or (w0_c_full_n = ap_const_logic_0) or (tw_eff_loc_i_c2_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                add_ln76_1_reg_1306 <= add_ln76_1_fu_343_p2;
                add_ln76_reg_1286 <= add_ln76_fu_313_p2;
                add_ln77_reg_1291 <= add_ln77_fu_319_p2;
                sext_ln76_reg_1301 <= sext_ln76_fu_335_p1;
                sext_ln77_reg_1296 <= sext_ln77_fu_325_p1;
                sext_ln83_reg_1311 <= sext_ln83_fu_349_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                bit_select59_i_i_reg_1406 <= bit_select59_i_i_fu_719_p3;
                icmp_ln86_10_reg_1426 <= icmp_ln86_10_fu_817_p2;
                icmp_ln86_1_reg_1372 <= icmp_ln86_1_fu_651_p2;
                icmp_ln86_2_reg_1384 <= icmp_ln86_2_fu_677_p2;
                icmp_ln86_4_reg_1396 <= icmp_ln86_4_fu_687_p2;
                icmp_ln86_5_reg_1401 <= icmp_ln86_5_fu_703_p2;
                icmp_ln86_6_reg_1411 <= icmp_ln86_6_fu_737_p2;
                icmp_ln86_8_reg_1416 <= icmp_ln86_8_fu_789_p2;
                icmp_ln86_9_reg_1421 <= icmp_ln86_9_fu_795_p2;
                icmp_ln86_reg_1367 <= icmp_ln86_fu_635_p2;
                select_ln86_13_reg_1432 <= select_ln86_13_fu_971_p3;
                select_ln86_14_reg_1438 <= select_ln86_14_fu_979_p3;
                select_ln86_1_reg_1377 <= select_ln86_1_fu_669_p3;
                select_ln86_reg_1362 <= select_ln86_fu_627_p3;
                tmp_75_reg_1354 <= bitcast_ln724_fu_575_p1(63 downto 63);
                trunc_ln86_4_reg_1390 <= trunc_ln86_4_fu_683_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((m_axi_gmem_in_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                gmem_in_addr_read_reg_1343 <= m_axi_gmem_in_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln82_fu_462_p2 = ap_const_lv1_0))) then
                gmem_in_addr_reg_1337 <= sext_ln86_fu_557_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                px_1_reg_1332 <= px_1_fu_467_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                py_2_reg_1319 <= py_2_fu_370_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln76_fu_365_p2 = ap_const_lv1_0))) then
                    sext_ln82_reg_1324(19 downto 2) <= sext_ln82_fu_454_p1(19 downto 2);
            end if;
        end if;
    end process;
    sext_ln82_reg_1324(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, m_axi_gmem_in_ARREADY, m_axi_gmem_in_RVALID, s_pix_i_full_n, tw_eff_loc_i_c2_full_n, w0_c_full_n, h0_c5_full_n, ap_CS_fsm_state4, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state2, icmp_ln76_fu_365_p2, ap_CS_fsm_state3, icmp_ln82_fu_462_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (h0_c5_full_n = ap_const_logic_0) or (w0_c_full_n = ap_const_logic_0) or (tw_eff_loc_i_c2_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln76_fu_365_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln82_fu_462_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((m_axi_gmem_in_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((m_axi_gmem_in_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (s_pix_i_full_n = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln616_fu_269_p2 <= std_logic_vector(unsigned(h0) + unsigned(ap_const_lv9_10));
    add_ln76_1_fu_343_p2 <= std_logic_vector(unsigned(p_read_cast_fu_339_p1) + unsigned(ap_const_lv9_C));
    add_ln76_fu_313_p2 <= std_logic_vector(unsigned(th_eff_cast_fu_309_p1) + unsigned(ap_const_lv9_C));
    add_ln77_2_fu_385_p2 <= std_logic_vector(signed(add_ln77_reg_1291) + signed(zext_ln77_fu_376_p1));
    add_ln77_fu_319_p2 <= std_logic_vector(unsigned(h0_cast4_i_fu_305_p1) + unsigned(ap_const_lv10_3FA));
    add_ln83_2_fu_482_p2 <= std_logic_vector(signed(sext_ln83_reg_1311) + signed(zext_ln83_fu_473_p1));
    add_ln83_fu_329_p2 <= std_logic_vector(unsigned(w0_cast_fu_301_p1) + unsigned(ap_const_lv9_1FA));
    add_ln86_1_fu_542_p2 <= std_logic_vector(signed(sext_ln86_3_fu_538_p1) + signed(input_ftmap));
    add_ln86_2_fu_657_p2 <= std_logic_vector(unsigned(sub_ln86_2_fu_641_p2) + unsigned(ap_const_lv12_FF2));
    add_ln86_3_fu_709_p2 <= std_logic_vector(unsigned(trunc_ln86_3_fu_647_p1) + unsigned(ap_const_lv11_7F1));
    add_ln86_4_fu_747_p2 <= std_logic_vector(unsigned(sub_ln86_2_fu_641_p2) + unsigned(ap_const_lv12_FF0));
    add_ln86_5_fu_1080_p2 <= std_logic_vector(unsigned(select_ln86_2_fu_1026_p3) + unsigned(zext_ln86_9_fu_1076_p1));
    add_ln86_6_fu_801_p2 <= std_logic_vector(unsigned(sub_ln86_2_fu_641_p2) + unsigned(ap_const_lv12_2));
    add_ln86_7_fu_811_p2 <= std_logic_vector(unsigned(sub_ln86_2_fu_641_p2) + unsigned(ap_const_lv12_3));
    add_ln86_8_fu_869_p2 <= std_logic_vector(unsigned(trunc_ln86_8_fu_743_p1) + unsigned(ap_const_lv6_3));
    add_ln86_fu_533_p2 <= std_logic_vector(signed(sext_ln82_reg_1324) + signed(zext_ln86_2_fu_529_p1));
    and_ln86_10_fu_851_p2 <= (tobool_i_i_fu_843_p3 and icmp_ln86_11_fu_837_p2);
    and_ln86_11_fu_1178_p2 <= (xor_ln86_3_fu_1173_p2 and tmp_81_fu_1148_p3);
    and_ln86_12_fu_1184_p2 <= (tmp_75_reg_1354 and and_ln86_11_fu_1178_p2);
    and_ln86_13_fu_1189_p2 <= (tmp_75_reg_1354 and icmp_ln86_10_reg_1426);
    and_ln86_14_fu_1193_p2 <= (select_ln86_6_fu_1156_p3 and and_ln86_13_fu_1189_p2);
    and_ln86_15_fu_1213_p2 <= (xor_ln86_4_fu_1207_p2 and and_ln86_13_fu_1189_p2);
    and_ln86_16_fu_783_p2 <= (select_ln86_fu_627_p3 and lshr_ln86_2_fu_777_p2);
    and_ln86_1_fu_1052_p2 <= (icmp_ln86_8_reg_1416 and icmp_ln86_6_reg_1411);
    and_ln86_2_fu_919_p2 <= (xor_ln86_7_fu_831_p2 and icmp_ln86_12_fu_857_p2);
    and_ln86_3_fu_925_p2 <= (select_ln86_12_fu_911_p3 and and_ln86_10_fu_851_p2);
    and_ln86_4_fu_943_p2 <= (xor_ln86_fu_931_p2 and icmp_ln86_15_fu_937_p2);
    and_ln86_5_fu_1162_p2 <= (select_ln86_13_reg_1432 and and_ln86_9_fu_1142_p2);
    and_ln86_6_fu_1111_p2 <= (xor_ln86_1_fu_1106_p2 and icmp_ln86_1_reg_1372);
    and_ln86_7_fu_1124_p2 <= (icmp_ln86_9_reg_1421 and icmp_ln86_5_reg_1401);
    and_ln86_8_fu_1136_p2 <= (xor_ln86_6_fu_1094_p2 and tmp_79_fu_1056_p3);
    and_ln86_9_fu_1142_p2 <= (and_ln86_8_fu_1136_p2 and and_ln86_6_fu_1111_p2);
    and_ln86_fu_1070_p2 <= (select_ln86_8_fu_1047_p3 and or_ln86_fu_1064_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(m_axi_gmem_in_RVALID)
    begin
        if ((m_axi_gmem_in_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(s_pix_i_full_n)
    begin
        if ((s_pix_i_full_n = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg, tw_eff_loc_i_c2_full_n, w0_c_full_n, h0_c5_full_n)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (h0_c5_full_n = ap_const_logic_0) or (w0_c_full_n = ap_const_logic_0) or (tw_eff_loc_i_c2_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(m_axi_gmem_in_ARREADY)
    begin
        if ((m_axi_gmem_in_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, tw_eff_loc_i_c2_full_n, w0_c_full_n, h0_c5_full_n)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (h0_c5_full_n = ap_const_logic_0) or (w0_c_full_n = ap_const_logic_0) or (tw_eff_loc_i_c2_full_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln76_fu_365_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln76_fu_365_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln76_fu_365_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln76_fu_365_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ashr_ln86_fu_1017_p2 <= std_logic_vector(shift_right(signed(select_ln86_reg_1362),to_integer(unsigned('0' & zext_ln86_5_fu_1013_p1(31-1 downto 0)))));
    bit_select59_i_i_fu_719_p3 <= select_ln86_fu_627_p3(to_integer(unsigned(zext_ln86_6_fu_715_p1)) downto to_integer(unsigned(zext_ln86_6_fu_715_p1))) when (to_integer(unsigned(zext_ln86_6_fu_715_p1)) >= 0 and to_integer(unsigned(zext_ln86_6_fu_715_p1)) <=53) else "-";
    bitcast_ln724_fu_575_p1 <= grp_fu_266_p1;

    gmem_in_blk_n_AR_assign_proc : process(m_axi_gmem_in_ARREADY, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            gmem_in_blk_n_AR <= m_axi_gmem_in_ARREADY;
        else 
            gmem_in_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_in_blk_n_R_assign_proc : process(m_axi_gmem_in_RVALID, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            gmem_in_blk_n_R <= m_axi_gmem_in_RVALID;
        else 
            gmem_in_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_266_p0 <= gmem_in_addr_read_reg_1343;

    h0_c5_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, h0_c5_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            h0_c5_blk_n <= h0_c5_full_n;
        else 
            h0_c5_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    h0_c5_din <= h0;

    h0_c5_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, tw_eff_loc_i_c2_full_n, w0_c_full_n, h0_c5_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (h0_c5_full_n = ap_const_logic_0) or (w0_c_full_n = ap_const_logic_0) or (tw_eff_loc_i_c2_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            h0_c5_write <= ap_const_logic_1;
        else 
            h0_c5_write <= ap_const_logic_0;
        end if; 
    end process;

    h0_cast4_i_fu_305_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h0),10));
    icmp_ln76_fu_365_p2 <= "1" when (py_fu_184 = add_ln76_reg_1286) else "0";
    icmp_ln79_fu_410_p2 <= "1" when (unsigned(iy_1_fu_398_p3) > unsigned(ap_const_lv10_FE)) else "0";
    icmp_ln82_fu_462_p2 <= "1" when (px_reg_255 = add_ln76_1_reg_1306) else "0";
    icmp_ln85_fu_503_p2 <= "1" when (unsigned(ix_1_fu_495_p3) > unsigned(ap_const_lv10_FE)) else "0";
    icmp_ln86_10_fu_817_p2 <= "1" when (signed(add_ln86_6_fu_801_p2) < signed(ap_const_lv12_36)) else "0";
    icmp_ln86_11_fu_837_p2 <= "1" when (unsigned(add_ln86_6_fu_801_p2) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln86_12_fu_857_p2 <= "1" when (signed(add_ln86_7_fu_811_p2) < signed(ap_const_lv12_36)) else "0";
    icmp_ln86_13_fu_863_p2 <= "1" when (unsigned(add_ln86_7_fu_811_p2) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln86_14_fu_891_p2 <= "1" when (lshr_ln86_fu_879_p2 = lshr_ln86_1_fu_885_p2) else "0";
    icmp_ln86_15_fu_937_p2 <= "1" when (lshr_ln86_fu_879_p2 = ap_const_lv54_0) else "0";
    icmp_ln86_16_fu_949_p2 <= "1" when (add_ln86_7_fu_811_p2 = ap_const_lv12_36) else "0";
    icmp_ln86_1_fu_651_p2 <= "1" when (signed(sub_ln86_2_fu_641_p2) > signed(ap_const_lv12_E)) else "0";
    icmp_ln86_2_fu_677_p2 <= "1" when (sub_ln86_2_fu_641_p2 = ap_const_lv12_E) else "0";
    icmp_ln86_3_fu_990_p2 <= "1" when (unsigned(select_ln86_1_reg_1377) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln86_4_fu_687_p2 <= "1" when (signed(add_ln86_2_fu_657_p2) > signed(ap_const_lv12_36)) else "0";
    icmp_ln86_5_fu_703_p2 <= "1" when (tmp_77_fu_693_p4 = ap_const_lv8_0) else "0";
    icmp_ln86_6_fu_737_p2 <= "1" when (signed(tmp_78_fu_727_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln86_7_fu_753_p2 <= "1" when (signed(add_ln86_4_fu_747_p2) > signed(ap_const_lv12_35)) else "0";
    icmp_ln86_8_fu_789_p2 <= "0" when (and_ln86_16_fu_783_p2 = ap_const_lv54_0) else "1";
    icmp_ln86_9_fu_795_p2 <= "1" when (signed(sub_ln86_2_fu_641_p2) < signed(ap_const_lv12_E)) else "0";
    icmp_ln86_fu_635_p2 <= "1" when (trunc_ln86_1_fu_579_p1 = ap_const_lv63_0) else "0";
    ix_1_fu_495_p3 <= 
        ap_const_lv10_0 when (tmp_74_fu_487_p3(0) = '1') else 
        add_ln83_2_fu_482_p2;
    ix_fu_477_p2 <= std_logic_vector(signed(sext_ln76_reg_1301) + signed(zext_ln82_fu_458_p1));
    iy_1_fu_398_p3 <= 
        ap_const_lv10_0 when (tmp_73_fu_390_p3(0) = '1') else 
        add_ln77_2_fu_385_p2;
    iy_2_fu_416_p3 <= 
        ap_const_lv8_FE when (icmp_ln79_fu_410_p2(0) = '1') else 
        trunc_ln77_fu_406_p1;
    iy_fu_380_p2 <= std_logic_vector(signed(sext_ln77_reg_1296) + signed(zext_ln76_fu_361_p1));
    lshr_ln86_1_fu_885_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln86_10_fu_875_p1(31-1 downto 0)))));
    lshr_ln86_2_fu_777_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln86_8_fu_773_p1(31-1 downto 0)))));
    lshr_ln86_fu_879_p2 <= std_logic_vector(shift_right(unsigned(select_ln86_fu_627_p3),to_integer(unsigned('0' & zext_ln86_10_fu_875_p1(31-1 downto 0)))));
    m_axi_gmem_in_ARADDR <= gmem_in_addr_reg_1337;
    m_axi_gmem_in_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_in_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_in_ARID <= ap_const_lv1_0;
    m_axi_gmem_in_ARLEN <= ap_const_lv32_1;
    m_axi_gmem_in_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_in_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_in_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_in_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_in_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_in_ARUSER <= ap_const_lv1_0;

    m_axi_gmem_in_ARVALID_assign_proc : process(m_axi_gmem_in_ARREADY, ap_CS_fsm_state4)
    begin
        if (((m_axi_gmem_in_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem_in_ARVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_in_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_in_AWADDR <= ap_const_lv64_0;
    m_axi_gmem_in_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_in_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_in_AWID <= ap_const_lv1_0;
    m_axi_gmem_in_AWLEN <= ap_const_lv32_0;
    m_axi_gmem_in_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_in_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_in_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_in_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_in_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_in_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_in_AWVALID <= ap_const_logic_0;
    m_axi_gmem_in_BREADY <= ap_const_logic_0;

    m_axi_gmem_in_RREADY_assign_proc : process(m_axi_gmem_in_RVALID, ap_CS_fsm_state12)
    begin
        if (((m_axi_gmem_in_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_in_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_in_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_in_WDATA <= ap_const_lv32_0;
    m_axi_gmem_in_WID <= ap_const_lv1_0;
    m_axi_gmem_in_WLAST <= ap_const_logic_0;
    m_axi_gmem_in_WSTRB <= ap_const_lv4_0;
    m_axi_gmem_in_WUSER <= ap_const_lv1_0;
    m_axi_gmem_in_WVALID <= ap_const_logic_0;
    or_ln86_1_fu_1244_p2 <= (xor_ln86_5_fu_1238_p2 or select_ln86_16_fu_1219_p3);
    or_ln86_2_fu_1227_p2 <= (xor_ln86_3_fu_1173_p2 or select_ln86_6_fu_1156_p3);
    or_ln86_3_fu_1233_p2 <= (tmp_75_reg_1354 or or_ln86_2_fu_1227_p2);
    or_ln86_fu_1064_p2 <= (trunc_ln86_6_fu_1034_p1 or and_ln86_1_fu_1052_p2);
    p_read_cast_fu_339_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read),9));
    px_1_fu_467_p2 <= std_logic_vector(unsigned(px_reg_255) + unsigned(ap_const_lv9_1));
    py_2_fu_370_p2 <= std_logic_vector(unsigned(py_fu_184) + unsigned(ap_const_lv9_1));

    s_pix_i_blk_n_assign_proc : process(s_pix_i_full_n, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            s_pix_i_blk_n <= s_pix_i_full_n;
        else 
            s_pix_i_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    s_pix_i_din <= 
        ap_const_lv16_0 when (icmp_ln86_reg_1367(0) = '1') else 
        select_ln86_7_fu_1258_p3;

    s_pix_i_write_assign_proc : process(s_pix_i_full_n, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) and (s_pix_i_full_n = ap_const_logic_1))) then 
            s_pix_i_write <= ap_const_logic_1;
        else 
            s_pix_i_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln85_fu_513_p3 <= 
        ap_const_lv8_FE when (icmp_ln85_fu_503_p2(0) = '1') else 
        trunc_ln86_fu_509_p1;
    select_ln86_10_fu_1116_p3 <= 
        add_ln86_5_fu_1080_p2 when (and_ln86_6_fu_1111_p2(0) = '1') else 
        select_ln86_9_fu_1100_p3;
    select_ln86_11_fu_1128_p3 <= 
        shl_ln86_fu_1042_p2 when (and_ln86_7_fu_1124_p2(0) = '1') else 
        select_ln86_10_fu_1116_p3;
    select_ln86_12_fu_911_p3 <= 
        icmp_ln86_14_fu_891_p2 when (icmp_ln86_13_fu_863_p2(0) = '1') else 
        xor_ln86_8_fu_905_p2;
    select_ln86_13_fu_971_p3 <= 
        and_ln86_3_fu_925_p2 when (and_ln86_2_fu_919_p2(0) = '1') else 
        select_ln86_4_fu_955_p3;
    select_ln86_14_fu_979_p3 <= 
        and_ln86_4_fu_943_p2 when (and_ln86_2_fu_919_p2(0) = '1') else 
        select_ln86_5_fu_963_p3;
    select_ln86_15_fu_1199_p3 <= 
        xor_ln86_2_fu_1167_p2 when (and_ln86_14_fu_1193_p2(0) = '1') else 
        and_ln86_12_fu_1184_p2;
    select_ln86_16_fu_1219_p3 <= 
        xor_ln86_2_fu_1167_p2 when (and_ln86_15_fu_1213_p2(0) = '1') else 
        select_ln86_15_fu_1199_p3;
    select_ln86_18_fu_765_p3 <= 
        ap_const_lv6_0 when (icmp_ln86_7_fu_753_p2(0) = '1') else 
        sub_ln86_4_fu_759_p2;
    select_ln86_19_fu_1250_p3 <= 
        ap_const_lv16_FFFF when (xor_ln86_5_fu_1238_p2(0) = '1') else 
        ap_const_lv16_0;
    select_ln86_1_fu_669_p3 <= 
        add_ln86_2_fu_657_p2 when (icmp_ln86_1_fu_651_p2(0) = '1') else 
        sub_ln86_3_fu_663_p2;
    select_ln86_2_fu_1026_p3 <= 
        trunc_ln86_5_fu_1022_p1 when (icmp_ln86_3_fu_990_p2(0) = '1') else 
        select_ln86_3_fu_1002_p3;
    select_ln86_3_fu_1002_p3 <= 
        ap_const_lv16_FFFF when (tmp_76_fu_995_p3(0) = '1') else 
        ap_const_lv16_0;
    select_ln86_4_fu_955_p3 <= 
        and_ln86_10_fu_851_p2 when (icmp_ln86_16_fu_949_p2(0) = '1') else 
        xor_ln86_7_fu_831_p2;
    select_ln86_5_fu_963_p3 <= 
        xor_ln86_fu_931_p2 when (icmp_ln86_16_fu_949_p2(0) = '1') else 
        xor_ln86_7_fu_831_p2;
    select_ln86_6_fu_1156_p3 <= 
        select_ln86_13_reg_1432 when (and_ln86_9_fu_1142_p2(0) = '1') else 
        select_ln86_14_reg_1438;
    select_ln86_7_fu_1258_p3 <= 
        select_ln86_19_fu_1250_p3 when (or_ln86_1_fu_1244_p2(0) = '1') else 
        select_ln86_11_fu_1128_p3;
    select_ln86_8_fu_1047_p3 <= 
        tmp_75_reg_1354 when (icmp_ln86_4_reg_1396(0) = '1') else 
        bit_select59_i_i_reg_1406;
    select_ln86_9_fu_1100_p3 <= 
        trunc_ln86_4_reg_1390 when (icmp_ln86_2_reg_1384(0) = '1') else 
        ap_const_lv16_0;
    select_ln86_fu_627_p3 <= 
        sub_ln86_1_fu_621_p2 when (tmp_75_fu_583_p3(0) = '1') else 
        zext_ln86_4_fu_617_p1;
        sext_ln76_fu_335_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln83_fu_329_p2),11));

        sext_ln77_fu_325_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln77_fu_319_p2),11));

        sext_ln82_fu_454_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln86_fu_448_p2),20));

        sext_ln83_fu_349_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln83_fu_329_p2),10));

        sext_ln86_1_fu_987_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln86_1_reg_1377),31));

    sext_ln86_1cast_fu_1038_p1 <= sext_ln86_1_fu_987_p1(16 - 1 downto 0);
        sext_ln86_3_fu_538_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln86_fu_533_p2),64));

        sext_ln86_4_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln86_6_fu_801_p2),32));

        sext_ln86_6_fu_1010_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln86_1_reg_1377),32));

        sext_ln86_fu_557_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_547_p4),64));

    shl_ln86_1_fu_436_p3 <= (iy_2_fu_416_p3 & ap_const_lv2_0);
    shl_ln86_2_fu_521_p3 <= (select_ln85_fu_513_p3 & ap_const_lv2_0);
    shl_ln86_fu_1042_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln86_4_reg_1390),to_integer(unsigned('0' & sext_ln86_1cast_fu_1038_p1(16-1 downto 0)))));
    shl_ln_fu_424_p3 <= (iy_2_fu_416_p3 & ap_const_lv10_0);
    sub_ln86_1_fu_621_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln86_4_fu_617_p1));
    sub_ln86_2_fu_641_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln86_3_fu_601_p1));
    sub_ln86_3_fu_663_p2 <= std_logic_vector(unsigned(ap_const_lv12_E) - unsigned(sub_ln86_2_fu_641_p2));
    sub_ln86_4_fu_759_p2 <= std_logic_vector(unsigned(ap_const_lv6_5) - unsigned(trunc_ln86_8_fu_743_p1));
    sub_ln86_fu_448_p2 <= std_logic_vector(unsigned(zext_ln86_fu_432_p1) - unsigned(zext_ln86_1_fu_444_p1));
    th_eff_cast_fu_309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(th_eff_fu_293_p3),9));
    th_eff_fu_293_p3 <= 
        xor_ln616_fu_287_p2 when (tmp_fu_275_p3(0) = '1') else 
        ap_const_lv8_10;
    tmp_73_fu_390_p3 <= iy_fu_380_p2(10 downto 10);
    tmp_74_fu_487_p3 <= ix_fu_477_p2(10 downto 10);
    tmp_75_fu_583_p3 <= bitcast_ln724_fu_575_p1(63 downto 63);
    tmp_76_fu_995_p3 <= gmem_in_addr_read_reg_1343(31 downto 31);
    tmp_77_fu_693_p4 <= select_ln86_1_fu_669_p3(11 downto 4);
    tmp_78_fu_727_p4 <= sub_ln86_2_fu_641_p2(11 downto 4);
    tmp_79_fu_1056_p3 <= select_ln86_2_fu_1026_p3(15 downto 15);
    tmp_80_fu_1086_p3 <= add_ln86_5_fu_1080_p2(15 downto 15);
    tmp_81_fu_1148_p3 <= select_ln86_11_fu_1128_p3(15 downto 15);
    tmp_82_fu_823_p3 <= add_ln86_6_fu_801_p2(11 downto 11);
    tmp_83_fu_897_p3 <= add_ln86_7_fu_811_p2(11 downto 11);
    tmp_fu_275_p3 <= add_ln616_fu_269_p2(8 downto 8);
    tmp_i_fu_591_p4 <= bitcast_ln724_fu_575_p1(62 downto 52);
    tobool_i_i_fu_843_p3 <= select_ln86_fu_627_p3(to_integer(unsigned(sext_ln86_4_fu_807_p1)) downto to_integer(unsigned(sext_ln86_4_fu_807_p1))) when (to_integer(unsigned(sext_ln86_4_fu_807_p1)) >= 0 and to_integer(unsigned(sext_ln86_4_fu_807_p1)) <=53) else "-";
    trunc_ln615_fu_283_p1 <= h0(8 - 1 downto 0);
    trunc_ln77_fu_406_p1 <= iy_1_fu_398_p3(8 - 1 downto 0);
    trunc_ln86_1_fu_579_p1 <= bitcast_ln724_fu_575_p1(63 - 1 downto 0);
    trunc_ln86_2_fu_605_p1 <= bitcast_ln724_fu_575_p1(52 - 1 downto 0);
    trunc_ln86_3_fu_647_p1 <= sub_ln86_2_fu_641_p2(11 - 1 downto 0);
    trunc_ln86_4_fu_683_p1 <= select_ln86_fu_627_p3(16 - 1 downto 0);
    trunc_ln86_5_fu_1022_p1 <= ashr_ln86_fu_1017_p2(16 - 1 downto 0);
    trunc_ln86_6_fu_1034_p1 <= select_ln86_2_fu_1026_p3(1 - 1 downto 0);
    trunc_ln86_8_fu_743_p1 <= sub_ln86_2_fu_641_p2(6 - 1 downto 0);
    trunc_ln86_fu_509_p1 <= ix_1_fu_495_p3(8 - 1 downto 0);
    trunc_ln_fu_547_p4 <= add_ln86_1_fu_542_p2(63 downto 2);

    tw_eff_loc_i_c2_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, tw_eff_loc_i_c2_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            tw_eff_loc_i_c2_blk_n <= tw_eff_loc_i_c2_full_n;
        else 
            tw_eff_loc_i_c2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    tw_eff_loc_i_c2_din <= p_read;

    tw_eff_loc_i_c2_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, tw_eff_loc_i_c2_full_n, w0_c_full_n, h0_c5_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (h0_c5_full_n = ap_const_logic_0) or (w0_c_full_n = ap_const_logic_0) or (tw_eff_loc_i_c2_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            tw_eff_loc_i_c2_write <= ap_const_logic_1;
        else 
            tw_eff_loc_i_c2_write <= ap_const_logic_0;
        end if; 
    end process;


    w0_c_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, w0_c_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            w0_c_blk_n <= w0_c_full_n;
        else 
            w0_c_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    w0_c_din <= w0;

    w0_c_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, tw_eff_loc_i_c2_full_n, w0_c_full_n, h0_c5_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (h0_c5_full_n = ap_const_logic_0) or (w0_c_full_n = ap_const_logic_0) or (tw_eff_loc_i_c2_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            w0_c_write <= ap_const_logic_1;
        else 
            w0_c_write <= ap_const_logic_0;
        end if; 
    end process;

    w0_cast_fu_301_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w0),9));
    xor_ln616_fu_287_p2 <= (trunc_ln615_fu_283_p1 xor ap_const_lv8_FF);
    xor_ln86_1_fu_1106_p2 <= (icmp_ln86_2_reg_1384 xor ap_const_lv1_1);
    xor_ln86_2_fu_1167_p2 <= (ap_const_lv1_1 xor and_ln86_5_fu_1162_p2);
    xor_ln86_3_fu_1173_p2 <= (icmp_ln86_10_reg_1426 xor ap_const_lv1_1);
    xor_ln86_4_fu_1207_p2 <= (select_ln86_6_fu_1156_p3 xor ap_const_lv1_1);
    xor_ln86_5_fu_1238_p2 <= (or_ln86_3_fu_1233_p2 xor ap_const_lv1_1);
    xor_ln86_6_fu_1094_p2 <= (tmp_80_fu_1086_p3 xor ap_const_lv1_1);
    xor_ln86_7_fu_831_p2 <= (tmp_82_fu_823_p3 xor ap_const_lv1_1);
    xor_ln86_8_fu_905_p2 <= (tmp_83_fu_897_p3 xor ap_const_lv1_1);
    xor_ln86_fu_931_p2 <= (ap_const_lv1_1 xor and_ln86_10_fu_851_p2);
    zext_ln76_fu_361_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(py_fu_184),11));
    zext_ln77_fu_376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(py_fu_184),10));
    zext_ln82_fu_458_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(px_reg_255),11));
    zext_ln83_fu_473_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(px_reg_255),10));
    zext_ln86_10_fu_875_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln86_8_fu_869_p2),54));
    zext_ln86_1_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln86_1_fu_436_p3),19));
    zext_ln86_2_fu_529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln86_2_fu_521_p3),20));
    zext_ln86_3_fu_601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i_fu_591_p4),12));
    zext_ln86_4_cast_fu_609_p3 <= (ap_const_lv1_1 & trunc_ln86_2_fu_605_p1);
    zext_ln86_4_fu_617_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln86_4_cast_fu_609_p3),54));
    zext_ln86_5_fu_1013_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln86_6_fu_1010_p1),54));
    zext_ln86_6_fu_715_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln86_3_fu_709_p2),32));
    zext_ln86_8_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln86_18_fu_765_p3),54));
    zext_ln86_9_fu_1076_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln86_fu_1070_p2),16));
    zext_ln86_fu_432_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_424_p3),19));
end behav;
