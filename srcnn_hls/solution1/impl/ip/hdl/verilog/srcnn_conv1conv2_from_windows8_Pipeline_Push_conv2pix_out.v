// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_conv1conv2_from_windows8_Pipeline_Push_conv2pix_out (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        acc2_address0,
        acc2_ce0,
        acc2_q0,
        outpix_address0,
        outpix_ce0,
        outpix_we0,
        outpix_d0,
        outpix_address1,
        outpix_ce1,
        outpix_we1,
        outpix_d1,
        acc2_1_address0,
        acc2_1_ce0,
        acc2_1_q0,
        acc2_2_address0,
        acc2_2_ce0,
        acc2_2_q0,
        acc2_3_address0,
        acc2_3_ce0,
        acc2_3_q0,
        acc2_4_address0,
        acc2_4_ce0,
        acc2_4_q0,
        acc2_5_address0,
        acc2_5_ce0,
        acc2_5_q0,
        acc2_6_address0,
        acc2_6_ce0,
        acc2_6_q0,
        acc2_7_address0,
        acc2_7_ce0,
        acc2_7_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] acc2_address0;
output   acc2_ce0;
input  [23:0] acc2_q0;
output  [4:0] outpix_address0;
output   outpix_ce0;
output   outpix_we0;
output  [15:0] outpix_d0;
output  [4:0] outpix_address1;
output   outpix_ce1;
output   outpix_we1;
output  [15:0] outpix_d1;
output  [1:0] acc2_1_address0;
output   acc2_1_ce0;
input  [23:0] acc2_1_q0;
output  [1:0] acc2_2_address0;
output   acc2_2_ce0;
input  [23:0] acc2_2_q0;
output  [1:0] acc2_3_address0;
output   acc2_3_ce0;
input  [23:0] acc2_3_q0;
output  [1:0] acc2_4_address0;
output   acc2_4_ce0;
input  [23:0] acc2_4_q0;
output  [1:0] acc2_5_address0;
output   acc2_5_ce0;
input  [23:0] acc2_5_q0;
output  [1:0] acc2_6_address0;
output   acc2_6_ce0;
input  [23:0] acc2_6_q0;
output  [1:0] acc2_7_address0;
output   acc2_7_ce0;
input  [23:0] acc2_7_q0;

reg ap_idle;
reg acc2_ce0;
reg[4:0] outpix_address0;
reg outpix_ce0;
reg outpix_we0;
reg[15:0] outpix_d0;
reg[4:0] outpix_address1;
reg outpix_ce1;
reg outpix_we1;
reg[15:0] outpix_d1;
reg acc2_1_ce0;
reg acc2_2_ce0;
reg acc2_3_ce0;
reg acc2_4_ce0;
reg acc2_5_ce0;
reg acc2_6_ce0;
reg acc2_7_ce0;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] tmp_fu_275_p3;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_subdone;
reg   [5:0] n2_1_reg_1267;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] tmp_reg_1273;
wire   [4:0] trunc_ln249_fu_320_p1;
reg   [4:0] trunc_ln249_reg_1317;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
wire   [15:0] select_ln253_10_fu_652_p3;
reg   [15:0] select_ln253_10_reg_1327;
wire   [15:0] select_ln253_11_fu_760_p3;
reg   [15:0] select_ln253_11_reg_1332;
wire   [15:0] select_ln253_12_fu_868_p3;
reg   [15:0] select_ln253_12_reg_1337;
wire   [15:0] select_ln253_13_fu_976_p3;
reg   [15:0] select_ln253_13_reg_1342;
wire   [15:0] select_ln253_14_fu_1084_p3;
reg   [15:0] select_ln253_14_reg_1347;
wire   [15:0] select_ln253_15_fu_1192_p3;
reg   [15:0] select_ln253_15_reg_1352;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln249_1_fu_293_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln249_fu_316_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln252_fu_438_p1;
wire   [63:0] zext_ln252_1_fu_1205_p1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln252_2_fu_1215_p1;
wire   [63:0] zext_ln252_3_fu_1225_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln252_4_fu_1235_p1;
wire   [63:0] zext_ln252_5_fu_1245_p1;
wire   [63:0] zext_ln252_6_fu_1255_p1;
reg   [5:0] n2_fu_86;
wire   [5:0] add_ln249_fu_305_p2;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_n2_1;
wire   [15:0] select_ln253_8_fu_423_p3;
wire   [15:0] select_ln253_9_fu_543_p3;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire    ap_block_pp0_stage3_11001;
wire   [1:0] lshr_ln1_fu_283_p4;
wire   [5:0] trunc_ln253_fu_355_p1;
wire   [0:0] tmp_930_fu_339_p3;
wire   [0:0] icmp_ln253_1_fu_359_p2;
wire   [0:0] or_ln253_fu_365_p2;
wire   [0:0] tmp_931_fu_347_p3;
wire   [0:0] and_ln253_fu_371_p2;
wire   [15:0] trunc_ln_fu_329_p4;
wire   [15:0] zext_ln253_fu_377_p1;
wire   [15:0] add_ln253_fu_381_p2;
wire   [0:0] tmp_933_fu_395_p3;
wire   [0:0] tmp_932_fu_387_p3;
wire   [0:0] xor_ln253_fu_403_p2;
wire   [0:0] or_ln253_1_fu_409_p2;
wire   [0:0] icmp_ln253_fu_323_p2;
wire   [15:0] select_ln253_fu_415_p3;
wire   [4:0] or_ln249_fu_432_p2;
wire   [5:0] trunc_ln253_1_fu_475_p1;
wire   [0:0] tmp_934_fu_459_p3;
wire   [0:0] icmp_ln253_3_fu_479_p2;
wire   [0:0] or_ln253_2_fu_485_p2;
wire   [0:0] tmp_935_fu_467_p3;
wire   [0:0] and_ln253_1_fu_491_p2;
wire   [15:0] trunc_ln253_2_fu_449_p4;
wire   [15:0] zext_ln253_1_fu_497_p1;
wire   [15:0] add_ln253_1_fu_501_p2;
wire   [0:0] tmp_937_fu_515_p3;
wire   [0:0] tmp_936_fu_507_p3;
wire   [0:0] xor_ln253_1_fu_523_p2;
wire   [0:0] or_ln253_3_fu_529_p2;
wire   [0:0] icmp_ln253_2_fu_443_p2;
wire   [15:0] select_ln253_1_fu_535_p3;
wire   [5:0] trunc_ln253_3_fu_584_p1;
wire   [0:0] tmp_938_fu_568_p3;
wire   [0:0] icmp_ln253_5_fu_588_p2;
wire   [0:0] or_ln253_4_fu_594_p2;
wire   [0:0] tmp_939_fu_576_p3;
wire   [0:0] and_ln253_2_fu_600_p2;
wire   [15:0] trunc_ln253_4_fu_558_p4;
wire   [15:0] zext_ln253_2_fu_606_p1;
wire   [15:0] add_ln253_2_fu_610_p2;
wire   [0:0] tmp_941_fu_624_p3;
wire   [0:0] tmp_940_fu_616_p3;
wire   [0:0] xor_ln253_2_fu_632_p2;
wire   [0:0] or_ln253_5_fu_638_p2;
wire   [0:0] icmp_ln253_4_fu_552_p2;
wire   [15:0] select_ln253_2_fu_644_p3;
wire   [5:0] trunc_ln253_5_fu_692_p1;
wire   [0:0] tmp_942_fu_676_p3;
wire   [0:0] icmp_ln253_7_fu_696_p2;
wire   [0:0] or_ln253_6_fu_702_p2;
wire   [0:0] tmp_943_fu_684_p3;
wire   [0:0] and_ln253_3_fu_708_p2;
wire   [15:0] trunc_ln253_6_fu_666_p4;
wire   [15:0] zext_ln253_3_fu_714_p1;
wire   [15:0] add_ln253_3_fu_718_p2;
wire   [0:0] tmp_945_fu_732_p3;
wire   [0:0] tmp_944_fu_724_p3;
wire   [0:0] xor_ln253_3_fu_740_p2;
wire   [0:0] or_ln253_7_fu_746_p2;
wire   [0:0] icmp_ln253_6_fu_660_p2;
wire   [15:0] select_ln253_3_fu_752_p3;
wire   [5:0] trunc_ln253_7_fu_800_p1;
wire   [0:0] tmp_946_fu_784_p3;
wire   [0:0] icmp_ln253_9_fu_804_p2;
wire   [0:0] or_ln253_8_fu_810_p2;
wire   [0:0] tmp_947_fu_792_p3;
wire   [0:0] and_ln253_4_fu_816_p2;
wire   [15:0] trunc_ln253_8_fu_774_p4;
wire   [15:0] zext_ln253_4_fu_822_p1;
wire   [15:0] add_ln253_4_fu_826_p2;
wire   [0:0] tmp_949_fu_840_p3;
wire   [0:0] tmp_948_fu_832_p3;
wire   [0:0] xor_ln253_4_fu_848_p2;
wire   [0:0] or_ln253_9_fu_854_p2;
wire   [0:0] icmp_ln253_8_fu_768_p2;
wire   [15:0] select_ln253_4_fu_860_p3;
wire   [5:0] trunc_ln253_9_fu_908_p1;
wire   [0:0] tmp_950_fu_892_p3;
wire   [0:0] icmp_ln253_11_fu_912_p2;
wire   [0:0] or_ln253_10_fu_918_p2;
wire   [0:0] tmp_951_fu_900_p3;
wire   [0:0] and_ln253_5_fu_924_p2;
wire   [15:0] trunc_ln253_s_fu_882_p4;
wire   [15:0] zext_ln253_5_fu_930_p1;
wire   [15:0] add_ln253_5_fu_934_p2;
wire   [0:0] tmp_953_fu_948_p3;
wire   [0:0] tmp_952_fu_940_p3;
wire   [0:0] xor_ln253_5_fu_956_p2;
wire   [0:0] or_ln253_11_fu_962_p2;
wire   [0:0] icmp_ln253_10_fu_876_p2;
wire   [15:0] select_ln253_5_fu_968_p3;
wire   [5:0] trunc_ln253_11_fu_1016_p1;
wire   [0:0] tmp_954_fu_1000_p3;
wire   [0:0] icmp_ln253_13_fu_1020_p2;
wire   [0:0] or_ln253_12_fu_1026_p2;
wire   [0:0] tmp_955_fu_1008_p3;
wire   [0:0] and_ln253_6_fu_1032_p2;
wire   [15:0] trunc_ln253_10_fu_990_p4;
wire   [15:0] zext_ln253_6_fu_1038_p1;
wire   [15:0] add_ln253_6_fu_1042_p2;
wire   [0:0] tmp_957_fu_1056_p3;
wire   [0:0] tmp_956_fu_1048_p3;
wire   [0:0] xor_ln253_6_fu_1064_p2;
wire   [0:0] or_ln253_13_fu_1070_p2;
wire   [0:0] icmp_ln253_12_fu_984_p2;
wire   [15:0] select_ln253_6_fu_1076_p3;
wire   [5:0] trunc_ln253_13_fu_1124_p1;
wire   [0:0] tmp_958_fu_1108_p3;
wire   [0:0] icmp_ln253_15_fu_1128_p2;
wire   [0:0] or_ln253_14_fu_1134_p2;
wire   [0:0] tmp_959_fu_1116_p3;
wire   [0:0] and_ln253_7_fu_1140_p2;
wire   [15:0] trunc_ln253_12_fu_1098_p4;
wire   [15:0] zext_ln253_7_fu_1146_p1;
wire   [15:0] add_ln253_7_fu_1150_p2;
wire   [0:0] tmp_961_fu_1164_p3;
wire   [0:0] tmp_960_fu_1156_p3;
wire   [0:0] xor_ln253_7_fu_1172_p2;
wire   [0:0] or_ln253_15_fu_1178_p2;
wire   [0:0] icmp_ln253_14_fu_1092_p2;
wire   [15:0] select_ln253_7_fu_1184_p3;
wire   [4:0] or_ln249_1_fu_1200_p2;
wire   [4:0] or_ln249_2_fu_1210_p2;
wire   [4:0] or_ln249_3_fu_1220_p2;
wire   [4:0] or_ln249_4_fu_1230_p2;
wire   [4:0] or_ln249_5_fu_1240_p2;
wire   [4:0] or_ln249_6_fu_1250_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

srcnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((tmp_fu_275_p3 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            n2_fu_86 <= add_ln249_fu_305_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            n2_fu_86 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        n2_1_reg_1267 <= ap_sig_allocacmp_n2_1;
        tmp_reg_1273 <= ap_sig_allocacmp_n2_1[32'd5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1273 == 1'd0))) begin
        select_ln253_10_reg_1327 <= select_ln253_10_fu_652_p3;
        select_ln253_11_reg_1332 <= select_ln253_11_fu_760_p3;
        select_ln253_12_reg_1337 <= select_ln253_12_fu_868_p3;
        select_ln253_13_reg_1342 <= select_ln253_13_fu_976_p3;
        select_ln253_14_reg_1347 <= select_ln253_14_fu_1084_p3;
        select_ln253_15_reg_1352 <= select_ln253_15_fu_1192_p3;
        trunc_ln249_reg_1317 <= trunc_ln249_fu_320_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc2_1_ce0 = 1'b1;
    end else begin
        acc2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc2_2_ce0 = 1'b1;
    end else begin
        acc2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc2_3_ce0 = 1'b1;
    end else begin
        acc2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc2_4_ce0 = 1'b1;
    end else begin
        acc2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc2_5_ce0 = 1'b1;
    end else begin
        acc2_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc2_6_ce0 = 1'b1;
    end else begin
        acc2_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc2_7_ce0 = 1'b1;
    end else begin
        acc2_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc2_ce0 = 1'b1;
    end else begin
        acc2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_275_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_n2_1 = 6'd0;
    end else begin
        ap_sig_allocacmp_n2_1 = n2_fu_86;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outpix_address0 = zext_ln252_6_fu_1255_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        outpix_address0 = zext_ln252_4_fu_1235_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        outpix_address0 = zext_ln252_2_fu_1215_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        outpix_address0 = zext_ln252_fu_438_p1;
    end else begin
        outpix_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outpix_address1 = zext_ln252_5_fu_1245_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        outpix_address1 = zext_ln252_3_fu_1225_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        outpix_address1 = zext_ln252_1_fu_1205_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        outpix_address1 = zext_ln249_fu_316_p1;
    end else begin
        outpix_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        outpix_ce0 = 1'b1;
    end else begin
        outpix_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        outpix_ce1 = 1'b1;
    end else begin
        outpix_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outpix_d0 = select_ln253_15_reg_1352;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        outpix_d0 = select_ln253_13_reg_1342;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        outpix_d0 = select_ln253_11_reg_1332;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        outpix_d0 = select_ln253_9_fu_543_p3;
    end else begin
        outpix_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outpix_d1 = select_ln253_14_reg_1347;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        outpix_d1 = select_ln253_12_reg_1337;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        outpix_d1 = select_ln253_10_reg_1327;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        outpix_d1 = select_ln253_8_fu_423_p3;
    end else begin
        outpix_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (tmp_reg_1273 == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_reg_1273 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1273 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        outpix_we0 = 1'b1;
    end else begin
        outpix_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (tmp_reg_1273 == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_reg_1273 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1273 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        outpix_we1 = 1'b1;
    end else begin
        outpix_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc2_1_address0 = zext_ln249_1_fu_293_p1;

assign acc2_2_address0 = zext_ln249_1_fu_293_p1;

assign acc2_3_address0 = zext_ln249_1_fu_293_p1;

assign acc2_4_address0 = zext_ln249_1_fu_293_p1;

assign acc2_5_address0 = zext_ln249_1_fu_293_p1;

assign acc2_6_address0 = zext_ln249_1_fu_293_p1;

assign acc2_7_address0 = zext_ln249_1_fu_293_p1;

assign acc2_address0 = zext_ln249_1_fu_293_p1;

assign add_ln249_fu_305_p2 = (ap_sig_allocacmp_n2_1 + 6'd8);

assign add_ln253_1_fu_501_p2 = (trunc_ln253_2_fu_449_p4 + zext_ln253_1_fu_497_p1);

assign add_ln253_2_fu_610_p2 = (trunc_ln253_4_fu_558_p4 + zext_ln253_2_fu_606_p1);

assign add_ln253_3_fu_718_p2 = (trunc_ln253_6_fu_666_p4 + zext_ln253_3_fu_714_p1);

assign add_ln253_4_fu_826_p2 = (trunc_ln253_8_fu_774_p4 + zext_ln253_4_fu_822_p1);

assign add_ln253_5_fu_934_p2 = (trunc_ln253_s_fu_882_p4 + zext_ln253_5_fu_930_p1);

assign add_ln253_6_fu_1042_p2 = (trunc_ln253_10_fu_990_p4 + zext_ln253_6_fu_1038_p1);

assign add_ln253_7_fu_1150_p2 = (trunc_ln253_12_fu_1098_p4 + zext_ln253_7_fu_1146_p1);

assign add_ln253_fu_381_p2 = (trunc_ln_fu_329_p4 + zext_ln253_fu_377_p1);

assign and_ln253_1_fu_491_p2 = (tmp_935_fu_467_p3 & or_ln253_2_fu_485_p2);

assign and_ln253_2_fu_600_p2 = (tmp_939_fu_576_p3 & or_ln253_4_fu_594_p2);

assign and_ln253_3_fu_708_p2 = (tmp_943_fu_684_p3 & or_ln253_6_fu_702_p2);

assign and_ln253_4_fu_816_p2 = (tmp_947_fu_792_p3 & or_ln253_8_fu_810_p2);

assign and_ln253_5_fu_924_p2 = (tmp_951_fu_900_p3 & or_ln253_10_fu_918_p2);

assign and_ln253_6_fu_1032_p2 = (tmp_955_fu_1008_p3 & or_ln253_12_fu_1026_p2);

assign and_ln253_7_fu_1140_p2 = (tmp_959_fu_1116_p3 & or_ln253_14_fu_1134_p2);

assign and_ln253_fu_371_p2 = (tmp_931_fu_347_p3 & or_ln253_fu_365_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln253_10_fu_876_p2 = (($signed(acc2_5_q0) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign icmp_ln253_11_fu_912_p2 = ((trunc_ln253_9_fu_908_p1 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln253_12_fu_984_p2 = (($signed(acc2_6_q0) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign icmp_ln253_13_fu_1020_p2 = ((trunc_ln253_11_fu_1016_p1 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln253_14_fu_1092_p2 = (($signed(acc2_7_q0) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign icmp_ln253_15_fu_1128_p2 = ((trunc_ln253_13_fu_1124_p1 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln253_1_fu_359_p2 = ((trunc_ln253_fu_355_p1 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln253_2_fu_443_p2 = (($signed(acc2_1_q0) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign icmp_ln253_3_fu_479_p2 = ((trunc_ln253_1_fu_475_p1 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln253_4_fu_552_p2 = (($signed(acc2_2_q0) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign icmp_ln253_5_fu_588_p2 = ((trunc_ln253_3_fu_584_p1 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln253_6_fu_660_p2 = (($signed(acc2_3_q0) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign icmp_ln253_7_fu_696_p2 = ((trunc_ln253_5_fu_692_p1 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln253_8_fu_768_p2 = (($signed(acc2_4_q0) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign icmp_ln253_9_fu_804_p2 = ((trunc_ln253_7_fu_800_p1 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln253_fu_323_p2 = (($signed(acc2_q0) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign lshr_ln1_fu_283_p4 = {{ap_sig_allocacmp_n2_1[4:3]}};

assign or_ln249_1_fu_1200_p2 = (trunc_ln249_reg_1317 | 5'd2);

assign or_ln249_2_fu_1210_p2 = (trunc_ln249_reg_1317 | 5'd3);

assign or_ln249_3_fu_1220_p2 = (trunc_ln249_reg_1317 | 5'd4);

assign or_ln249_4_fu_1230_p2 = (trunc_ln249_reg_1317 | 5'd5);

assign or_ln249_5_fu_1240_p2 = (trunc_ln249_reg_1317 | 5'd6);

assign or_ln249_6_fu_1250_p2 = (trunc_ln249_reg_1317 | 5'd7);

assign or_ln249_fu_432_p2 = (trunc_ln249_fu_320_p1 | 5'd1);

assign or_ln253_10_fu_918_p2 = (tmp_950_fu_892_p3 | icmp_ln253_11_fu_912_p2);

assign or_ln253_11_fu_962_p2 = (xor_ln253_5_fu_956_p2 | tmp_952_fu_940_p3);

assign or_ln253_12_fu_1026_p2 = (tmp_954_fu_1000_p3 | icmp_ln253_13_fu_1020_p2);

assign or_ln253_13_fu_1070_p2 = (xor_ln253_6_fu_1064_p2 | tmp_956_fu_1048_p3);

assign or_ln253_14_fu_1134_p2 = (tmp_958_fu_1108_p3 | icmp_ln253_15_fu_1128_p2);

assign or_ln253_15_fu_1178_p2 = (xor_ln253_7_fu_1172_p2 | tmp_960_fu_1156_p3);

assign or_ln253_1_fu_409_p2 = (xor_ln253_fu_403_p2 | tmp_932_fu_387_p3);

assign or_ln253_2_fu_485_p2 = (tmp_934_fu_459_p3 | icmp_ln253_3_fu_479_p2);

assign or_ln253_3_fu_529_p2 = (xor_ln253_1_fu_523_p2 | tmp_936_fu_507_p3);

assign or_ln253_4_fu_594_p2 = (tmp_938_fu_568_p3 | icmp_ln253_5_fu_588_p2);

assign or_ln253_5_fu_638_p2 = (xor_ln253_2_fu_632_p2 | tmp_940_fu_616_p3);

assign or_ln253_6_fu_702_p2 = (tmp_942_fu_676_p3 | icmp_ln253_7_fu_696_p2);

assign or_ln253_7_fu_746_p2 = (xor_ln253_3_fu_740_p2 | tmp_944_fu_724_p3);

assign or_ln253_8_fu_810_p2 = (tmp_946_fu_784_p3 | icmp_ln253_9_fu_804_p2);

assign or_ln253_9_fu_854_p2 = (xor_ln253_4_fu_848_p2 | tmp_948_fu_832_p3);

assign or_ln253_fu_365_p2 = (tmp_930_fu_339_p3 | icmp_ln253_1_fu_359_p2);

assign select_ln253_10_fu_652_p3 = ((icmp_ln253_4_fu_552_p2[0:0] == 1'b1) ? select_ln253_2_fu_644_p3 : 16'd0);

assign select_ln253_11_fu_760_p3 = ((icmp_ln253_6_fu_660_p2[0:0] == 1'b1) ? select_ln253_3_fu_752_p3 : 16'd0);

assign select_ln253_12_fu_868_p3 = ((icmp_ln253_8_fu_768_p2[0:0] == 1'b1) ? select_ln253_4_fu_860_p3 : 16'd0);

assign select_ln253_13_fu_976_p3 = ((icmp_ln253_10_fu_876_p2[0:0] == 1'b1) ? select_ln253_5_fu_968_p3 : 16'd0);

assign select_ln253_14_fu_1084_p3 = ((icmp_ln253_12_fu_984_p2[0:0] == 1'b1) ? select_ln253_6_fu_1076_p3 : 16'd0);

assign select_ln253_15_fu_1192_p3 = ((icmp_ln253_14_fu_1092_p2[0:0] == 1'b1) ? select_ln253_7_fu_1184_p3 : 16'd0);

assign select_ln253_1_fu_535_p3 = ((or_ln253_3_fu_529_p2[0:0] == 1'b1) ? add_ln253_1_fu_501_p2 : 16'd65535);

assign select_ln253_2_fu_644_p3 = ((or_ln253_5_fu_638_p2[0:0] == 1'b1) ? add_ln253_2_fu_610_p2 : 16'd65535);

assign select_ln253_3_fu_752_p3 = ((or_ln253_7_fu_746_p2[0:0] == 1'b1) ? add_ln253_3_fu_718_p2 : 16'd65535);

assign select_ln253_4_fu_860_p3 = ((or_ln253_9_fu_854_p2[0:0] == 1'b1) ? add_ln253_4_fu_826_p2 : 16'd65535);

assign select_ln253_5_fu_968_p3 = ((or_ln253_11_fu_962_p2[0:0] == 1'b1) ? add_ln253_5_fu_934_p2 : 16'd65535);

assign select_ln253_6_fu_1076_p3 = ((or_ln253_13_fu_1070_p2[0:0] == 1'b1) ? add_ln253_6_fu_1042_p2 : 16'd65535);

assign select_ln253_7_fu_1184_p3 = ((or_ln253_15_fu_1178_p2[0:0] == 1'b1) ? add_ln253_7_fu_1150_p2 : 16'd65535);

assign select_ln253_8_fu_423_p3 = ((icmp_ln253_fu_323_p2[0:0] == 1'b1) ? select_ln253_fu_415_p3 : 16'd0);

assign select_ln253_9_fu_543_p3 = ((icmp_ln253_2_fu_443_p2[0:0] == 1'b1) ? select_ln253_1_fu_535_p3 : 16'd0);

assign select_ln253_fu_415_p3 = ((or_ln253_1_fu_409_p2[0:0] == 1'b1) ? add_ln253_fu_381_p2 : 16'd65535);

assign tmp_930_fu_339_p3 = acc2_q0[32'd7];

assign tmp_931_fu_347_p3 = acc2_q0[32'd6];

assign tmp_932_fu_387_p3 = add_ln253_fu_381_p2[32'd15];

assign tmp_933_fu_395_p3 = acc2_q0[32'd22];

assign tmp_934_fu_459_p3 = acc2_1_q0[32'd7];

assign tmp_935_fu_467_p3 = acc2_1_q0[32'd6];

assign tmp_936_fu_507_p3 = add_ln253_1_fu_501_p2[32'd15];

assign tmp_937_fu_515_p3 = acc2_1_q0[32'd22];

assign tmp_938_fu_568_p3 = acc2_2_q0[32'd7];

assign tmp_939_fu_576_p3 = acc2_2_q0[32'd6];

assign tmp_940_fu_616_p3 = add_ln253_2_fu_610_p2[32'd15];

assign tmp_941_fu_624_p3 = acc2_2_q0[32'd22];

assign tmp_942_fu_676_p3 = acc2_3_q0[32'd7];

assign tmp_943_fu_684_p3 = acc2_3_q0[32'd6];

assign tmp_944_fu_724_p3 = add_ln253_3_fu_718_p2[32'd15];

assign tmp_945_fu_732_p3 = acc2_3_q0[32'd22];

assign tmp_946_fu_784_p3 = acc2_4_q0[32'd7];

assign tmp_947_fu_792_p3 = acc2_4_q0[32'd6];

assign tmp_948_fu_832_p3 = add_ln253_4_fu_826_p2[32'd15];

assign tmp_949_fu_840_p3 = acc2_4_q0[32'd22];

assign tmp_950_fu_892_p3 = acc2_5_q0[32'd7];

assign tmp_951_fu_900_p3 = acc2_5_q0[32'd6];

assign tmp_952_fu_940_p3 = add_ln253_5_fu_934_p2[32'd15];

assign tmp_953_fu_948_p3 = acc2_5_q0[32'd22];

assign tmp_954_fu_1000_p3 = acc2_6_q0[32'd7];

assign tmp_955_fu_1008_p3 = acc2_6_q0[32'd6];

assign tmp_956_fu_1048_p3 = add_ln253_6_fu_1042_p2[32'd15];

assign tmp_957_fu_1056_p3 = acc2_6_q0[32'd22];

assign tmp_958_fu_1108_p3 = acc2_7_q0[32'd7];

assign tmp_959_fu_1116_p3 = acc2_7_q0[32'd6];

assign tmp_960_fu_1156_p3 = add_ln253_7_fu_1150_p2[32'd15];

assign tmp_961_fu_1164_p3 = acc2_7_q0[32'd22];

assign tmp_fu_275_p3 = ap_sig_allocacmp_n2_1[32'd5];

assign trunc_ln249_fu_320_p1 = n2_1_reg_1267[4:0];

assign trunc_ln253_10_fu_990_p4 = {{acc2_6_q0[22:7]}};

assign trunc_ln253_11_fu_1016_p1 = acc2_6_q0[5:0];

assign trunc_ln253_12_fu_1098_p4 = {{acc2_7_q0[22:7]}};

assign trunc_ln253_13_fu_1124_p1 = acc2_7_q0[5:0];

assign trunc_ln253_1_fu_475_p1 = acc2_1_q0[5:0];

assign trunc_ln253_2_fu_449_p4 = {{acc2_1_q0[22:7]}};

assign trunc_ln253_3_fu_584_p1 = acc2_2_q0[5:0];

assign trunc_ln253_4_fu_558_p4 = {{acc2_2_q0[22:7]}};

assign trunc_ln253_5_fu_692_p1 = acc2_3_q0[5:0];

assign trunc_ln253_6_fu_666_p4 = {{acc2_3_q0[22:7]}};

assign trunc_ln253_7_fu_800_p1 = acc2_4_q0[5:0];

assign trunc_ln253_8_fu_774_p4 = {{acc2_4_q0[22:7]}};

assign trunc_ln253_9_fu_908_p1 = acc2_5_q0[5:0];

assign trunc_ln253_fu_355_p1 = acc2_q0[5:0];

assign trunc_ln253_s_fu_882_p4 = {{acc2_5_q0[22:7]}};

assign trunc_ln_fu_329_p4 = {{acc2_q0[22:7]}};

assign xor_ln253_1_fu_523_p2 = (tmp_937_fu_515_p3 ^ 1'd1);

assign xor_ln253_2_fu_632_p2 = (tmp_941_fu_624_p3 ^ 1'd1);

assign xor_ln253_3_fu_740_p2 = (tmp_945_fu_732_p3 ^ 1'd1);

assign xor_ln253_4_fu_848_p2 = (tmp_949_fu_840_p3 ^ 1'd1);

assign xor_ln253_5_fu_956_p2 = (tmp_953_fu_948_p3 ^ 1'd1);

assign xor_ln253_6_fu_1064_p2 = (tmp_957_fu_1056_p3 ^ 1'd1);

assign xor_ln253_7_fu_1172_p2 = (tmp_961_fu_1164_p3 ^ 1'd1);

assign xor_ln253_fu_403_p2 = (tmp_933_fu_395_p3 ^ 1'd1);

assign zext_ln249_1_fu_293_p1 = lshr_ln1_fu_283_p4;

assign zext_ln249_fu_316_p1 = n2_1_reg_1267;

assign zext_ln252_1_fu_1205_p1 = or_ln249_1_fu_1200_p2;

assign zext_ln252_2_fu_1215_p1 = or_ln249_2_fu_1210_p2;

assign zext_ln252_3_fu_1225_p1 = or_ln249_3_fu_1220_p2;

assign zext_ln252_4_fu_1235_p1 = or_ln249_4_fu_1230_p2;

assign zext_ln252_5_fu_1245_p1 = or_ln249_5_fu_1240_p2;

assign zext_ln252_6_fu_1255_p1 = or_ln249_6_fu_1250_p2;

assign zext_ln252_fu_438_p1 = or_ln249_fu_432_p2;

assign zext_ln253_1_fu_497_p1 = and_ln253_1_fu_491_p2;

assign zext_ln253_2_fu_606_p1 = and_ln253_2_fu_600_p2;

assign zext_ln253_3_fu_714_p1 = and_ln253_3_fu_708_p2;

assign zext_ln253_4_fu_822_p1 = and_ln253_4_fu_816_p2;

assign zext_ln253_5_fu_930_p1 = and_ln253_5_fu_924_p2;

assign zext_ln253_6_fu_1038_p1 = and_ln253_6_fu_1032_p2;

assign zext_ln253_7_fu_1146_p1 = and_ln253_7_fu_1140_p2;

assign zext_ln253_fu_377_p1 = and_ln253_fu_371_p2;

endmodule //srcnn_conv1conv2_from_windows8_Pipeline_Push_conv2pix_out
