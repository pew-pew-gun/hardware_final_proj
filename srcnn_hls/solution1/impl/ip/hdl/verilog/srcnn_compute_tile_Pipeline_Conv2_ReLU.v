// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_compute_tile_Pipeline_Conv2_ReLU (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        f2_15_address0,
        f2_15_ce0,
        f2_15_we0,
        f2_15_d0,
        f2_14_address0,
        f2_14_ce0,
        f2_14_we0,
        f2_14_d0,
        f2_13_address0,
        f2_13_ce0,
        f2_13_we0,
        f2_13_d0,
        f2_12_address0,
        f2_12_ce0,
        f2_12_we0,
        f2_12_d0,
        f2_11_address0,
        f2_11_ce0,
        f2_11_we0,
        f2_11_d0,
        f2_10_address0,
        f2_10_ce0,
        f2_10_we0,
        f2_10_d0,
        f2_9_address0,
        f2_9_ce0,
        f2_9_we0,
        f2_9_d0,
        f2_8_address0,
        f2_8_ce0,
        f2_8_we0,
        f2_8_d0,
        f2_7_address0,
        f2_7_ce0,
        f2_7_we0,
        f2_7_d0,
        f2_6_address0,
        f2_6_ce0,
        f2_6_we0,
        f2_6_d0,
        f2_5_address0,
        f2_5_ce0,
        f2_5_we0,
        f2_5_d0,
        f2_4_address0,
        f2_4_ce0,
        f2_4_we0,
        f2_4_d0,
        f2_3_address0,
        f2_3_ce0,
        f2_3_we0,
        f2_3_d0,
        f2_2_address0,
        f2_2_ce0,
        f2_2_we0,
        f2_2_d0,
        f2_1_address0,
        f2_1_ce0,
        f2_1_we0,
        f2_1_d0,
        f2_address0,
        f2_ce0,
        f2_we0,
        f2_d0,
        acc2_address0,
        acc2_ce0,
        acc2_q0,
        acc2_1_address0,
        acc2_1_ce0,
        acc2_1_q0,
        acc2_2_address0,
        acc2_2_ce0,
        acc2_2_q0,
        acc2_3_address0,
        acc2_3_ce0,
        acc2_3_q0,
        acc2_4_address0,
        acc2_4_ce0,
        acc2_4_q0,
        acc2_5_address0,
        acc2_5_ce0,
        acc2_5_q0,
        acc2_6_address0,
        acc2_6_ce0,
        acc2_6_q0,
        acc2_7_address0,
        acc2_7_ce0,
        acc2_7_q0,
        acc2_8_address0,
        acc2_8_ce0,
        acc2_8_q0,
        acc2_9_address0,
        acc2_9_ce0,
        acc2_9_q0,
        acc2_10_address0,
        acc2_10_ce0,
        acc2_10_q0,
        acc2_11_address0,
        acc2_11_ce0,
        acc2_11_q0,
        acc2_12_address0,
        acc2_12_ce0,
        acc2_12_q0,
        acc2_13_address0,
        acc2_13_ce0,
        acc2_13_q0,
        acc2_14_address0,
        acc2_14_ce0,
        acc2_14_q0,
        acc2_15_address0,
        acc2_15_ce0,
        acc2_15_q0,
        grp_fu_7743_p_din0,
        grp_fu_7743_p_din1,
        grp_fu_7743_p_opcode,
        grp_fu_7743_p_dout0,
        grp_fu_7743_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [0:0] f2_15_address0;
output   f2_15_ce0;
output   f2_15_we0;
output  [31:0] f2_15_d0;
output  [0:0] f2_14_address0;
output   f2_14_ce0;
output   f2_14_we0;
output  [31:0] f2_14_d0;
output  [0:0] f2_13_address0;
output   f2_13_ce0;
output   f2_13_we0;
output  [31:0] f2_13_d0;
output  [0:0] f2_12_address0;
output   f2_12_ce0;
output   f2_12_we0;
output  [31:0] f2_12_d0;
output  [0:0] f2_11_address0;
output   f2_11_ce0;
output   f2_11_we0;
output  [31:0] f2_11_d0;
output  [0:0] f2_10_address0;
output   f2_10_ce0;
output   f2_10_we0;
output  [31:0] f2_10_d0;
output  [0:0] f2_9_address0;
output   f2_9_ce0;
output   f2_9_we0;
output  [31:0] f2_9_d0;
output  [0:0] f2_8_address0;
output   f2_8_ce0;
output   f2_8_we0;
output  [31:0] f2_8_d0;
output  [0:0] f2_7_address0;
output   f2_7_ce0;
output   f2_7_we0;
output  [31:0] f2_7_d0;
output  [0:0] f2_6_address0;
output   f2_6_ce0;
output   f2_6_we0;
output  [31:0] f2_6_d0;
output  [0:0] f2_5_address0;
output   f2_5_ce0;
output   f2_5_we0;
output  [31:0] f2_5_d0;
output  [0:0] f2_4_address0;
output   f2_4_ce0;
output   f2_4_we0;
output  [31:0] f2_4_d0;
output  [0:0] f2_3_address0;
output   f2_3_ce0;
output   f2_3_we0;
output  [31:0] f2_3_d0;
output  [0:0] f2_2_address0;
output   f2_2_ce0;
output   f2_2_we0;
output  [31:0] f2_2_d0;
output  [0:0] f2_1_address0;
output   f2_1_ce0;
output   f2_1_we0;
output  [31:0] f2_1_d0;
output  [0:0] f2_address0;
output   f2_ce0;
output   f2_we0;
output  [31:0] f2_d0;
output  [0:0] acc2_address0;
output   acc2_ce0;
input  [31:0] acc2_q0;
output  [0:0] acc2_1_address0;
output   acc2_1_ce0;
input  [31:0] acc2_1_q0;
output  [0:0] acc2_2_address0;
output   acc2_2_ce0;
input  [31:0] acc2_2_q0;
output  [0:0] acc2_3_address0;
output   acc2_3_ce0;
input  [31:0] acc2_3_q0;
output  [0:0] acc2_4_address0;
output   acc2_4_ce0;
input  [31:0] acc2_4_q0;
output  [0:0] acc2_5_address0;
output   acc2_5_ce0;
input  [31:0] acc2_5_q0;
output  [0:0] acc2_6_address0;
output   acc2_6_ce0;
input  [31:0] acc2_6_q0;
output  [0:0] acc2_7_address0;
output   acc2_7_ce0;
input  [31:0] acc2_7_q0;
output  [0:0] acc2_8_address0;
output   acc2_8_ce0;
input  [31:0] acc2_8_q0;
output  [0:0] acc2_9_address0;
output   acc2_9_ce0;
input  [31:0] acc2_9_q0;
output  [0:0] acc2_10_address0;
output   acc2_10_ce0;
input  [31:0] acc2_10_q0;
output  [0:0] acc2_11_address0;
output   acc2_11_ce0;
input  [31:0] acc2_11_q0;
output  [0:0] acc2_12_address0;
output   acc2_12_ce0;
input  [31:0] acc2_12_q0;
output  [0:0] acc2_13_address0;
output   acc2_13_ce0;
input  [31:0] acc2_13_q0;
output  [0:0] acc2_14_address0;
output   acc2_14_ce0;
input  [31:0] acc2_14_q0;
output  [0:0] acc2_15_address0;
output   acc2_15_ce0;
input  [31:0] acc2_15_q0;
output  [31:0] grp_fu_7743_p_din0;
output  [31:0] grp_fu_7743_p_din1;
output  [4:0] grp_fu_7743_p_opcode;
input  [0:0] grp_fu_7743_p_dout0;
output   grp_fu_7743_p_ce;

reg ap_idle;
reg f2_15_ce0;
reg f2_15_we0;
reg f2_14_ce0;
reg f2_14_we0;
reg f2_13_ce0;
reg f2_13_we0;
reg f2_12_ce0;
reg f2_12_we0;
reg f2_11_ce0;
reg f2_11_we0;
reg f2_10_ce0;
reg f2_10_we0;
reg f2_9_ce0;
reg f2_9_we0;
reg f2_8_ce0;
reg f2_8_we0;
reg f2_7_ce0;
reg f2_7_we0;
reg f2_6_ce0;
reg f2_6_we0;
reg f2_5_ce0;
reg f2_5_we0;
reg f2_4_ce0;
reg f2_4_we0;
reg f2_3_ce0;
reg f2_3_we0;
reg f2_2_ce0;
reg f2_2_we0;
reg f2_1_ce0;
reg f2_1_we0;
reg f2_ce0;
reg f2_we0;
reg acc2_ce0;
reg acc2_1_ce0;
reg acc2_2_ce0;
reg acc2_3_ce0;
reg acc2_4_ce0;
reg acc2_5_ce0;
reg acc2_6_ce0;
reg acc2_7_ce0;
reg acc2_8_ce0;
reg acc2_9_ce0;
reg acc2_10_ce0;
reg acc2_11_ce0;
reg acc2_12_ce0;
reg acc2_13_ce0;
reg acc2_14_ce0;
reg acc2_15_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] tmp_fu_630_p3;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln200_fu_646_p1;
reg   [63:0] zext_ln200_reg_1472;
reg   [63:0] zext_ln200_reg_1472_pp0_iter1_reg;
reg   [31:0] t_reg_1572;
reg   [31:0] acc2_1_load_reg_1579;
reg   [31:0] acc2_2_load_reg_1586;
reg   [31:0] acc2_3_load_reg_1593;
reg   [31:0] acc2_4_load_reg_1600;
reg   [31:0] acc2_5_load_reg_1607;
reg   [31:0] acc2_6_load_reg_1614;
reg   [31:0] acc2_7_load_reg_1621;
reg   [31:0] acc2_8_load_reg_1628;
reg   [31:0] acc2_9_load_reg_1635;
reg   [31:0] acc2_10_load_reg_1642;
reg   [31:0] acc2_11_load_reg_1649;
reg   [31:0] acc2_12_load_reg_1656;
reg   [31:0] acc2_13_load_reg_1663;
reg   [31:0] acc2_14_load_reg_1670;
reg   [31:0] t_1_reg_1677;
wire    ap_block_pp0_stage0;
reg   [5:0] n2_1_fu_106;
wire   [5:0] add_ln200_fu_666_p2;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_n2;
wire   [0:0] tmp_32_fu_638_p3;
wire   [31:0] bitcast_ln204_fu_677_p1;
wire   [7:0] tmp_1_fu_680_p4;
wire   [22:0] trunc_ln204_fu_690_p1;
wire   [0:0] icmp_ln204_1_fu_700_p2;
wire   [0:0] icmp_ln204_fu_694_p2;
wire   [0:0] or_ln204_fu_706_p2;
wire   [0:0] and_ln204_fu_712_p2;
wire   [31:0] bitcast_ln204_1_fu_726_p1;
wire   [7:0] tmp_3_fu_729_p4;
wire   [22:0] trunc_ln204_1_fu_739_p1;
wire   [0:0] icmp_ln204_3_fu_749_p2;
wire   [0:0] icmp_ln204_2_fu_743_p2;
wire   [0:0] or_ln204_1_fu_755_p2;
wire   [0:0] grp_fu_532_p2;
wire   [0:0] and_ln204_1_fu_761_p2;
wire   [31:0] bitcast_ln204_2_fu_775_p1;
wire   [7:0] tmp_5_fu_778_p4;
wire   [22:0] trunc_ln204_2_fu_788_p1;
wire   [0:0] icmp_ln204_5_fu_798_p2;
wire   [0:0] icmp_ln204_4_fu_792_p2;
wire   [0:0] or_ln204_2_fu_804_p2;
wire   [0:0] grp_fu_538_p2;
wire   [0:0] and_ln204_2_fu_810_p2;
wire   [31:0] bitcast_ln204_3_fu_824_p1;
wire   [7:0] tmp_7_fu_827_p4;
wire   [22:0] trunc_ln204_3_fu_837_p1;
wire   [0:0] icmp_ln204_7_fu_847_p2;
wire   [0:0] icmp_ln204_6_fu_841_p2;
wire   [0:0] or_ln204_3_fu_853_p2;
wire   [0:0] grp_fu_544_p2;
wire   [0:0] and_ln204_3_fu_859_p2;
wire   [31:0] bitcast_ln204_4_fu_873_p1;
wire   [7:0] tmp_9_fu_876_p4;
wire   [22:0] trunc_ln204_4_fu_886_p1;
wire   [0:0] icmp_ln204_9_fu_896_p2;
wire   [0:0] icmp_ln204_8_fu_890_p2;
wire   [0:0] or_ln204_4_fu_902_p2;
wire   [0:0] grp_fu_550_p2;
wire   [0:0] and_ln204_4_fu_908_p2;
wire   [31:0] bitcast_ln204_5_fu_922_p1;
wire   [7:0] tmp_10_fu_925_p4;
wire   [22:0] trunc_ln204_5_fu_935_p1;
wire   [0:0] icmp_ln204_11_fu_945_p2;
wire   [0:0] icmp_ln204_10_fu_939_p2;
wire   [0:0] or_ln204_5_fu_951_p2;
wire   [0:0] grp_fu_556_p2;
wire   [0:0] and_ln204_5_fu_957_p2;
wire   [31:0] bitcast_ln204_6_fu_971_p1;
wire   [7:0] tmp_12_fu_974_p4;
wire   [22:0] trunc_ln204_6_fu_984_p1;
wire   [0:0] icmp_ln204_13_fu_994_p2;
wire   [0:0] icmp_ln204_12_fu_988_p2;
wire   [0:0] or_ln204_6_fu_1000_p2;
wire   [0:0] grp_fu_562_p2;
wire   [0:0] and_ln204_6_fu_1006_p2;
wire   [31:0] bitcast_ln204_7_fu_1020_p1;
wire   [7:0] tmp_14_fu_1023_p4;
wire   [22:0] trunc_ln204_7_fu_1033_p1;
wire   [0:0] icmp_ln204_15_fu_1043_p2;
wire   [0:0] icmp_ln204_14_fu_1037_p2;
wire   [0:0] or_ln204_7_fu_1049_p2;
wire   [0:0] grp_fu_568_p2;
wire   [0:0] and_ln204_7_fu_1055_p2;
wire   [31:0] bitcast_ln204_8_fu_1069_p1;
wire   [7:0] tmp_16_fu_1072_p4;
wire   [22:0] trunc_ln204_8_fu_1082_p1;
wire   [0:0] icmp_ln204_17_fu_1092_p2;
wire   [0:0] icmp_ln204_16_fu_1086_p2;
wire   [0:0] or_ln204_8_fu_1098_p2;
wire   [0:0] grp_fu_574_p2;
wire   [0:0] and_ln204_8_fu_1104_p2;
wire   [31:0] bitcast_ln204_9_fu_1118_p1;
wire   [7:0] tmp_18_fu_1121_p4;
wire   [22:0] trunc_ln204_9_fu_1131_p1;
wire   [0:0] icmp_ln204_19_fu_1141_p2;
wire   [0:0] icmp_ln204_18_fu_1135_p2;
wire   [0:0] or_ln204_9_fu_1147_p2;
wire   [0:0] grp_fu_580_p2;
wire   [0:0] and_ln204_9_fu_1153_p2;
wire   [31:0] bitcast_ln204_10_fu_1167_p1;
wire   [7:0] tmp_20_fu_1170_p4;
wire   [22:0] trunc_ln204_10_fu_1180_p1;
wire   [0:0] icmp_ln204_21_fu_1190_p2;
wire   [0:0] icmp_ln204_20_fu_1184_p2;
wire   [0:0] or_ln204_10_fu_1196_p2;
wire   [0:0] grp_fu_586_p2;
wire   [0:0] and_ln204_10_fu_1202_p2;
wire   [31:0] bitcast_ln204_11_fu_1216_p1;
wire   [7:0] tmp_22_fu_1219_p4;
wire   [22:0] trunc_ln204_11_fu_1229_p1;
wire   [0:0] icmp_ln204_23_fu_1239_p2;
wire   [0:0] icmp_ln204_22_fu_1233_p2;
wire   [0:0] or_ln204_11_fu_1245_p2;
wire   [0:0] grp_fu_592_p2;
wire   [0:0] and_ln204_11_fu_1251_p2;
wire   [31:0] bitcast_ln204_12_fu_1265_p1;
wire   [7:0] tmp_24_fu_1268_p4;
wire   [22:0] trunc_ln204_12_fu_1278_p1;
wire   [0:0] icmp_ln204_25_fu_1288_p2;
wire   [0:0] icmp_ln204_24_fu_1282_p2;
wire   [0:0] or_ln204_12_fu_1294_p2;
wire   [0:0] grp_fu_598_p2;
wire   [0:0] and_ln204_12_fu_1300_p2;
wire   [31:0] bitcast_ln204_13_fu_1314_p1;
wire   [7:0] tmp_26_fu_1317_p4;
wire   [22:0] trunc_ln204_13_fu_1327_p1;
wire   [0:0] icmp_ln204_27_fu_1337_p2;
wire   [0:0] icmp_ln204_26_fu_1331_p2;
wire   [0:0] or_ln204_13_fu_1343_p2;
wire   [0:0] grp_fu_604_p2;
wire   [0:0] and_ln204_13_fu_1349_p2;
wire   [31:0] bitcast_ln204_14_fu_1363_p1;
wire   [7:0] tmp_28_fu_1366_p4;
wire   [22:0] trunc_ln204_14_fu_1376_p1;
wire   [0:0] icmp_ln204_29_fu_1386_p2;
wire   [0:0] icmp_ln204_28_fu_1380_p2;
wire   [0:0] or_ln204_14_fu_1392_p2;
wire   [0:0] grp_fu_610_p2;
wire   [0:0] and_ln204_14_fu_1398_p2;
wire   [31:0] bitcast_ln204_15_fu_1412_p1;
wire   [7:0] tmp_30_fu_1415_p4;
wire   [22:0] trunc_ln204_15_fu_1425_p1;
wire   [0:0] icmp_ln204_31_fu_1435_p2;
wire   [0:0] icmp_ln204_30_fu_1429_p2;
wire   [0:0] or_ln204_15_fu_1441_p2;
wire   [0:0] grp_fu_616_p2;
wire   [0:0] and_ln204_15_fu_1447_p2;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U616(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc2_1_q0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_532_p2)
);

srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U617(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc2_2_q0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_538_p2)
);

srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U618(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc2_3_q0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_544_p2)
);

srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U619(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc2_4_q0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_550_p2)
);

srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U620(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc2_5_q0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_556_p2)
);

srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U621(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc2_6_q0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_562_p2)
);

srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U622(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc2_7_q0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_568_p2)
);

srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U623(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc2_8_q0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_574_p2)
);

srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U624(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc2_9_q0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_580_p2)
);

srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U625(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc2_10_q0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_586_p2)
);

srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U626(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc2_11_q0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_592_p2)
);

srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U627(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc2_12_q0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_598_p2)
);

srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U628(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc2_13_q0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_604_p2)
);

srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U629(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc2_14_q0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_610_p2)
);

srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U630(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc2_15_q0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_616_p2)
);

srcnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((tmp_fu_630_p3 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            n2_1_fu_106 <= add_ln200_fu_666_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            n2_1_fu_106 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc2_10_load_reg_1642 <= acc2_10_q0;
        acc2_11_load_reg_1649 <= acc2_11_q0;
        acc2_12_load_reg_1656 <= acc2_12_q0;
        acc2_13_load_reg_1663 <= acc2_13_q0;
        acc2_14_load_reg_1670 <= acc2_14_q0;
        acc2_1_load_reg_1579 <= acc2_1_q0;
        acc2_2_load_reg_1586 <= acc2_2_q0;
        acc2_3_load_reg_1593 <= acc2_3_q0;
        acc2_4_load_reg_1600 <= acc2_4_q0;
        acc2_5_load_reg_1607 <= acc2_5_q0;
        acc2_6_load_reg_1614 <= acc2_6_q0;
        acc2_7_load_reg_1621 <= acc2_7_q0;
        acc2_8_load_reg_1628 <= acc2_8_q0;
        acc2_9_load_reg_1635 <= acc2_9_q0;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        t_1_reg_1677 <= acc2_15_q0;
        t_reg_1572 <= acc2_q0;
        zext_ln200_reg_1472_pp0_iter1_reg[0] <= zext_ln200_reg_1472[0];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_630_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln200_reg_1472[0] <= zext_ln200_fu_646_p1[0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc2_10_ce0 = 1'b1;
    end else begin
        acc2_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc2_11_ce0 = 1'b1;
    end else begin
        acc2_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc2_12_ce0 = 1'b1;
    end else begin
        acc2_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc2_13_ce0 = 1'b1;
    end else begin
        acc2_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc2_14_ce0 = 1'b1;
    end else begin
        acc2_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc2_15_ce0 = 1'b1;
    end else begin
        acc2_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc2_1_ce0 = 1'b1;
    end else begin
        acc2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc2_2_ce0 = 1'b1;
    end else begin
        acc2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc2_3_ce0 = 1'b1;
    end else begin
        acc2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc2_4_ce0 = 1'b1;
    end else begin
        acc2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc2_5_ce0 = 1'b1;
    end else begin
        acc2_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc2_6_ce0 = 1'b1;
    end else begin
        acc2_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc2_7_ce0 = 1'b1;
    end else begin
        acc2_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc2_8_ce0 = 1'b1;
    end else begin
        acc2_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc2_9_ce0 = 1'b1;
    end else begin
        acc2_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc2_ce0 = 1'b1;
    end else begin
        acc2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_630_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_n2 = 6'd0;
    end else begin
        ap_sig_allocacmp_n2 = n2_1_fu_106;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_10_ce0 = 1'b1;
    end else begin
        f2_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_10_we0 = 1'b1;
    end else begin
        f2_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_11_ce0 = 1'b1;
    end else begin
        f2_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_11_we0 = 1'b1;
    end else begin
        f2_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_12_ce0 = 1'b1;
    end else begin
        f2_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_12_we0 = 1'b1;
    end else begin
        f2_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_13_ce0 = 1'b1;
    end else begin
        f2_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_13_we0 = 1'b1;
    end else begin
        f2_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_14_ce0 = 1'b1;
    end else begin
        f2_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_14_we0 = 1'b1;
    end else begin
        f2_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_15_ce0 = 1'b1;
    end else begin
        f2_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_15_we0 = 1'b1;
    end else begin
        f2_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_1_ce0 = 1'b1;
    end else begin
        f2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_1_we0 = 1'b1;
    end else begin
        f2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_2_ce0 = 1'b1;
    end else begin
        f2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_2_we0 = 1'b1;
    end else begin
        f2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_3_ce0 = 1'b1;
    end else begin
        f2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_3_we0 = 1'b1;
    end else begin
        f2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_4_ce0 = 1'b1;
    end else begin
        f2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_4_we0 = 1'b1;
    end else begin
        f2_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_5_ce0 = 1'b1;
    end else begin
        f2_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_5_we0 = 1'b1;
    end else begin
        f2_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_6_ce0 = 1'b1;
    end else begin
        f2_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_6_we0 = 1'b1;
    end else begin
        f2_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_7_ce0 = 1'b1;
    end else begin
        f2_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_7_we0 = 1'b1;
    end else begin
        f2_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_8_ce0 = 1'b1;
    end else begin
        f2_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_8_we0 = 1'b1;
    end else begin
        f2_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_9_ce0 = 1'b1;
    end else begin
        f2_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_9_we0 = 1'b1;
    end else begin
        f2_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_ce0 = 1'b1;
    end else begin
        f2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        f2_we0 = 1'b1;
    end else begin
        f2_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc2_10_address0 = zext_ln200_fu_646_p1;

assign acc2_11_address0 = zext_ln200_fu_646_p1;

assign acc2_12_address0 = zext_ln200_fu_646_p1;

assign acc2_13_address0 = zext_ln200_fu_646_p1;

assign acc2_14_address0 = zext_ln200_fu_646_p1;

assign acc2_15_address0 = zext_ln200_fu_646_p1;

assign acc2_1_address0 = zext_ln200_fu_646_p1;

assign acc2_2_address0 = zext_ln200_fu_646_p1;

assign acc2_3_address0 = zext_ln200_fu_646_p1;

assign acc2_4_address0 = zext_ln200_fu_646_p1;

assign acc2_5_address0 = zext_ln200_fu_646_p1;

assign acc2_6_address0 = zext_ln200_fu_646_p1;

assign acc2_7_address0 = zext_ln200_fu_646_p1;

assign acc2_8_address0 = zext_ln200_fu_646_p1;

assign acc2_9_address0 = zext_ln200_fu_646_p1;

assign acc2_address0 = zext_ln200_fu_646_p1;

assign add_ln200_fu_666_p2 = (ap_sig_allocacmp_n2 + 6'd16);

assign and_ln204_10_fu_1202_p2 = (or_ln204_10_fu_1196_p2 & grp_fu_586_p2);

assign and_ln204_11_fu_1251_p2 = (or_ln204_11_fu_1245_p2 & grp_fu_592_p2);

assign and_ln204_12_fu_1300_p2 = (or_ln204_12_fu_1294_p2 & grp_fu_598_p2);

assign and_ln204_13_fu_1349_p2 = (or_ln204_13_fu_1343_p2 & grp_fu_604_p2);

assign and_ln204_14_fu_1398_p2 = (or_ln204_14_fu_1392_p2 & grp_fu_610_p2);

assign and_ln204_15_fu_1447_p2 = (or_ln204_15_fu_1441_p2 & grp_fu_616_p2);

assign and_ln204_1_fu_761_p2 = (or_ln204_1_fu_755_p2 & grp_fu_532_p2);

assign and_ln204_2_fu_810_p2 = (or_ln204_2_fu_804_p2 & grp_fu_538_p2);

assign and_ln204_3_fu_859_p2 = (or_ln204_3_fu_853_p2 & grp_fu_544_p2);

assign and_ln204_4_fu_908_p2 = (or_ln204_4_fu_902_p2 & grp_fu_550_p2);

assign and_ln204_5_fu_957_p2 = (or_ln204_5_fu_951_p2 & grp_fu_556_p2);

assign and_ln204_6_fu_1006_p2 = (or_ln204_6_fu_1000_p2 & grp_fu_562_p2);

assign and_ln204_7_fu_1055_p2 = (or_ln204_7_fu_1049_p2 & grp_fu_568_p2);

assign and_ln204_8_fu_1104_p2 = (or_ln204_8_fu_1098_p2 & grp_fu_574_p2);

assign and_ln204_9_fu_1153_p2 = (or_ln204_9_fu_1147_p2 & grp_fu_580_p2);

assign and_ln204_fu_712_p2 = (or_ln204_fu_706_p2 & grp_fu_7743_p_dout0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln204_10_fu_1167_p1 = acc2_10_load_reg_1642;

assign bitcast_ln204_11_fu_1216_p1 = acc2_11_load_reg_1649;

assign bitcast_ln204_12_fu_1265_p1 = acc2_12_load_reg_1656;

assign bitcast_ln204_13_fu_1314_p1 = acc2_13_load_reg_1663;

assign bitcast_ln204_14_fu_1363_p1 = acc2_14_load_reg_1670;

assign bitcast_ln204_15_fu_1412_p1 = t_1_reg_1677;

assign bitcast_ln204_1_fu_726_p1 = acc2_1_load_reg_1579;

assign bitcast_ln204_2_fu_775_p1 = acc2_2_load_reg_1586;

assign bitcast_ln204_3_fu_824_p1 = acc2_3_load_reg_1593;

assign bitcast_ln204_4_fu_873_p1 = acc2_4_load_reg_1600;

assign bitcast_ln204_5_fu_922_p1 = acc2_5_load_reg_1607;

assign bitcast_ln204_6_fu_971_p1 = acc2_6_load_reg_1614;

assign bitcast_ln204_7_fu_1020_p1 = acc2_7_load_reg_1621;

assign bitcast_ln204_8_fu_1069_p1 = acc2_8_load_reg_1628;

assign bitcast_ln204_9_fu_1118_p1 = acc2_9_load_reg_1635;

assign bitcast_ln204_fu_677_p1 = t_reg_1572;

assign f2_10_address0 = zext_ln200_reg_1472_pp0_iter1_reg;

assign f2_10_d0 = ((and_ln204_10_fu_1202_p2[0:0] == 1'b1) ? acc2_10_load_reg_1642 : 32'd0);

assign f2_11_address0 = zext_ln200_reg_1472_pp0_iter1_reg;

assign f2_11_d0 = ((and_ln204_11_fu_1251_p2[0:0] == 1'b1) ? acc2_11_load_reg_1649 : 32'd0);

assign f2_12_address0 = zext_ln200_reg_1472_pp0_iter1_reg;

assign f2_12_d0 = ((and_ln204_12_fu_1300_p2[0:0] == 1'b1) ? acc2_12_load_reg_1656 : 32'd0);

assign f2_13_address0 = zext_ln200_reg_1472_pp0_iter1_reg;

assign f2_13_d0 = ((and_ln204_13_fu_1349_p2[0:0] == 1'b1) ? acc2_13_load_reg_1663 : 32'd0);

assign f2_14_address0 = zext_ln200_reg_1472_pp0_iter1_reg;

assign f2_14_d0 = ((and_ln204_14_fu_1398_p2[0:0] == 1'b1) ? acc2_14_load_reg_1670 : 32'd0);

assign f2_15_address0 = zext_ln200_reg_1472_pp0_iter1_reg;

assign f2_15_d0 = ((and_ln204_15_fu_1447_p2[0:0] == 1'b1) ? t_1_reg_1677 : 32'd0);

assign f2_1_address0 = zext_ln200_reg_1472_pp0_iter1_reg;

assign f2_1_d0 = ((and_ln204_1_fu_761_p2[0:0] == 1'b1) ? acc2_1_load_reg_1579 : 32'd0);

assign f2_2_address0 = zext_ln200_reg_1472_pp0_iter1_reg;

assign f2_2_d0 = ((and_ln204_2_fu_810_p2[0:0] == 1'b1) ? acc2_2_load_reg_1586 : 32'd0);

assign f2_3_address0 = zext_ln200_reg_1472_pp0_iter1_reg;

assign f2_3_d0 = ((and_ln204_3_fu_859_p2[0:0] == 1'b1) ? acc2_3_load_reg_1593 : 32'd0);

assign f2_4_address0 = zext_ln200_reg_1472_pp0_iter1_reg;

assign f2_4_d0 = ((and_ln204_4_fu_908_p2[0:0] == 1'b1) ? acc2_4_load_reg_1600 : 32'd0);

assign f2_5_address0 = zext_ln200_reg_1472_pp0_iter1_reg;

assign f2_5_d0 = ((and_ln204_5_fu_957_p2[0:0] == 1'b1) ? acc2_5_load_reg_1607 : 32'd0);

assign f2_6_address0 = zext_ln200_reg_1472_pp0_iter1_reg;

assign f2_6_d0 = ((and_ln204_6_fu_1006_p2[0:0] == 1'b1) ? acc2_6_load_reg_1614 : 32'd0);

assign f2_7_address0 = zext_ln200_reg_1472_pp0_iter1_reg;

assign f2_7_d0 = ((and_ln204_7_fu_1055_p2[0:0] == 1'b1) ? acc2_7_load_reg_1621 : 32'd0);

assign f2_8_address0 = zext_ln200_reg_1472_pp0_iter1_reg;

assign f2_8_d0 = ((and_ln204_8_fu_1104_p2[0:0] == 1'b1) ? acc2_8_load_reg_1628 : 32'd0);

assign f2_9_address0 = zext_ln200_reg_1472_pp0_iter1_reg;

assign f2_9_d0 = ((and_ln204_9_fu_1153_p2[0:0] == 1'b1) ? acc2_9_load_reg_1635 : 32'd0);

assign f2_address0 = zext_ln200_reg_1472_pp0_iter1_reg;

assign f2_d0 = ((and_ln204_fu_712_p2[0:0] == 1'b1) ? t_reg_1572 : 32'd0);

assign grp_fu_7743_p_ce = 1'b1;

assign grp_fu_7743_p_din0 = acc2_q0;

assign grp_fu_7743_p_din1 = 32'd0;

assign grp_fu_7743_p_opcode = 5'd2;

assign icmp_ln204_10_fu_939_p2 = ((tmp_10_fu_925_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln204_11_fu_945_p2 = ((trunc_ln204_5_fu_935_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln204_12_fu_988_p2 = ((tmp_12_fu_974_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln204_13_fu_994_p2 = ((trunc_ln204_6_fu_984_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln204_14_fu_1037_p2 = ((tmp_14_fu_1023_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln204_15_fu_1043_p2 = ((trunc_ln204_7_fu_1033_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln204_16_fu_1086_p2 = ((tmp_16_fu_1072_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln204_17_fu_1092_p2 = ((trunc_ln204_8_fu_1082_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln204_18_fu_1135_p2 = ((tmp_18_fu_1121_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln204_19_fu_1141_p2 = ((trunc_ln204_9_fu_1131_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln204_1_fu_700_p2 = ((trunc_ln204_fu_690_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln204_20_fu_1184_p2 = ((tmp_20_fu_1170_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln204_21_fu_1190_p2 = ((trunc_ln204_10_fu_1180_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln204_22_fu_1233_p2 = ((tmp_22_fu_1219_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln204_23_fu_1239_p2 = ((trunc_ln204_11_fu_1229_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln204_24_fu_1282_p2 = ((tmp_24_fu_1268_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln204_25_fu_1288_p2 = ((trunc_ln204_12_fu_1278_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln204_26_fu_1331_p2 = ((tmp_26_fu_1317_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln204_27_fu_1337_p2 = ((trunc_ln204_13_fu_1327_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln204_28_fu_1380_p2 = ((tmp_28_fu_1366_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln204_29_fu_1386_p2 = ((trunc_ln204_14_fu_1376_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln204_2_fu_743_p2 = ((tmp_3_fu_729_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln204_30_fu_1429_p2 = ((tmp_30_fu_1415_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln204_31_fu_1435_p2 = ((trunc_ln204_15_fu_1425_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln204_3_fu_749_p2 = ((trunc_ln204_1_fu_739_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln204_4_fu_792_p2 = ((tmp_5_fu_778_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln204_5_fu_798_p2 = ((trunc_ln204_2_fu_788_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln204_6_fu_841_p2 = ((tmp_7_fu_827_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln204_7_fu_847_p2 = ((trunc_ln204_3_fu_837_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln204_8_fu_890_p2 = ((tmp_9_fu_876_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln204_9_fu_896_p2 = ((trunc_ln204_4_fu_886_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln204_fu_694_p2 = ((tmp_1_fu_680_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln204_10_fu_1196_p2 = (icmp_ln204_21_fu_1190_p2 | icmp_ln204_20_fu_1184_p2);

assign or_ln204_11_fu_1245_p2 = (icmp_ln204_23_fu_1239_p2 | icmp_ln204_22_fu_1233_p2);

assign or_ln204_12_fu_1294_p2 = (icmp_ln204_25_fu_1288_p2 | icmp_ln204_24_fu_1282_p2);

assign or_ln204_13_fu_1343_p2 = (icmp_ln204_27_fu_1337_p2 | icmp_ln204_26_fu_1331_p2);

assign or_ln204_14_fu_1392_p2 = (icmp_ln204_29_fu_1386_p2 | icmp_ln204_28_fu_1380_p2);

assign or_ln204_15_fu_1441_p2 = (icmp_ln204_31_fu_1435_p2 | icmp_ln204_30_fu_1429_p2);

assign or_ln204_1_fu_755_p2 = (icmp_ln204_3_fu_749_p2 | icmp_ln204_2_fu_743_p2);

assign or_ln204_2_fu_804_p2 = (icmp_ln204_5_fu_798_p2 | icmp_ln204_4_fu_792_p2);

assign or_ln204_3_fu_853_p2 = (icmp_ln204_7_fu_847_p2 | icmp_ln204_6_fu_841_p2);

assign or_ln204_4_fu_902_p2 = (icmp_ln204_9_fu_896_p2 | icmp_ln204_8_fu_890_p2);

assign or_ln204_5_fu_951_p2 = (icmp_ln204_11_fu_945_p2 | icmp_ln204_10_fu_939_p2);

assign or_ln204_6_fu_1000_p2 = (icmp_ln204_13_fu_994_p2 | icmp_ln204_12_fu_988_p2);

assign or_ln204_7_fu_1049_p2 = (icmp_ln204_15_fu_1043_p2 | icmp_ln204_14_fu_1037_p2);

assign or_ln204_8_fu_1098_p2 = (icmp_ln204_17_fu_1092_p2 | icmp_ln204_16_fu_1086_p2);

assign or_ln204_9_fu_1147_p2 = (icmp_ln204_19_fu_1141_p2 | icmp_ln204_18_fu_1135_p2);

assign or_ln204_fu_706_p2 = (icmp_ln204_fu_694_p2 | icmp_ln204_1_fu_700_p2);

assign tmp_10_fu_925_p4 = {{bitcast_ln204_5_fu_922_p1[30:23]}};

assign tmp_12_fu_974_p4 = {{bitcast_ln204_6_fu_971_p1[30:23]}};

assign tmp_14_fu_1023_p4 = {{bitcast_ln204_7_fu_1020_p1[30:23]}};

assign tmp_16_fu_1072_p4 = {{bitcast_ln204_8_fu_1069_p1[30:23]}};

assign tmp_18_fu_1121_p4 = {{bitcast_ln204_9_fu_1118_p1[30:23]}};

assign tmp_1_fu_680_p4 = {{bitcast_ln204_fu_677_p1[30:23]}};

assign tmp_20_fu_1170_p4 = {{bitcast_ln204_10_fu_1167_p1[30:23]}};

assign tmp_22_fu_1219_p4 = {{bitcast_ln204_11_fu_1216_p1[30:23]}};

assign tmp_24_fu_1268_p4 = {{bitcast_ln204_12_fu_1265_p1[30:23]}};

assign tmp_26_fu_1317_p4 = {{bitcast_ln204_13_fu_1314_p1[30:23]}};

assign tmp_28_fu_1366_p4 = {{bitcast_ln204_14_fu_1363_p1[30:23]}};

assign tmp_30_fu_1415_p4 = {{bitcast_ln204_15_fu_1412_p1[30:23]}};

assign tmp_32_fu_638_p3 = ap_sig_allocacmp_n2[32'd4];

assign tmp_3_fu_729_p4 = {{bitcast_ln204_1_fu_726_p1[30:23]}};

assign tmp_5_fu_778_p4 = {{bitcast_ln204_2_fu_775_p1[30:23]}};

assign tmp_7_fu_827_p4 = {{bitcast_ln204_3_fu_824_p1[30:23]}};

assign tmp_9_fu_876_p4 = {{bitcast_ln204_4_fu_873_p1[30:23]}};

assign tmp_fu_630_p3 = ap_sig_allocacmp_n2[32'd5];

assign trunc_ln204_10_fu_1180_p1 = bitcast_ln204_10_fu_1167_p1[22:0];

assign trunc_ln204_11_fu_1229_p1 = bitcast_ln204_11_fu_1216_p1[22:0];

assign trunc_ln204_12_fu_1278_p1 = bitcast_ln204_12_fu_1265_p1[22:0];

assign trunc_ln204_13_fu_1327_p1 = bitcast_ln204_13_fu_1314_p1[22:0];

assign trunc_ln204_14_fu_1376_p1 = bitcast_ln204_14_fu_1363_p1[22:0];

assign trunc_ln204_15_fu_1425_p1 = bitcast_ln204_15_fu_1412_p1[22:0];

assign trunc_ln204_1_fu_739_p1 = bitcast_ln204_1_fu_726_p1[22:0];

assign trunc_ln204_2_fu_788_p1 = bitcast_ln204_2_fu_775_p1[22:0];

assign trunc_ln204_3_fu_837_p1 = bitcast_ln204_3_fu_824_p1[22:0];

assign trunc_ln204_4_fu_886_p1 = bitcast_ln204_4_fu_873_p1[22:0];

assign trunc_ln204_5_fu_935_p1 = bitcast_ln204_5_fu_922_p1[22:0];

assign trunc_ln204_6_fu_984_p1 = bitcast_ln204_6_fu_971_p1[22:0];

assign trunc_ln204_7_fu_1033_p1 = bitcast_ln204_7_fu_1020_p1[22:0];

assign trunc_ln204_8_fu_1082_p1 = bitcast_ln204_8_fu_1069_p1[22:0];

assign trunc_ln204_9_fu_1131_p1 = bitcast_ln204_9_fu_1118_p1[22:0];

assign trunc_ln204_fu_690_p1 = bitcast_ln204_fu_677_p1[22:0];

assign zext_ln200_fu_646_p1 = tmp_32_fu_638_p3;

always @ (posedge ap_clk) begin
    zext_ln200_reg_1472[63:1] <= 63'b000000000000000000000000000000000000000000000000000000000000000;
    zext_ln200_reg_1472_pp0_iter1_reg[63:1] <= 63'b000000000000000000000000000000000000000000000000000000000000000;
end

endmodule //srcnn_compute_tile_Pipeline_Conv2_ReLU
