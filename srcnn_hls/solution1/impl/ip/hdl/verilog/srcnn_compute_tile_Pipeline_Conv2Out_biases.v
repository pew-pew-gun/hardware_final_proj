// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_compute_tile_Pipeline_Conv2Out_biases (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        acc2_15_address0,
        acc2_15_ce0,
        acc2_15_we0,
        acc2_15_d0,
        acc2_14_address0,
        acc2_14_ce0,
        acc2_14_we0,
        acc2_14_d0,
        acc2_13_address0,
        acc2_13_ce0,
        acc2_13_we0,
        acc2_13_d0,
        acc2_12_address0,
        acc2_12_ce0,
        acc2_12_we0,
        acc2_12_d0,
        acc2_11_address0,
        acc2_11_ce0,
        acc2_11_we0,
        acc2_11_d0,
        acc2_10_address0,
        acc2_10_ce0,
        acc2_10_we0,
        acc2_10_d0,
        acc2_9_address0,
        acc2_9_ce0,
        acc2_9_we0,
        acc2_9_d0,
        acc2_8_address0,
        acc2_8_ce0,
        acc2_8_we0,
        acc2_8_d0,
        acc2_7_address0,
        acc2_7_ce0,
        acc2_7_we0,
        acc2_7_d0,
        acc2_6_address0,
        acc2_6_ce0,
        acc2_6_we0,
        acc2_6_d0,
        acc2_5_address0,
        acc2_5_ce0,
        acc2_5_we0,
        acc2_5_d0,
        acc2_4_address0,
        acc2_4_ce0,
        acc2_4_we0,
        acc2_4_d0,
        acc2_3_address0,
        acc2_3_ce0,
        acc2_3_we0,
        acc2_3_d0,
        acc2_2_address0,
        acc2_2_ce0,
        acc2_2_we0,
        acc2_2_d0,
        acc2_1_address0,
        acc2_1_ce0,
        acc2_1_we0,
        acc2_1_d0,
        acc2_address0,
        acc2_ce0,
        acc2_we0,
        acc2_d0,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_16_s,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_116,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_17_s,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_117,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_18_s,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_118,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_19_s,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_119,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_20_s,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_120,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_b2_loc_92,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_121,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_22_s,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_122,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_23_s,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_123,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_24_s,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_124,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_25_s,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_125,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_26_s,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_10_s,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_27_s,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_b2_loc_93,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_28_s,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_12_s,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_29_s,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_13_s,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_30_s,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_14_s,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_b2_loc,
        p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_15_s
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [0:0] acc2_15_address0;
output   acc2_15_ce0;
output   acc2_15_we0;
output  [31:0] acc2_15_d0;
output  [0:0] acc2_14_address0;
output   acc2_14_ce0;
output   acc2_14_we0;
output  [31:0] acc2_14_d0;
output  [0:0] acc2_13_address0;
output   acc2_13_ce0;
output   acc2_13_we0;
output  [31:0] acc2_13_d0;
output  [0:0] acc2_12_address0;
output   acc2_12_ce0;
output   acc2_12_we0;
output  [31:0] acc2_12_d0;
output  [0:0] acc2_11_address0;
output   acc2_11_ce0;
output   acc2_11_we0;
output  [31:0] acc2_11_d0;
output  [0:0] acc2_10_address0;
output   acc2_10_ce0;
output   acc2_10_we0;
output  [31:0] acc2_10_d0;
output  [0:0] acc2_9_address0;
output   acc2_9_ce0;
output   acc2_9_we0;
output  [31:0] acc2_9_d0;
output  [0:0] acc2_8_address0;
output   acc2_8_ce0;
output   acc2_8_we0;
output  [31:0] acc2_8_d0;
output  [0:0] acc2_7_address0;
output   acc2_7_ce0;
output   acc2_7_we0;
output  [31:0] acc2_7_d0;
output  [0:0] acc2_6_address0;
output   acc2_6_ce0;
output   acc2_6_we0;
output  [31:0] acc2_6_d0;
output  [0:0] acc2_5_address0;
output   acc2_5_ce0;
output   acc2_5_we0;
output  [31:0] acc2_5_d0;
output  [0:0] acc2_4_address0;
output   acc2_4_ce0;
output   acc2_4_we0;
output  [31:0] acc2_4_d0;
output  [0:0] acc2_3_address0;
output   acc2_3_ce0;
output   acc2_3_we0;
output  [31:0] acc2_3_d0;
output  [0:0] acc2_2_address0;
output   acc2_2_ce0;
output   acc2_2_we0;
output  [31:0] acc2_2_d0;
output  [0:0] acc2_1_address0;
output   acc2_1_ce0;
output   acc2_1_we0;
output  [31:0] acc2_1_d0;
output  [0:0] acc2_address0;
output   acc2_ce0;
output   acc2_we0;
output  [31:0] acc2_d0;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_16_s;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_116;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_17_s;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_117;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_18_s;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_118;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_19_s;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_119;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_20_s;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_120;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_b2_loc_92;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_121;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_22_s;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_122;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_23_s;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_123;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_24_s;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_124;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_25_s;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_125;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_26_s;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_10_s;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_27_s;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_b2_loc_93;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_28_s;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_12_s;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_29_s;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_13_s;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_30_s;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_14_s;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_b2_loc;
input  [31:0] p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_15_s;

reg ap_idle;
reg acc2_15_ce0;
reg acc2_15_we0;
reg acc2_14_ce0;
reg acc2_14_we0;
reg acc2_13_ce0;
reg acc2_13_we0;
reg acc2_12_ce0;
reg acc2_12_we0;
reg acc2_11_ce0;
reg acc2_11_we0;
reg acc2_10_ce0;
reg acc2_10_we0;
reg acc2_9_ce0;
reg acc2_9_we0;
reg acc2_8_ce0;
reg acc2_8_we0;
reg acc2_7_ce0;
reg acc2_7_we0;
reg acc2_6_ce0;
reg acc2_6_we0;
reg acc2_5_ce0;
reg acc2_5_we0;
reg acc2_4_ce0;
reg acc2_4_we0;
reg acc2_3_ce0;
reg acc2_3_we0;
reg acc2_2_ce0;
reg acc2_2_we0;
reg acc2_1_ce0;
reg acc2_1_we0;
reg acc2_ce0;
reg acc2_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] tmp_fu_542_p3;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [63:0] zext_ln129_fu_562_p1;
reg   [5:0] n2_fu_130;
wire   [5:0] add_ln129_fu_732_p2;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_n2_5;
wire   [0:0] tmp_33_fu_554_p3;
wire   [4:0] trunc_ln129_fu_550_p1;
wire   [0:0] icmp_ln132_fu_582_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_done_reg = 1'b0;
end

srcnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((tmp_fu_542_p3 == 1'd0)) begin
            n2_fu_130 <= add_ln129_fu_732_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            n2_fu_130 <= 6'd0;
        end
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_10_ce0 = 1'b1;
    end else begin
        acc2_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_542_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_10_we0 = 1'b1;
    end else begin
        acc2_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_11_ce0 = 1'b1;
    end else begin
        acc2_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_542_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_11_we0 = 1'b1;
    end else begin
        acc2_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_12_ce0 = 1'b1;
    end else begin
        acc2_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_542_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_12_we0 = 1'b1;
    end else begin
        acc2_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_13_ce0 = 1'b1;
    end else begin
        acc2_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_542_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_13_we0 = 1'b1;
    end else begin
        acc2_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_14_ce0 = 1'b1;
    end else begin
        acc2_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_542_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_14_we0 = 1'b1;
    end else begin
        acc2_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_15_ce0 = 1'b1;
    end else begin
        acc2_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_542_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_15_we0 = 1'b1;
    end else begin
        acc2_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_1_ce0 = 1'b1;
    end else begin
        acc2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_542_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_1_we0 = 1'b1;
    end else begin
        acc2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_2_ce0 = 1'b1;
    end else begin
        acc2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_542_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_2_we0 = 1'b1;
    end else begin
        acc2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_3_ce0 = 1'b1;
    end else begin
        acc2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_542_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_3_we0 = 1'b1;
    end else begin
        acc2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_4_ce0 = 1'b1;
    end else begin
        acc2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_542_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_4_we0 = 1'b1;
    end else begin
        acc2_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_5_ce0 = 1'b1;
    end else begin
        acc2_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_542_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_5_we0 = 1'b1;
    end else begin
        acc2_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_6_ce0 = 1'b1;
    end else begin
        acc2_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_542_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_6_we0 = 1'b1;
    end else begin
        acc2_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_7_ce0 = 1'b1;
    end else begin
        acc2_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_542_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_7_we0 = 1'b1;
    end else begin
        acc2_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_8_ce0 = 1'b1;
    end else begin
        acc2_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_542_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_8_we0 = 1'b1;
    end else begin
        acc2_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_9_ce0 = 1'b1;
    end else begin
        acc2_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_542_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_9_we0 = 1'b1;
    end else begin
        acc2_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_ce0 = 1'b1;
    end else begin
        acc2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_542_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc2_we0 = 1'b1;
    end else begin
        acc2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (tmp_fu_542_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_n2_5 = 6'd0;
    end else begin
        ap_sig_allocacmp_n2_5 = n2_fu_130;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc2_10_address0 = zext_ln129_fu_562_p1;

assign acc2_10_d0 = ((icmp_ln132_fu_582_p2[0:0] == 1'b1) ? p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_26_s : p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_10_s);

assign acc2_11_address0 = zext_ln129_fu_562_p1;

assign acc2_11_d0 = ((icmp_ln132_fu_582_p2[0:0] == 1'b1) ? p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_27_s : srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_b2_loc_93);

assign acc2_12_address0 = zext_ln129_fu_562_p1;

assign acc2_12_d0 = ((icmp_ln132_fu_582_p2[0:0] == 1'b1) ? p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_28_s : p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_12_s);

assign acc2_13_address0 = zext_ln129_fu_562_p1;

assign acc2_13_d0 = ((icmp_ln132_fu_582_p2[0:0] == 1'b1) ? p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_29_s : p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_13_s);

assign acc2_14_address0 = zext_ln129_fu_562_p1;

assign acc2_14_d0 = ((icmp_ln132_fu_582_p2[0:0] == 1'b1) ? p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_30_s : p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_14_s);

assign acc2_15_address0 = zext_ln129_fu_562_p1;

assign acc2_15_d0 = ((icmp_ln132_fu_582_p2[0:0] == 1'b1) ? srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_b2_loc : p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_15_s);

assign acc2_1_address0 = zext_ln129_fu_562_p1;

assign acc2_1_d0 = ((icmp_ln132_fu_582_p2[0:0] == 1'b1) ? p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_17_s : srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_117);

assign acc2_2_address0 = zext_ln129_fu_562_p1;

assign acc2_2_d0 = ((icmp_ln132_fu_582_p2[0:0] == 1'b1) ? p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_18_s : srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_118);

assign acc2_3_address0 = zext_ln129_fu_562_p1;

assign acc2_3_d0 = ((icmp_ln132_fu_582_p2[0:0] == 1'b1) ? p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_19_s : srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_119);

assign acc2_4_address0 = zext_ln129_fu_562_p1;

assign acc2_4_d0 = ((icmp_ln132_fu_582_p2[0:0] == 1'b1) ? p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_20_s : srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_120);

assign acc2_5_address0 = zext_ln129_fu_562_p1;

assign acc2_5_d0 = ((icmp_ln132_fu_582_p2[0:0] == 1'b1) ? srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_b2_loc_92 : srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_121);

assign acc2_6_address0 = zext_ln129_fu_562_p1;

assign acc2_6_d0 = ((icmp_ln132_fu_582_p2[0:0] == 1'b1) ? p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_22_s : srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_122);

assign acc2_7_address0 = zext_ln129_fu_562_p1;

assign acc2_7_d0 = ((icmp_ln132_fu_582_p2[0:0] == 1'b1) ? p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_23_s : srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_123);

assign acc2_8_address0 = zext_ln129_fu_562_p1;

assign acc2_8_d0 = ((icmp_ln132_fu_582_p2[0:0] == 1'b1) ? p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_24_s : srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_124);

assign acc2_9_address0 = zext_ln129_fu_562_p1;

assign acc2_9_d0 = ((icmp_ln132_fu_582_p2[0:0] == 1'b1) ? p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_25_s : srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_125);

assign acc2_address0 = zext_ln129_fu_562_p1;

assign acc2_d0 = ((icmp_ln132_fu_582_p2[0:0] == 1'b1) ? p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6b2_loc_16_s : srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_116);

assign add_ln129_fu_732_p2 = (ap_sig_allocacmp_n2_5 + 6'd16);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln132_fu_582_p2 = ((trunc_ln129_fu_550_p1 == 5'd16) ? 1'b1 : 1'b0);

assign tmp_33_fu_554_p3 = ap_sig_allocacmp_n2_5[32'd4];

assign tmp_fu_542_p3 = ap_sig_allocacmp_n2_5[32'd5];

assign trunc_ln129_fu_550_p1 = ap_sig_allocacmp_n2_5[4:0];

assign zext_ln129_fu_562_p1 = tmp_33_fu_554_p3;

endmodule //srcnn_compute_tile_Pipeline_Conv2Out_biases
