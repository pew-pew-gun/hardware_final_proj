-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity srcnn_compute_tile_Pipeline_Conv2_dot32 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    zext_ln137 : IN STD_LOGIC_VECTOR (5 downto 0);
    acc2_15_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_15_ce0 : OUT STD_LOGIC;
    acc2_15_we0 : OUT STD_LOGIC;
    acc2_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_15_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_15_ce1 : OUT STD_LOGIC;
    acc2_15_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    acc2_14_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_14_ce0 : OUT STD_LOGIC;
    acc2_14_we0 : OUT STD_LOGIC;
    acc2_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_14_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_14_ce1 : OUT STD_LOGIC;
    acc2_14_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    acc2_13_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_13_ce0 : OUT STD_LOGIC;
    acc2_13_we0 : OUT STD_LOGIC;
    acc2_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_13_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_13_ce1 : OUT STD_LOGIC;
    acc2_13_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    acc2_12_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_12_ce0 : OUT STD_LOGIC;
    acc2_12_we0 : OUT STD_LOGIC;
    acc2_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_12_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_12_ce1 : OUT STD_LOGIC;
    acc2_12_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    acc2_11_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_11_ce0 : OUT STD_LOGIC;
    acc2_11_we0 : OUT STD_LOGIC;
    acc2_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_11_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_11_ce1 : OUT STD_LOGIC;
    acc2_11_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    acc2_10_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_10_ce0 : OUT STD_LOGIC;
    acc2_10_we0 : OUT STD_LOGIC;
    acc2_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_10_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_10_ce1 : OUT STD_LOGIC;
    acc2_10_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    acc2_9_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_9_ce0 : OUT STD_LOGIC;
    acc2_9_we0 : OUT STD_LOGIC;
    acc2_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_9_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_9_ce1 : OUT STD_LOGIC;
    acc2_9_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    acc2_8_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_8_ce0 : OUT STD_LOGIC;
    acc2_8_we0 : OUT STD_LOGIC;
    acc2_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_8_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_8_ce1 : OUT STD_LOGIC;
    acc2_8_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    acc2_7_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_7_ce0 : OUT STD_LOGIC;
    acc2_7_we0 : OUT STD_LOGIC;
    acc2_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_7_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_7_ce1 : OUT STD_LOGIC;
    acc2_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    acc2_6_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_6_ce0 : OUT STD_LOGIC;
    acc2_6_we0 : OUT STD_LOGIC;
    acc2_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_6_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_6_ce1 : OUT STD_LOGIC;
    acc2_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    acc2_5_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_5_ce0 : OUT STD_LOGIC;
    acc2_5_we0 : OUT STD_LOGIC;
    acc2_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_5_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_5_ce1 : OUT STD_LOGIC;
    acc2_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    acc2_4_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_4_ce0 : OUT STD_LOGIC;
    acc2_4_we0 : OUT STD_LOGIC;
    acc2_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_4_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_4_ce1 : OUT STD_LOGIC;
    acc2_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    acc2_3_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_3_ce0 : OUT STD_LOGIC;
    acc2_3_we0 : OUT STD_LOGIC;
    acc2_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_3_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_3_ce1 : OUT STD_LOGIC;
    acc2_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    acc2_2_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_2_ce0 : OUT STD_LOGIC;
    acc2_2_we0 : OUT STD_LOGIC;
    acc2_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_2_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_2_ce1 : OUT STD_LOGIC;
    acc2_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    acc2_1_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_1_ce0 : OUT STD_LOGIC;
    acc2_1_we0 : OUT STD_LOGIC;
    acc2_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_1_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_1_ce1 : OUT STD_LOGIC;
    acc2_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    acc2_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_ce0 : OUT STD_LOGIC;
    acc2_we0 : OUT STD_LOGIC;
    acc2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    acc2_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    acc2_ce1 : OUT STD_LOGIC;
    acc2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    acc1_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_39_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_39_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_39_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_38_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_38_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_38_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_37_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_37_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_37_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_ce0 : OUT STD_LOGIC;
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_11_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_11_ce0 : OUT STD_LOGIC;
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_ce0 : OUT STD_LOGIC;
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_13_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_13_ce0 : OUT STD_LOGIC;
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_ce0 : OUT STD_LOGIC;
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_ce0 : OUT STD_LOGIC;
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_7737_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_7737_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_7737_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_7737_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_7737_p_ce : OUT STD_LOGIC;
    grp_fu_10161_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10161_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10161_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_10161_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10161_p_ce : OUT STD_LOGIC;
    grp_fu_10165_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10165_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10165_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_10165_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10165_p_ce : OUT STD_LOGIC;
    grp_fu_10181_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10181_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10181_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_10181_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10181_p_ce : OUT STD_LOGIC;
    grp_fu_10185_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10185_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10185_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_10185_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10185_p_ce : OUT STD_LOGIC;
    grp_fu_10189_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10189_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10189_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_10189_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10189_p_ce : OUT STD_LOGIC;
    grp_fu_10193_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10193_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10193_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_10193_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10193_p_ce : OUT STD_LOGIC;
    grp_fu_10197_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10197_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10197_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_10197_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10197_p_ce : OUT STD_LOGIC;
    grp_fu_10201_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10201_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10201_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_10201_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10201_p_ce : OUT STD_LOGIC;
    grp_fu_10169_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10169_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10169_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10169_p_ce : OUT STD_LOGIC;
    grp_fu_10173_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10173_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10173_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10173_p_ce : OUT STD_LOGIC;
    grp_fu_10177_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10177_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10177_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10177_p_ce : OUT STD_LOGIC;
    grp_fu_10205_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10205_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10205_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10205_p_ce : OUT STD_LOGIC;
    grp_fu_10209_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10209_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10209_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10209_p_ce : OUT STD_LOGIC;
    grp_fu_10213_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10213_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10213_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10213_p_ce : OUT STD_LOGIC;
    grp_fu_10217_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10217_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10217_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10217_p_ce : OUT STD_LOGIC;
    grp_fu_10221_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10221_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10221_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10221_p_ce : OUT STD_LOGIC;
    grp_fu_10225_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10225_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10225_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_10225_p_ce : OUT STD_LOGIC );
end;


architecture behav of srcnn_compute_tile_Pipeline_Conv2_dot32 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal tmp_fu_776_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_15_fu_784_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_reg_881 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_reg_881_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_reg_881_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_reg_881_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_183_reg_966 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_184_reg_971 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_185_reg_976 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_186_reg_981 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_187_reg_986 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_188_reg_991 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_189_reg_996 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_190_reg_1001 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_191_reg_1006 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_192_reg_1011 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_1_reg_1016 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_mulmulmulmulmulmulmulmulfloat_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_w2_loc_1_reg_1021 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_1_reg_1026 : STD_LOGIC_VECTOR (31 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_w2_loc_156_reg_1031 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_1_reg_1036 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_1_reg_1041 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul1_i_i_reg_1046 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc2_addr_reg_1051 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_addr_reg_1051_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_addr_reg_1051_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_addr_reg_1051_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_1_addr_reg_1057 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_1_addr_reg_1057_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_1_addr_reg_1057_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_1_addr_reg_1057_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_2_addr_reg_1063 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_2_addr_reg_1063_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_2_addr_reg_1063_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_2_addr_reg_1063_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_3_addr_reg_1069 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_3_addr_reg_1069_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_3_addr_reg_1069_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_3_addr_reg_1069_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_4_addr_reg_1075 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_4_addr_reg_1075_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_4_addr_reg_1075_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_4_addr_reg_1075_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_5_addr_reg_1081 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_5_addr_reg_1081_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_5_addr_reg_1081_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_5_addr_reg_1081_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_6_addr_reg_1087 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_6_addr_reg_1087_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_6_addr_reg_1087_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_6_addr_reg_1087_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_7_addr_reg_1093 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_7_addr_reg_1093_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_7_addr_reg_1093_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_7_addr_reg_1093_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_8_addr_reg_1099 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_8_addr_reg_1099_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_8_addr_reg_1099_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_8_addr_reg_1099_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_9_addr_reg_1105 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_9_addr_reg_1105_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_9_addr_reg_1105_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_9_addr_reg_1105_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_10_addr_reg_1111 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_10_addr_reg_1111_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_10_addr_reg_1111_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_10_addr_reg_1111_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_11_addr_reg_1117 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_11_addr_reg_1117_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_11_addr_reg_1117_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_11_addr_reg_1117_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_12_addr_reg_1123 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_12_addr_reg_1123_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_12_addr_reg_1123_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_12_addr_reg_1123_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_13_addr_reg_1129 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_13_addr_reg_1129_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_13_addr_reg_1129_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_13_addr_reg_1129_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_14_addr_reg_1135 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_14_addr_reg_1135_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_14_addr_reg_1135_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_14_addr_reg_1135_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal mul84_1_i_i_reg_1141 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul84_2_i_i_reg_1146 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul84_3_i_i_reg_1151 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul84_4_i_i_reg_1156 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul84_5_i_i_reg_1161 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul84_6_i_i_reg_1166 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul84_7_i_i_reg_1171 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul84_8_i_i_reg_1176 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_740_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul84_9_i_i_reg_1181 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_744_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul84_i_i_reg_1186 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_748_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul84_10_i_i_reg_1191 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_752_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul84_11_i_i_reg_1196 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_756_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul84_12_i_i_reg_1201 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_760_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul84_13_i_i_reg_1206 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_764_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul84_14_i_i_reg_1211 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc2_15_addr_reg_1216 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_15_addr_reg_1216_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_15_addr_reg_1216_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal acc2_15_addr_reg_1216_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln193_fu_800_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln190_fu_831_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal n2_fu_112 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln190_fu_820_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_n2_4 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_662_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_668_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_674_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_680_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_686_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_692_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_698_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln_fu_792_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component srcnn_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_fmul_32ns_32ns_32_3_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    fadd_32ns_32ns_32_4_full_dsp_1_U558 : component srcnn_fadd_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc2_9_q1,
        din1 => mul84_9_i_i_reg_1181,
        ce => ap_const_logic_1,
        dout => grp_fu_662_p2);

    fadd_32ns_32ns_32_4_full_dsp_1_U559 : component srcnn_fadd_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc2_10_q1,
        din1 => mul84_i_i_reg_1186,
        ce => ap_const_logic_1,
        dout => grp_fu_668_p2);

    fadd_32ns_32ns_32_4_full_dsp_1_U560 : component srcnn_fadd_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc2_11_q1,
        din1 => mul84_10_i_i_reg_1191,
        ce => ap_const_logic_1,
        dout => grp_fu_674_p2);

    fadd_32ns_32ns_32_4_full_dsp_1_U561 : component srcnn_fadd_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc2_12_q1,
        din1 => mul84_11_i_i_reg_1196,
        ce => ap_const_logic_1,
        dout => grp_fu_680_p2);

    fadd_32ns_32ns_32_4_full_dsp_1_U562 : component srcnn_fadd_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc2_13_q1,
        din1 => mul84_12_i_i_reg_1201,
        ce => ap_const_logic_1,
        dout => grp_fu_686_p2);

    fadd_32ns_32ns_32_4_full_dsp_1_U563 : component srcnn_fadd_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc2_14_q1,
        din1 => mul84_13_i_i_reg_1206,
        ce => ap_const_logic_1,
        dout => grp_fu_692_p2);

    fadd_32ns_32ns_32_4_full_dsp_1_U564 : component srcnn_fadd_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc2_15_q1,
        din1 => mul84_14_i_i_reg_1211,
        ce => ap_const_logic_1,
        dout => grp_fu_698_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U574 : component srcnn_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_192_reg_1011,
        din1 => acc1_1,
        ce => ap_const_logic_1,
        dout => grp_fu_740_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U575 : component srcnn_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_1_reg_1016,
        din1 => acc1_1,
        ce => ap_const_logic_1,
        dout => grp_fu_744_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U576 : component srcnn_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => srcnn_mulmulmulmulmulmulmulmulfloat_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_w2_loc_1_reg_1021,
        din1 => acc1_1,
        ce => ap_const_logic_1,
        dout => grp_fu_748_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U577 : component srcnn_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_1_reg_1026,
        din1 => acc1_1,
        ce => ap_const_logic_1,
        dout => grp_fu_752_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U578 : component srcnn_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_w2_loc_156_reg_1031,
        din1 => acc1_1,
        ce => ap_const_logic_1,
        dout => grp_fu_756_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U579 : component srcnn_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_1_reg_1036,
        din1 => acc1_1,
        ce => ap_const_logic_1,
        dout => grp_fu_760_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U580 : component srcnn_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_1_reg_1041,
        din1 => acc1_1,
        ce => ap_const_logic_1,
        dout => grp_fu_764_p2);

    flow_control_loop_pipe_sequential_init_U : component srcnn_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    n2_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((tmp_fu_776_p3 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    n2_fu_112 <= add_ln190_fu_820_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    n2_fu_112 <= ap_const_lv6_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                acc2_10_addr_reg_1111 <= zext_ln190_fu_831_p1(1 - 1 downto 0);
                acc2_10_addr_reg_1111_pp0_iter5_reg <= acc2_10_addr_reg_1111;
                acc2_10_addr_reg_1111_pp0_iter6_reg <= acc2_10_addr_reg_1111_pp0_iter5_reg;
                acc2_10_addr_reg_1111_pp0_iter7_reg <= acc2_10_addr_reg_1111_pp0_iter6_reg;
                acc2_11_addr_reg_1117 <= zext_ln190_fu_831_p1(1 - 1 downto 0);
                acc2_11_addr_reg_1117_pp0_iter5_reg <= acc2_11_addr_reg_1117;
                acc2_11_addr_reg_1117_pp0_iter6_reg <= acc2_11_addr_reg_1117_pp0_iter5_reg;
                acc2_11_addr_reg_1117_pp0_iter7_reg <= acc2_11_addr_reg_1117_pp0_iter6_reg;
                acc2_12_addr_reg_1123 <= zext_ln190_fu_831_p1(1 - 1 downto 0);
                acc2_12_addr_reg_1123_pp0_iter5_reg <= acc2_12_addr_reg_1123;
                acc2_12_addr_reg_1123_pp0_iter6_reg <= acc2_12_addr_reg_1123_pp0_iter5_reg;
                acc2_12_addr_reg_1123_pp0_iter7_reg <= acc2_12_addr_reg_1123_pp0_iter6_reg;
                acc2_13_addr_reg_1129 <= zext_ln190_fu_831_p1(1 - 1 downto 0);
                acc2_13_addr_reg_1129_pp0_iter5_reg <= acc2_13_addr_reg_1129;
                acc2_13_addr_reg_1129_pp0_iter6_reg <= acc2_13_addr_reg_1129_pp0_iter5_reg;
                acc2_13_addr_reg_1129_pp0_iter7_reg <= acc2_13_addr_reg_1129_pp0_iter6_reg;
                acc2_14_addr_reg_1135 <= zext_ln190_fu_831_p1(1 - 1 downto 0);
                acc2_14_addr_reg_1135_pp0_iter5_reg <= acc2_14_addr_reg_1135;
                acc2_14_addr_reg_1135_pp0_iter6_reg <= acc2_14_addr_reg_1135_pp0_iter5_reg;
                acc2_14_addr_reg_1135_pp0_iter7_reg <= acc2_14_addr_reg_1135_pp0_iter6_reg;
                acc2_15_addr_reg_1216 <= zext_ln190_fu_831_p1(1 - 1 downto 0);
                acc2_15_addr_reg_1216_pp0_iter5_reg <= acc2_15_addr_reg_1216;
                acc2_15_addr_reg_1216_pp0_iter6_reg <= acc2_15_addr_reg_1216_pp0_iter5_reg;
                acc2_15_addr_reg_1216_pp0_iter7_reg <= acc2_15_addr_reg_1216_pp0_iter6_reg;
                acc2_1_addr_reg_1057 <= zext_ln190_fu_831_p1(1 - 1 downto 0);
                acc2_1_addr_reg_1057_pp0_iter5_reg <= acc2_1_addr_reg_1057;
                acc2_1_addr_reg_1057_pp0_iter6_reg <= acc2_1_addr_reg_1057_pp0_iter5_reg;
                acc2_1_addr_reg_1057_pp0_iter7_reg <= acc2_1_addr_reg_1057_pp0_iter6_reg;
                acc2_2_addr_reg_1063 <= zext_ln190_fu_831_p1(1 - 1 downto 0);
                acc2_2_addr_reg_1063_pp0_iter5_reg <= acc2_2_addr_reg_1063;
                acc2_2_addr_reg_1063_pp0_iter6_reg <= acc2_2_addr_reg_1063_pp0_iter5_reg;
                acc2_2_addr_reg_1063_pp0_iter7_reg <= acc2_2_addr_reg_1063_pp0_iter6_reg;
                acc2_3_addr_reg_1069 <= zext_ln190_fu_831_p1(1 - 1 downto 0);
                acc2_3_addr_reg_1069_pp0_iter5_reg <= acc2_3_addr_reg_1069;
                acc2_3_addr_reg_1069_pp0_iter6_reg <= acc2_3_addr_reg_1069_pp0_iter5_reg;
                acc2_3_addr_reg_1069_pp0_iter7_reg <= acc2_3_addr_reg_1069_pp0_iter6_reg;
                acc2_4_addr_reg_1075 <= zext_ln190_fu_831_p1(1 - 1 downto 0);
                acc2_4_addr_reg_1075_pp0_iter5_reg <= acc2_4_addr_reg_1075;
                acc2_4_addr_reg_1075_pp0_iter6_reg <= acc2_4_addr_reg_1075_pp0_iter5_reg;
                acc2_4_addr_reg_1075_pp0_iter7_reg <= acc2_4_addr_reg_1075_pp0_iter6_reg;
                acc2_5_addr_reg_1081 <= zext_ln190_fu_831_p1(1 - 1 downto 0);
                acc2_5_addr_reg_1081_pp0_iter5_reg <= acc2_5_addr_reg_1081;
                acc2_5_addr_reg_1081_pp0_iter6_reg <= acc2_5_addr_reg_1081_pp0_iter5_reg;
                acc2_5_addr_reg_1081_pp0_iter7_reg <= acc2_5_addr_reg_1081_pp0_iter6_reg;
                acc2_6_addr_reg_1087 <= zext_ln190_fu_831_p1(1 - 1 downto 0);
                acc2_6_addr_reg_1087_pp0_iter5_reg <= acc2_6_addr_reg_1087;
                acc2_6_addr_reg_1087_pp0_iter6_reg <= acc2_6_addr_reg_1087_pp0_iter5_reg;
                acc2_6_addr_reg_1087_pp0_iter7_reg <= acc2_6_addr_reg_1087_pp0_iter6_reg;
                acc2_7_addr_reg_1093 <= zext_ln190_fu_831_p1(1 - 1 downto 0);
                acc2_7_addr_reg_1093_pp0_iter5_reg <= acc2_7_addr_reg_1093;
                acc2_7_addr_reg_1093_pp0_iter6_reg <= acc2_7_addr_reg_1093_pp0_iter5_reg;
                acc2_7_addr_reg_1093_pp0_iter7_reg <= acc2_7_addr_reg_1093_pp0_iter6_reg;
                acc2_8_addr_reg_1099 <= zext_ln190_fu_831_p1(1 - 1 downto 0);
                acc2_8_addr_reg_1099_pp0_iter5_reg <= acc2_8_addr_reg_1099;
                acc2_8_addr_reg_1099_pp0_iter6_reg <= acc2_8_addr_reg_1099_pp0_iter5_reg;
                acc2_8_addr_reg_1099_pp0_iter7_reg <= acc2_8_addr_reg_1099_pp0_iter6_reg;
                acc2_9_addr_reg_1105 <= zext_ln190_fu_831_p1(1 - 1 downto 0);
                acc2_9_addr_reg_1105_pp0_iter5_reg <= acc2_9_addr_reg_1105;
                acc2_9_addr_reg_1105_pp0_iter6_reg <= acc2_9_addr_reg_1105_pp0_iter5_reg;
                acc2_9_addr_reg_1105_pp0_iter7_reg <= acc2_9_addr_reg_1105_pp0_iter6_reg;
                acc2_addr_reg_1051 <= zext_ln190_fu_831_p1(1 - 1 downto 0);
                acc2_addr_reg_1051_pp0_iter5_reg <= acc2_addr_reg_1051;
                acc2_addr_reg_1051_pp0_iter6_reg <= acc2_addr_reg_1051_pp0_iter5_reg;
                acc2_addr_reg_1051_pp0_iter7_reg <= acc2_addr_reg_1051_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                mul1_i_i_reg_1046 <= grp_fu_10169_p_dout0;
                mul84_10_i_i_reg_1191 <= grp_fu_748_p2;
                mul84_11_i_i_reg_1196 <= grp_fu_752_p2;
                mul84_12_i_i_reg_1201 <= grp_fu_756_p2;
                mul84_13_i_i_reg_1206 <= grp_fu_760_p2;
                mul84_14_i_i_reg_1211 <= grp_fu_764_p2;
                mul84_1_i_i_reg_1141 <= grp_fu_10173_p_dout0;
                mul84_2_i_i_reg_1146 <= grp_fu_10177_p_dout0;
                mul84_3_i_i_reg_1151 <= grp_fu_10205_p_dout0;
                mul84_4_i_i_reg_1156 <= grp_fu_10209_p_dout0;
                mul84_5_i_i_reg_1161 <= grp_fu_10213_p_dout0;
                mul84_6_i_i_reg_1166 <= grp_fu_10217_p_dout0;
                mul84_7_i_i_reg_1171 <= grp_fu_10221_p_dout0;
                mul84_8_i_i_reg_1176 <= grp_fu_10225_p_dout0;
                mul84_9_i_i_reg_1181 <= grp_fu_740_p2;
                mul84_i_i_reg_1186 <= grp_fu_744_p2;
                tmp_15_reg_881_pp0_iter2_reg <= tmp_15_reg_881_pp0_iter1_reg;
                tmp_15_reg_881_pp0_iter3_reg <= tmp_15_reg_881_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_1_reg_1016 <= p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_q0;
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_1_reg_1026 <= p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_q0;
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_1_reg_1036 <= p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_q0;
                p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_1_reg_1041 <= p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_q0;
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_183_reg_966 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_39_q0;
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_184_reg_971 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_q0;
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_185_reg_976 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_q0;
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_186_reg_981 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_q0;
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_187_reg_986 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_q0;
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_188_reg_991 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_q0;
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_189_reg_996 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_38_q0;
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_190_reg_1001 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_37_q0;
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_191_reg_1006 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_q0;
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_192_reg_1011 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_q0;
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_w2_loc_156_reg_1031 <= p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_13_q0;
                srcnn_mulmulmulmulmulmulmulmulfloat_255_255_float_1_9_9_float_float_64_1_1_float_float_32_5_5_float_float_255_255_int_w2_loc_1_reg_1021 <= p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_11_q0;
                tmp_15_reg_881_pp0_iter1_reg <= tmp_15_reg_881;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_776_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_15_reg_881 <= ap_sig_allocacmp_n2_4(4 downto 4);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    acc2_10_address0 <= acc2_10_addr_reg_1111_pp0_iter7_reg;
    acc2_10_address1 <= zext_ln190_fu_831_p1(1 - 1 downto 0);

    acc2_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_10_ce0 <= ap_const_logic_1;
        else 
            acc2_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    acc2_10_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            acc2_10_ce1 <= ap_const_logic_1;
        else 
            acc2_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_10_d0 <= grp_fu_668_p2;

    acc2_10_we0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_10_we0 <= ap_const_logic_1;
        else 
            acc2_10_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_11_address0 <= acc2_11_addr_reg_1117_pp0_iter7_reg;
    acc2_11_address1 <= zext_ln190_fu_831_p1(1 - 1 downto 0);

    acc2_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_11_ce0 <= ap_const_logic_1;
        else 
            acc2_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    acc2_11_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            acc2_11_ce1 <= ap_const_logic_1;
        else 
            acc2_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_11_d0 <= grp_fu_674_p2;

    acc2_11_we0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_11_we0 <= ap_const_logic_1;
        else 
            acc2_11_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_12_address0 <= acc2_12_addr_reg_1123_pp0_iter7_reg;
    acc2_12_address1 <= zext_ln190_fu_831_p1(1 - 1 downto 0);

    acc2_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_12_ce0 <= ap_const_logic_1;
        else 
            acc2_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    acc2_12_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            acc2_12_ce1 <= ap_const_logic_1;
        else 
            acc2_12_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_12_d0 <= grp_fu_680_p2;

    acc2_12_we0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_12_we0 <= ap_const_logic_1;
        else 
            acc2_12_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_13_address0 <= acc2_13_addr_reg_1129_pp0_iter7_reg;
    acc2_13_address1 <= zext_ln190_fu_831_p1(1 - 1 downto 0);

    acc2_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_13_ce0 <= ap_const_logic_1;
        else 
            acc2_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    acc2_13_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            acc2_13_ce1 <= ap_const_logic_1;
        else 
            acc2_13_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_13_d0 <= grp_fu_686_p2;

    acc2_13_we0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_13_we0 <= ap_const_logic_1;
        else 
            acc2_13_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_14_address0 <= acc2_14_addr_reg_1135_pp0_iter7_reg;
    acc2_14_address1 <= zext_ln190_fu_831_p1(1 - 1 downto 0);

    acc2_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_14_ce0 <= ap_const_logic_1;
        else 
            acc2_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    acc2_14_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            acc2_14_ce1 <= ap_const_logic_1;
        else 
            acc2_14_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_14_d0 <= grp_fu_692_p2;

    acc2_14_we0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_14_we0 <= ap_const_logic_1;
        else 
            acc2_14_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_15_address0 <= acc2_15_addr_reg_1216_pp0_iter7_reg;
    acc2_15_address1 <= zext_ln190_fu_831_p1(1 - 1 downto 0);

    acc2_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_15_ce0 <= ap_const_logic_1;
        else 
            acc2_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    acc2_15_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            acc2_15_ce1 <= ap_const_logic_1;
        else 
            acc2_15_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_15_d0 <= grp_fu_698_p2;

    acc2_15_we0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_15_we0 <= ap_const_logic_1;
        else 
            acc2_15_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_1_address0 <= acc2_1_addr_reg_1057_pp0_iter7_reg;
    acc2_1_address1 <= zext_ln190_fu_831_p1(1 - 1 downto 0);

    acc2_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_1_ce0 <= ap_const_logic_1;
        else 
            acc2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    acc2_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            acc2_1_ce1 <= ap_const_logic_1;
        else 
            acc2_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_1_d0 <= grp_fu_10161_p_dout0;

    acc2_1_we0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_1_we0 <= ap_const_logic_1;
        else 
            acc2_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_2_address0 <= acc2_2_addr_reg_1063_pp0_iter7_reg;
    acc2_2_address1 <= zext_ln190_fu_831_p1(1 - 1 downto 0);

    acc2_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_2_ce0 <= ap_const_logic_1;
        else 
            acc2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    acc2_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            acc2_2_ce1 <= ap_const_logic_1;
        else 
            acc2_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_2_d0 <= grp_fu_10165_p_dout0;

    acc2_2_we0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_2_we0 <= ap_const_logic_1;
        else 
            acc2_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_3_address0 <= acc2_3_addr_reg_1069_pp0_iter7_reg;
    acc2_3_address1 <= zext_ln190_fu_831_p1(1 - 1 downto 0);

    acc2_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_3_ce0 <= ap_const_logic_1;
        else 
            acc2_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    acc2_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            acc2_3_ce1 <= ap_const_logic_1;
        else 
            acc2_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_3_d0 <= grp_fu_10181_p_dout0;

    acc2_3_we0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_3_we0 <= ap_const_logic_1;
        else 
            acc2_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_4_address0 <= acc2_4_addr_reg_1075_pp0_iter7_reg;
    acc2_4_address1 <= zext_ln190_fu_831_p1(1 - 1 downto 0);

    acc2_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_4_ce0 <= ap_const_logic_1;
        else 
            acc2_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    acc2_4_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            acc2_4_ce1 <= ap_const_logic_1;
        else 
            acc2_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_4_d0 <= grp_fu_10185_p_dout0;

    acc2_4_we0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_4_we0 <= ap_const_logic_1;
        else 
            acc2_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_5_address0 <= acc2_5_addr_reg_1081_pp0_iter7_reg;
    acc2_5_address1 <= zext_ln190_fu_831_p1(1 - 1 downto 0);

    acc2_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_5_ce0 <= ap_const_logic_1;
        else 
            acc2_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    acc2_5_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            acc2_5_ce1 <= ap_const_logic_1;
        else 
            acc2_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_5_d0 <= grp_fu_10189_p_dout0;

    acc2_5_we0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_5_we0 <= ap_const_logic_1;
        else 
            acc2_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_6_address0 <= acc2_6_addr_reg_1087_pp0_iter7_reg;
    acc2_6_address1 <= zext_ln190_fu_831_p1(1 - 1 downto 0);

    acc2_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_6_ce0 <= ap_const_logic_1;
        else 
            acc2_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    acc2_6_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            acc2_6_ce1 <= ap_const_logic_1;
        else 
            acc2_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_6_d0 <= grp_fu_10193_p_dout0;

    acc2_6_we0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_6_we0 <= ap_const_logic_1;
        else 
            acc2_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_7_address0 <= acc2_7_addr_reg_1093_pp0_iter7_reg;
    acc2_7_address1 <= zext_ln190_fu_831_p1(1 - 1 downto 0);

    acc2_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_7_ce0 <= ap_const_logic_1;
        else 
            acc2_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    acc2_7_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            acc2_7_ce1 <= ap_const_logic_1;
        else 
            acc2_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_7_d0 <= grp_fu_10197_p_dout0;

    acc2_7_we0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_7_we0 <= ap_const_logic_1;
        else 
            acc2_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_8_address0 <= acc2_8_addr_reg_1099_pp0_iter7_reg;
    acc2_8_address1 <= zext_ln190_fu_831_p1(1 - 1 downto 0);

    acc2_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_8_ce0 <= ap_const_logic_1;
        else 
            acc2_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    acc2_8_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            acc2_8_ce1 <= ap_const_logic_1;
        else 
            acc2_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_8_d0 <= grp_fu_10201_p_dout0;

    acc2_8_we0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_8_we0 <= ap_const_logic_1;
        else 
            acc2_8_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_9_address0 <= acc2_9_addr_reg_1105_pp0_iter7_reg;
    acc2_9_address1 <= zext_ln190_fu_831_p1(1 - 1 downto 0);

    acc2_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_9_ce0 <= ap_const_logic_1;
        else 
            acc2_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    acc2_9_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            acc2_9_ce1 <= ap_const_logic_1;
        else 
            acc2_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_9_d0 <= grp_fu_662_p2;

    acc2_9_we0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_9_we0 <= ap_const_logic_1;
        else 
            acc2_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_address0 <= acc2_addr_reg_1051_pp0_iter7_reg;
    acc2_address1 <= zext_ln190_fu_831_p1(1 - 1 downto 0);

    acc2_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_ce0 <= ap_const_logic_1;
        else 
            acc2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    acc2_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            acc2_ce1 <= ap_const_logic_1;
        else 
            acc2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    acc2_d0 <= grp_fu_7737_p_dout0;

    acc2_we0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            acc2_we0 <= ap_const_logic_1;
        else 
            acc2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln190_fu_820_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_n2_4) + unsigned(ap_const_lv6_10));
    add_ln_fu_792_p3 <= (tmp_15_fu_784_p3 & zext_ln137);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, tmp_fu_776_p3)
    begin
        if (((tmp_fu_776_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter7_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_n2_4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, n2_fu_112, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_n2_4 <= ap_const_lv6_0;
        else 
            ap_sig_allocacmp_n2_4 <= n2_fu_112;
        end if; 
    end process;

    grp_fu_10161_p_ce <= ap_const_logic_1;
    grp_fu_10161_p_din0 <= acc2_1_q1;
    grp_fu_10161_p_din1 <= mul84_1_i_i_reg_1141;
    grp_fu_10161_p_opcode <= ap_const_lv2_0;
    grp_fu_10165_p_ce <= ap_const_logic_1;
    grp_fu_10165_p_din0 <= acc2_2_q1;
    grp_fu_10165_p_din1 <= mul84_2_i_i_reg_1146;
    grp_fu_10165_p_opcode <= ap_const_lv2_0;
    grp_fu_10169_p_ce <= ap_const_logic_1;
    grp_fu_10169_p_din0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_183_reg_966;
    grp_fu_10169_p_din1 <= acc1_1;
    grp_fu_10173_p_ce <= ap_const_logic_1;
    grp_fu_10173_p_din0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_184_reg_971;
    grp_fu_10173_p_din1 <= acc1_1;
    grp_fu_10177_p_ce <= ap_const_logic_1;
    grp_fu_10177_p_din0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_185_reg_976;
    grp_fu_10177_p_din1 <= acc1_1;
    grp_fu_10181_p_ce <= ap_const_logic_1;
    grp_fu_10181_p_din0 <= acc2_3_q1;
    grp_fu_10181_p_din1 <= mul84_3_i_i_reg_1151;
    grp_fu_10181_p_opcode <= ap_const_lv2_0;
    grp_fu_10185_p_ce <= ap_const_logic_1;
    grp_fu_10185_p_din0 <= acc2_4_q1;
    grp_fu_10185_p_din1 <= mul84_4_i_i_reg_1156;
    grp_fu_10185_p_opcode <= ap_const_lv2_0;
    grp_fu_10189_p_ce <= ap_const_logic_1;
    grp_fu_10189_p_din0 <= acc2_5_q1;
    grp_fu_10189_p_din1 <= mul84_5_i_i_reg_1161;
    grp_fu_10189_p_opcode <= ap_const_lv2_0;
    grp_fu_10193_p_ce <= ap_const_logic_1;
    grp_fu_10193_p_din0 <= acc2_6_q1;
    grp_fu_10193_p_din1 <= mul84_6_i_i_reg_1166;
    grp_fu_10193_p_opcode <= ap_const_lv2_0;
    grp_fu_10197_p_ce <= ap_const_logic_1;
    grp_fu_10197_p_din0 <= acc2_7_q1;
    grp_fu_10197_p_din1 <= mul84_7_i_i_reg_1171;
    grp_fu_10197_p_opcode <= ap_const_lv2_0;
    grp_fu_10201_p_ce <= ap_const_logic_1;
    grp_fu_10201_p_din0 <= acc2_8_q1;
    grp_fu_10201_p_din1 <= mul84_8_i_i_reg_1176;
    grp_fu_10201_p_opcode <= ap_const_lv2_0;
    grp_fu_10205_p_ce <= ap_const_logic_1;
    grp_fu_10205_p_din0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_186_reg_981;
    grp_fu_10205_p_din1 <= acc1_1;
    grp_fu_10209_p_ce <= ap_const_logic_1;
    grp_fu_10209_p_din0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_187_reg_986;
    grp_fu_10209_p_din1 <= acc1_1;
    grp_fu_10213_p_ce <= ap_const_logic_1;
    grp_fu_10213_p_din0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_188_reg_991;
    grp_fu_10213_p_din1 <= acc1_1;
    grp_fu_10217_p_ce <= ap_const_logic_1;
    grp_fu_10217_p_din0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_189_reg_996;
    grp_fu_10217_p_din1 <= acc1_1;
    grp_fu_10221_p_ce <= ap_const_logic_1;
    grp_fu_10221_p_din0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_190_reg_1001;
    grp_fu_10221_p_din1 <= acc1_1;
    grp_fu_10225_p_ce <= ap_const_logic_1;
    grp_fu_10225_p_din0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_191_reg_1006;
    grp_fu_10225_p_din1 <= acc1_1;
    grp_fu_7737_p_ce <= ap_const_logic_1;
    grp_fu_7737_p_din0 <= acc2_q1;
    grp_fu_7737_p_din1 <= mul1_i_i_reg_1046;
    grp_fu_7737_p_opcode <= ap_const_lv2_0;
    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_address0 <= zext_ln193_fu_800_p1(7 - 1 downto 0);

    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_11_address0 <= zext_ln193_fu_800_p1(7 - 1 downto 0);

    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_11_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_address0 <= zext_ln193_fu_800_p1(7 - 1 downto 0);

    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_13_address0 <= zext_ln193_fu_800_p1(7 - 1 downto 0);

    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_13_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_address0 <= zext_ln193_fu_800_p1(7 - 1 downto 0);

    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_address0 <= zext_ln193_fu_800_p1(7 - 1 downto 0);

    p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5srcnnPA255_A255_fPA1_A9_A9_fPfPA64_A1_A1_fS6_PA32_A5_A5_fS6_S1_iE6w2_loc_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_address0 <= zext_ln193_fu_800_p1(7 - 1 downto 0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_address0 <= zext_ln193_fu_800_p1(7 - 1 downto 0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_address0 <= zext_ln193_fu_800_p1(7 - 1 downto 0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_32_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_address0 <= zext_ln193_fu_800_p1(7 - 1 downto 0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_33_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_address0 <= zext_ln193_fu_800_p1(7 - 1 downto 0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_34_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_address0 <= zext_ln193_fu_800_p1(7 - 1 downto 0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_35_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_address0 <= zext_ln193_fu_800_p1(7 - 1 downto 0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_36_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_37_address0 <= zext_ln193_fu_800_p1(7 - 1 downto 0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_37_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_37_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_37_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_38_address0 <= zext_ln193_fu_800_p1(7 - 1 downto 0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_38_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_38_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_38_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_39_address0 <= zext_ln193_fu_800_p1(7 - 1 downto 0);

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_39_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_39_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_39_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_15_fu_784_p3 <= ap_sig_allocacmp_n2_4(4 downto 4);
    tmp_fu_776_p3 <= ap_sig_allocacmp_n2_4(5 downto 5);
    zext_ln190_fu_831_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_reg_881_pp0_iter3_reg),64));
    zext_ln193_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln_fu_792_p3),64));
end behav;
