-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity srcnn_load_tile_mm is
port (
    m_axi_gmem_in_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_in_AWREADY : IN STD_LOGIC;
    m_axi_gmem_in_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_in_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_in_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_in_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_in_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_in_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_in_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_in_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_in_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_in_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_in_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_in_WVALID : OUT STD_LOGIC;
    m_axi_gmem_in_WREADY : IN STD_LOGIC;
    m_axi_gmem_in_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_in_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_in_WLAST : OUT STD_LOGIC;
    m_axi_gmem_in_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_in_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_in_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_in_ARREADY : IN STD_LOGIC;
    m_axi_gmem_in_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_in_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_in_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_in_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_in_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_in_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_in_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_in_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_in_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_in_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_in_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_in_RVALID : IN STD_LOGIC;
    m_axi_gmem_in_RREADY : OUT STD_LOGIC;
    m_axi_gmem_in_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_in_RLAST : IN STD_LOGIC;
    m_axi_gmem_in_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_in_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_in_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_in_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_in_BVALID : IN STD_LOGIC;
    m_axi_gmem_in_BREADY : OUT STD_LOGIC;
    m_axi_gmem_in_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_in_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_in_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    input_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
    h0 : IN STD_LOGIC_VECTOR (8 downto 0);
    w0 : IN STD_LOGIC_VECTOR (7 downto 0);
    phase : IN STD_LOGIC_VECTOR (0 downto 0);
    h0_c1_din : OUT STD_LOGIC_VECTOR (8 downto 0);
    h0_c1_full_n : IN STD_LOGIC;
    h0_c1_write : OUT STD_LOGIC;
    w0_c2_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    w0_c2_full_n : IN STD_LOGIC;
    w0_c2_write : OUT STD_LOGIC;
    phase_c3_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    phase_c3_full_n : IN STD_LOGIC;
    phase_c3_write : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_we0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_we0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_we0 : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    phase_ap_vld : IN STD_LOGIC;
    w0_ap_vld : IN STD_LOGIC;
    h0_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    input_ftmap_ap_vld : IN STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_full_n : IN STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_write : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_full_n : IN STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_write : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_full_n : IN STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_write : OUT STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of srcnn_load_tile_mm is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal load_tile_mm_Block_entry38_proc_U0_ap_start : STD_LOGIC;
    signal load_tile_mm_Block_entry38_proc_U0_ap_done : STD_LOGIC;
    signal load_tile_mm_Block_entry38_proc_U0_ap_continue : STD_LOGIC;
    signal load_tile_mm_Block_entry38_proc_U0_ap_idle : STD_LOGIC;
    signal load_tile_mm_Block_entry38_proc_U0_ap_ready : STD_LOGIC;
    signal load_tile_mm_Block_entry38_proc_U0_h0_c1_din : STD_LOGIC_VECTOR (8 downto 0);
    signal load_tile_mm_Block_entry38_proc_U0_h0_c1_write : STD_LOGIC;
    signal load_tile_mm_Block_entry38_proc_U0_w0_c2_din : STD_LOGIC_VECTOR (7 downto 0);
    signal load_tile_mm_Block_entry38_proc_U0_w0_c2_write : STD_LOGIC;
    signal load_tile_mm_Block_entry38_proc_U0_phase_c3_din : STD_LOGIC_VECTOR (0 downto 0);
    signal load_tile_mm_Block_entry38_proc_U0_phase_c3_write : STD_LOGIC;
    signal load_tile_mm_Block_entry38_proc_U0_ap_return_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal load_tile_mm_Block_entry38_proc_U0_ap_return_1 : STD_LOGIC_VECTOR (9 downto 0);
    signal load_tile_mm_Block_entry38_proc_U0_ap_return_2 : STD_LOGIC_VECTOR (9 downto 0);
    signal load_tile_mm_Block_entry38_proc_U0_ap_return_3 : STD_LOGIC_VECTOR (8 downto 0);
    signal load_tile_mm_Block_entry38_proc_U0_ap_return_4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_channel_done_sext_ln43_3_loc_i_channel : STD_LOGIC;
    signal sext_ln43_3_loc_i_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_sext_ln43_3_loc_i_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_sext_ln43_3_loc_i_channel : STD_LOGIC;
    signal ap_channel_done_sext_ln43_1_loc_i_channel : STD_LOGIC;
    signal sext_ln43_1_loc_i_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_sext_ln43_1_loc_i_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_sext_ln43_1_loc_i_channel : STD_LOGIC;
    signal ap_channel_done_h0_cast10_loc_i_channel : STD_LOGIC;
    signal h0_cast10_loc_i_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_h0_cast10_loc_i_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_h0_cast10_loc_i_channel : STD_LOGIC;
    signal ap_channel_done_w0_cast19_loc_i_channel : STD_LOGIC;
    signal w0_cast19_loc_i_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_w0_cast19_loc_i_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_w0_cast19_loc_i_channel : STD_LOGIC;
    signal ap_channel_done_in_tile_0_offset_cast_loc_i_channel : STD_LOGIC;
    signal in_tile_0_offset_cast_loc_i_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_in_tile_0_offset_cast_loc_i_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_in_tile_0_offset_cast_loc_i_channel : STD_LOGIC;
    signal load_tile_mm_Loop_InputTileHread_proc_U0_ap_start : STD_LOGIC;
    signal load_tile_mm_Loop_InputTileHread_proc_U0_ap_done : STD_LOGIC;
    signal load_tile_mm_Loop_InputTileHread_proc_U0_ap_continue : STD_LOGIC;
    signal load_tile_mm_Loop_InputTileHread_proc_U0_ap_idle : STD_LOGIC;
    signal load_tile_mm_Loop_InputTileHread_proc_U0_ap_ready : STD_LOGIC;
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_AWVALID : STD_LOGIC;
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_WVALID : STD_LOGIC;
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_WLAST : STD_LOGIC;
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARVALID : STD_LOGIC;
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_RREADY : STD_LOGIC;
    signal load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_BREADY : STD_LOGIC;
    signal load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0 : STD_LOGIC;
    signal load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_we0 : STD_LOGIC;
    signal load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0 : STD_LOGIC;
    signal load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_we0 : STD_LOGIC;
    signal load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0 : STD_LOGIC;
    signal load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_we0 : STD_LOGIC;
    signal load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_write : STD_LOGIC;
    signal load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_write : STD_LOGIC;
    signal load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_write : STD_LOGIC;
    signal in_tile_0_offset_cast_loc_i_channel_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal in_tile_0_offset_cast_loc_i_channel_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal in_tile_0_offset_cast_loc_i_channel_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal in_tile_0_offset_cast_loc_i_channel_empty_n : STD_LOGIC;
    signal w0_cast19_loc_i_channel_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal w0_cast19_loc_i_channel_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal w0_cast19_loc_i_channel_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal w0_cast19_loc_i_channel_empty_n : STD_LOGIC;
    signal h0_cast10_loc_i_channel_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal h0_cast10_loc_i_channel_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal h0_cast10_loc_i_channel_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal h0_cast10_loc_i_channel_empty_n : STD_LOGIC;
    signal sext_ln43_1_loc_i_channel_dout : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln43_1_loc_i_channel_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln43_1_loc_i_channel_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln43_1_loc_i_channel_empty_n : STD_LOGIC;
    signal sext_ln43_3_loc_i_channel_dout : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln43_3_loc_i_channel_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln43_3_loc_i_channel_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln43_3_loc_i_channel_empty_n : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_load_tile_mm_Block_entry38_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_load_tile_mm_Block_entry38_proc_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_load_tile_mm_Loop_InputTileHread_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_load_tile_mm_Loop_InputTileHread_proc_U0_ap_ready : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component srcnn_load_tile_mm_Block_entry38_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        phase : IN STD_LOGIC_VECTOR (0 downto 0);
        w0 : IN STD_LOGIC_VECTOR (7 downto 0);
        h0 : IN STD_LOGIC_VECTOR (8 downto 0);
        h0_c1_din : OUT STD_LOGIC_VECTOR (8 downto 0);
        h0_c1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        h0_c1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        h0_c1_full_n : IN STD_LOGIC;
        h0_c1_write : OUT STD_LOGIC;
        w0_c2_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        w0_c2_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        w0_c2_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        w0_c2_full_n : IN STD_LOGIC;
        w0_c2_write : OUT STD_LOGIC;
        phase_c3_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        phase_c3_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        phase_c3_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        phase_c3_full_n : IN STD_LOGIC;
        phase_c3_write : OUT STD_LOGIC;
        ap_return_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (8 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component srcnn_load_tile_mm_Loop_InputTileHread_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (8 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (8 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (9 downto 0);
        in_r : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_in_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_in_AWREADY : IN STD_LOGIC;
        m_axi_gmem_in_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_in_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_in_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_in_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_in_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_in_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_in_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_in_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_in_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_in_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_in_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_in_WVALID : OUT STD_LOGIC;
        m_axi_gmem_in_WREADY : IN STD_LOGIC;
        m_axi_gmem_in_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_in_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_in_WLAST : OUT STD_LOGIC;
        m_axi_gmem_in_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_in_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_in_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_in_ARREADY : IN STD_LOGIC;
        m_axi_gmem_in_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_in_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_in_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_in_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_in_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_in_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_in_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_in_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_in_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_in_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_in_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_in_RVALID : IN STD_LOGIC;
        m_axi_gmem_in_RREADY : OUT STD_LOGIC;
        m_axi_gmem_in_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_in_RLAST : IN STD_LOGIC;
        m_axi_gmem_in_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_in_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_in_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_in_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_in_BVALID : IN STD_LOGIC;
        m_axi_gmem_in_BREADY : OUT STD_LOGIC;
        m_axi_gmem_in_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_in_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_in_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_we0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_fifo_w64_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component srcnn_fifo_w10_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component srcnn_fifo_w9_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (8 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (8 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    load_tile_mm_Block_entry38_proc_U0 : component srcnn_load_tile_mm_Block_entry38_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => load_tile_mm_Block_entry38_proc_U0_ap_start,
        ap_done => load_tile_mm_Block_entry38_proc_U0_ap_done,
        ap_continue => load_tile_mm_Block_entry38_proc_U0_ap_continue,
        ap_idle => load_tile_mm_Block_entry38_proc_U0_ap_idle,
        ap_ready => load_tile_mm_Block_entry38_proc_U0_ap_ready,
        phase => phase,
        w0 => w0,
        h0 => h0,
        h0_c1_din => load_tile_mm_Block_entry38_proc_U0_h0_c1_din,
        h0_c1_num_data_valid => ap_const_lv2_0,
        h0_c1_fifo_cap => ap_const_lv2_0,
        h0_c1_full_n => h0_c1_full_n,
        h0_c1_write => load_tile_mm_Block_entry38_proc_U0_h0_c1_write,
        w0_c2_din => load_tile_mm_Block_entry38_proc_U0_w0_c2_din,
        w0_c2_num_data_valid => ap_const_lv2_0,
        w0_c2_fifo_cap => ap_const_lv2_0,
        w0_c2_full_n => w0_c2_full_n,
        w0_c2_write => load_tile_mm_Block_entry38_proc_U0_w0_c2_write,
        phase_c3_din => load_tile_mm_Block_entry38_proc_U0_phase_c3_din,
        phase_c3_num_data_valid => ap_const_lv2_0,
        phase_c3_fifo_cap => ap_const_lv2_0,
        phase_c3_full_n => phase_c3_full_n,
        phase_c3_write => load_tile_mm_Block_entry38_proc_U0_phase_c3_write,
        ap_return_0 => load_tile_mm_Block_entry38_proc_U0_ap_return_0,
        ap_return_1 => load_tile_mm_Block_entry38_proc_U0_ap_return_1,
        ap_return_2 => load_tile_mm_Block_entry38_proc_U0_ap_return_2,
        ap_return_3 => load_tile_mm_Block_entry38_proc_U0_ap_return_3,
        ap_return_4 => load_tile_mm_Block_entry38_proc_U0_ap_return_4);

    load_tile_mm_Loop_InputTileHread_proc_U0 : component srcnn_load_tile_mm_Loop_InputTileHread_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => load_tile_mm_Loop_InputTileHread_proc_U0_ap_start,
        ap_done => load_tile_mm_Loop_InputTileHread_proc_U0_ap_done,
        ap_continue => load_tile_mm_Loop_InputTileHread_proc_U0_ap_continue,
        ap_idle => load_tile_mm_Loop_InputTileHread_proc_U0_ap_idle,
        ap_ready => load_tile_mm_Loop_InputTileHread_proc_U0_ap_ready,
        p_read => in_tile_0_offset_cast_loc_i_channel_dout,
        p_read1 => sext_ln43_1_loc_i_channel_dout,
        p_read2 => sext_ln43_3_loc_i_channel_dout,
        p_read3 => h0_cast10_loc_i_channel_dout,
        p_read4 => w0_cast19_loc_i_channel_dout,
        in_r => input_ftmap,
        m_axi_gmem_in_AWVALID => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_AWVALID,
        m_axi_gmem_in_AWREADY => ap_const_logic_0,
        m_axi_gmem_in_AWADDR => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_AWADDR,
        m_axi_gmem_in_AWID => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_AWID,
        m_axi_gmem_in_AWLEN => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_AWLEN,
        m_axi_gmem_in_AWSIZE => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_AWSIZE,
        m_axi_gmem_in_AWBURST => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_AWBURST,
        m_axi_gmem_in_AWLOCK => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_AWLOCK,
        m_axi_gmem_in_AWCACHE => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_AWCACHE,
        m_axi_gmem_in_AWPROT => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_AWPROT,
        m_axi_gmem_in_AWQOS => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_AWQOS,
        m_axi_gmem_in_AWREGION => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_AWREGION,
        m_axi_gmem_in_AWUSER => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_AWUSER,
        m_axi_gmem_in_WVALID => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_WVALID,
        m_axi_gmem_in_WREADY => ap_const_logic_0,
        m_axi_gmem_in_WDATA => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_WDATA,
        m_axi_gmem_in_WSTRB => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_WSTRB,
        m_axi_gmem_in_WLAST => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_WLAST,
        m_axi_gmem_in_WID => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_WID,
        m_axi_gmem_in_WUSER => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_WUSER,
        m_axi_gmem_in_ARVALID => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARVALID,
        m_axi_gmem_in_ARREADY => m_axi_gmem_in_ARREADY,
        m_axi_gmem_in_ARADDR => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARADDR,
        m_axi_gmem_in_ARID => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARID,
        m_axi_gmem_in_ARLEN => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARLEN,
        m_axi_gmem_in_ARSIZE => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARSIZE,
        m_axi_gmem_in_ARBURST => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARBURST,
        m_axi_gmem_in_ARLOCK => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARLOCK,
        m_axi_gmem_in_ARCACHE => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARCACHE,
        m_axi_gmem_in_ARPROT => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARPROT,
        m_axi_gmem_in_ARQOS => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARQOS,
        m_axi_gmem_in_ARREGION => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARREGION,
        m_axi_gmem_in_ARUSER => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARUSER,
        m_axi_gmem_in_RVALID => m_axi_gmem_in_RVALID,
        m_axi_gmem_in_RREADY => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_RREADY,
        m_axi_gmem_in_RDATA => m_axi_gmem_in_RDATA,
        m_axi_gmem_in_RLAST => m_axi_gmem_in_RLAST,
        m_axi_gmem_in_RID => m_axi_gmem_in_RID,
        m_axi_gmem_in_RFIFONUM => m_axi_gmem_in_RFIFONUM,
        m_axi_gmem_in_RUSER => m_axi_gmem_in_RUSER,
        m_axi_gmem_in_RRESP => m_axi_gmem_in_RRESP,
        m_axi_gmem_in_BVALID => ap_const_logic_0,
        m_axi_gmem_in_BREADY => load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_BREADY,
        m_axi_gmem_in_BRESP => ap_const_lv2_0,
        m_axi_gmem_in_BID => ap_const_lv1_0,
        m_axi_gmem_in_BUSER => ap_const_lv1_0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0 => load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0 => load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_we0 => load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_d0 => load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0 => load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0 => load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_we0 => load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_d0 => load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0 => load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0 => load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_we0 => load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_d0 => load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_d0);

    in_tile_0_offset_cast_loc_i_channel_U : component srcnn_fifo_w64_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => load_tile_mm_Block_entry38_proc_U0_ap_return_0,
        if_full_n => in_tile_0_offset_cast_loc_i_channel_full_n,
        if_write => ap_channel_done_in_tile_0_offset_cast_loc_i_channel,
        if_dout => in_tile_0_offset_cast_loc_i_channel_dout,
        if_num_data_valid => in_tile_0_offset_cast_loc_i_channel_num_data_valid,
        if_fifo_cap => in_tile_0_offset_cast_loc_i_channel_fifo_cap,
        if_empty_n => in_tile_0_offset_cast_loc_i_channel_empty_n,
        if_read => load_tile_mm_Loop_InputTileHread_proc_U0_ap_ready);

    w0_cast19_loc_i_channel_U : component srcnn_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => load_tile_mm_Block_entry38_proc_U0_ap_return_1,
        if_full_n => w0_cast19_loc_i_channel_full_n,
        if_write => ap_channel_done_w0_cast19_loc_i_channel,
        if_dout => w0_cast19_loc_i_channel_dout,
        if_num_data_valid => w0_cast19_loc_i_channel_num_data_valid,
        if_fifo_cap => w0_cast19_loc_i_channel_fifo_cap,
        if_empty_n => w0_cast19_loc_i_channel_empty_n,
        if_read => load_tile_mm_Loop_InputTileHread_proc_U0_ap_ready);

    h0_cast10_loc_i_channel_U : component srcnn_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => load_tile_mm_Block_entry38_proc_U0_ap_return_2,
        if_full_n => h0_cast10_loc_i_channel_full_n,
        if_write => ap_channel_done_h0_cast10_loc_i_channel,
        if_dout => h0_cast10_loc_i_channel_dout,
        if_num_data_valid => h0_cast10_loc_i_channel_num_data_valid,
        if_fifo_cap => h0_cast10_loc_i_channel_fifo_cap,
        if_empty_n => h0_cast10_loc_i_channel_empty_n,
        if_read => load_tile_mm_Loop_InputTileHread_proc_U0_ap_ready);

    sext_ln43_1_loc_i_channel_U : component srcnn_fifo_w9_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => load_tile_mm_Block_entry38_proc_U0_ap_return_3,
        if_full_n => sext_ln43_1_loc_i_channel_full_n,
        if_write => ap_channel_done_sext_ln43_1_loc_i_channel,
        if_dout => sext_ln43_1_loc_i_channel_dout,
        if_num_data_valid => sext_ln43_1_loc_i_channel_num_data_valid,
        if_fifo_cap => sext_ln43_1_loc_i_channel_fifo_cap,
        if_empty_n => sext_ln43_1_loc_i_channel_empty_n,
        if_read => load_tile_mm_Loop_InputTileHread_proc_U0_ap_ready);

    sext_ln43_3_loc_i_channel_U : component srcnn_fifo_w9_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => load_tile_mm_Block_entry38_proc_U0_ap_return_4,
        if_full_n => sext_ln43_3_loc_i_channel_full_n,
        if_write => ap_channel_done_sext_ln43_3_loc_i_channel,
        if_dout => sext_ln43_3_loc_i_channel_dout,
        if_num_data_valid => sext_ln43_3_loc_i_channel_num_data_valid,
        if_fifo_cap => sext_ln43_3_loc_i_channel_fifo_cap,
        if_empty_n => sext_ln43_3_loc_i_channel_empty_n,
        if_read => load_tile_mm_Loop_InputTileHread_proc_U0_ap_ready);





    ap_sync_reg_channel_write_h0_cast10_loc_i_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_h0_cast10_loc_i_channel <= ap_const_logic_0;
            else
                if (((load_tile_mm_Block_entry38_proc_U0_ap_done and load_tile_mm_Block_entry38_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_h0_cast10_loc_i_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_h0_cast10_loc_i_channel <= ap_sync_channel_write_h0_cast10_loc_i_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_in_tile_0_offset_cast_loc_i_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_in_tile_0_offset_cast_loc_i_channel <= ap_const_logic_0;
            else
                if (((load_tile_mm_Block_entry38_proc_U0_ap_done and load_tile_mm_Block_entry38_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_in_tile_0_offset_cast_loc_i_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_in_tile_0_offset_cast_loc_i_channel <= ap_sync_channel_write_in_tile_0_offset_cast_loc_i_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_sext_ln43_1_loc_i_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_sext_ln43_1_loc_i_channel <= ap_const_logic_0;
            else
                if (((load_tile_mm_Block_entry38_proc_U0_ap_done and load_tile_mm_Block_entry38_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_sext_ln43_1_loc_i_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_sext_ln43_1_loc_i_channel <= ap_sync_channel_write_sext_ln43_1_loc_i_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_sext_ln43_3_loc_i_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_sext_ln43_3_loc_i_channel <= ap_const_logic_0;
            else
                if (((load_tile_mm_Block_entry38_proc_U0_ap_done and load_tile_mm_Block_entry38_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_sext_ln43_3_loc_i_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_sext_ln43_3_loc_i_channel <= ap_sync_channel_write_sext_ln43_3_loc_i_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_w0_cast19_loc_i_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_w0_cast19_loc_i_channel <= ap_const_logic_0;
            else
                if (((load_tile_mm_Block_entry38_proc_U0_ap_done and load_tile_mm_Block_entry38_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_w0_cast19_loc_i_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_w0_cast19_loc_i_channel <= ap_sync_channel_write_w0_cast19_loc_i_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_load_tile_mm_Block_entry38_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_load_tile_mm_Block_entry38_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_load_tile_mm_Block_entry38_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_load_tile_mm_Block_entry38_proc_U0_ap_ready <= ap_sync_load_tile_mm_Block_entry38_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_load_tile_mm_Loop_InputTileHread_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_load_tile_mm_Loop_InputTileHread_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_load_tile_mm_Loop_InputTileHread_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_load_tile_mm_Loop_InputTileHread_proc_U0_ap_ready <= ap_sync_load_tile_mm_Loop_InputTileHread_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;

    ap_channel_done_h0_cast10_loc_i_channel <= (load_tile_mm_Block_entry38_proc_U0_ap_done and (ap_sync_reg_channel_write_h0_cast10_loc_i_channel xor ap_const_logic_1));
    ap_channel_done_in_tile_0_offset_cast_loc_i_channel <= (load_tile_mm_Block_entry38_proc_U0_ap_done and (ap_sync_reg_channel_write_in_tile_0_offset_cast_loc_i_channel xor ap_const_logic_1));
    ap_channel_done_sext_ln43_1_loc_i_channel <= (load_tile_mm_Block_entry38_proc_U0_ap_done and (ap_sync_reg_channel_write_sext_ln43_1_loc_i_channel xor ap_const_logic_1));
    ap_channel_done_sext_ln43_3_loc_i_channel <= (load_tile_mm_Block_entry38_proc_U0_ap_done and (ap_sync_reg_channel_write_sext_ln43_3_loc_i_channel xor ap_const_logic_1));
    ap_channel_done_w0_cast19_loc_i_channel <= (load_tile_mm_Block_entry38_proc_U0_ap_done and (ap_sync_reg_channel_write_w0_cast19_loc_i_channel xor ap_const_logic_1));
    ap_done <= load_tile_mm_Loop_InputTileHread_proc_U0_ap_done;
    ap_idle <= (load_tile_mm_Loop_InputTileHread_proc_U0_ap_idle and load_tile_mm_Block_entry38_proc_U0_ap_idle and (sext_ln43_3_loc_i_channel_empty_n xor ap_const_logic_1) and (sext_ln43_1_loc_i_channel_empty_n xor ap_const_logic_1) and (h0_cast10_loc_i_channel_empty_n xor ap_const_logic_1) and (w0_cast19_loc_i_channel_empty_n xor ap_const_logic_1) and (in_tile_0_offset_cast_loc_i_channel_empty_n xor ap_const_logic_1));
    ap_ready <= ap_sync_ready;
    ap_sync_channel_write_h0_cast10_loc_i_channel <= ((h0_cast10_loc_i_channel_full_n and ap_channel_done_h0_cast10_loc_i_channel) or ap_sync_reg_channel_write_h0_cast10_loc_i_channel);
    ap_sync_channel_write_in_tile_0_offset_cast_loc_i_channel <= ((in_tile_0_offset_cast_loc_i_channel_full_n and ap_channel_done_in_tile_0_offset_cast_loc_i_channel) or ap_sync_reg_channel_write_in_tile_0_offset_cast_loc_i_channel);
    ap_sync_channel_write_sext_ln43_1_loc_i_channel <= ((sext_ln43_1_loc_i_channel_full_n and ap_channel_done_sext_ln43_1_loc_i_channel) or ap_sync_reg_channel_write_sext_ln43_1_loc_i_channel);
    ap_sync_channel_write_sext_ln43_3_loc_i_channel <= ((sext_ln43_3_loc_i_channel_full_n and ap_channel_done_sext_ln43_3_loc_i_channel) or ap_sync_reg_channel_write_sext_ln43_3_loc_i_channel);
    ap_sync_channel_write_w0_cast19_loc_i_channel <= ((w0_cast19_loc_i_channel_full_n and ap_channel_done_w0_cast19_loc_i_channel) or ap_sync_reg_channel_write_w0_cast19_loc_i_channel);
    ap_sync_load_tile_mm_Block_entry38_proc_U0_ap_ready <= (load_tile_mm_Block_entry38_proc_U0_ap_ready or ap_sync_reg_load_tile_mm_Block_entry38_proc_U0_ap_ready);
    ap_sync_load_tile_mm_Loop_InputTileHread_proc_U0_ap_ready <= (load_tile_mm_Loop_InputTileHread_proc_U0_ap_ready or ap_sync_reg_load_tile_mm_Loop_InputTileHread_proc_U0_ap_ready);
    ap_sync_ready <= (ap_sync_load_tile_mm_Loop_InputTileHread_proc_U0_ap_ready and ap_sync_load_tile_mm_Block_entry38_proc_U0_ap_ready);
    h0_c1_din <= load_tile_mm_Block_entry38_proc_U0_h0_c1_din;
    h0_c1_write <= load_tile_mm_Block_entry38_proc_U0_h0_c1_write;
    load_tile_mm_Block_entry38_proc_U0_ap_continue <= (ap_sync_channel_write_w0_cast19_loc_i_channel and ap_sync_channel_write_sext_ln43_3_loc_i_channel and ap_sync_channel_write_sext_ln43_1_loc_i_channel and ap_sync_channel_write_in_tile_0_offset_cast_loc_i_channel and ap_sync_channel_write_h0_cast10_loc_i_channel);
    load_tile_mm_Block_entry38_proc_U0_ap_start <= ((ap_sync_reg_load_tile_mm_Block_entry38_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    load_tile_mm_Loop_InputTileHread_proc_U0_ap_continue <= ap_continue;
    load_tile_mm_Loop_InputTileHread_proc_U0_ap_start <= (w0_cast19_loc_i_channel_empty_n and sext_ln43_3_loc_i_channel_empty_n and sext_ln43_1_loc_i_channel_empty_n and in_tile_0_offset_cast_loc_i_channel_empty_n and h0_cast10_loc_i_channel_empty_n and (ap_sync_reg_load_tile_mm_Loop_InputTileHread_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_write <= ap_const_logic_0;
    load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_write <= ap_const_logic_0;
    load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_write <= ap_const_logic_0;
    m_axi_gmem_in_ARADDR <= load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARADDR;
    m_axi_gmem_in_ARBURST <= load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARBURST;
    m_axi_gmem_in_ARCACHE <= load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARCACHE;
    m_axi_gmem_in_ARID <= load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARID;
    m_axi_gmem_in_ARLEN <= load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARLEN;
    m_axi_gmem_in_ARLOCK <= load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARLOCK;
    m_axi_gmem_in_ARPROT <= load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARPROT;
    m_axi_gmem_in_ARQOS <= load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARQOS;
    m_axi_gmem_in_ARREGION <= load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARREGION;
    m_axi_gmem_in_ARSIZE <= load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARSIZE;
    m_axi_gmem_in_ARUSER <= load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARUSER;
    m_axi_gmem_in_ARVALID <= load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_ARVALID;
    m_axi_gmem_in_AWADDR <= ap_const_lv64_0;
    m_axi_gmem_in_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_in_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_in_AWID <= ap_const_lv1_0;
    m_axi_gmem_in_AWLEN <= ap_const_lv32_0;
    m_axi_gmem_in_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_in_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_in_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_in_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_in_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_in_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_in_AWVALID <= ap_const_logic_0;
    m_axi_gmem_in_BREADY <= ap_const_logic_0;
    m_axi_gmem_in_RREADY <= load_tile_mm_Loop_InputTileHread_proc_U0_m_axi_gmem_in_RREADY;
    m_axi_gmem_in_WDATA <= ap_const_lv32_0;
    m_axi_gmem_in_WID <= ap_const_lv1_0;
    m_axi_gmem_in_WLAST <= ap_const_logic_0;
    m_axi_gmem_in_WSTRB <= ap_const_lv4_0;
    m_axi_gmem_in_WUSER <= ap_const_lv1_0;
    m_axi_gmem_in_WVALID <= ap_const_logic_0;
    phase_c3_din <= load_tile_mm_Block_entry38_proc_U0_phase_c3_din;
    phase_c3_write <= load_tile_mm_Block_entry38_proc_U0_phase_c3_write;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0 <= load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0 <= load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_d0 <= load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_d0;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_we0 <= load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_we0;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_write <= load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_write;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0 <= load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0 <= load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_d0 <= load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_d0;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_we0 <= load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_we0;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_write <= load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_write;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0 <= load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0 <= load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_d0 <= load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_d0;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_we0 <= load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_we0;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_write <= load_tile_mm_Loop_InputTileHread_proc_U0_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_write;
    w0_c2_din <= load_tile_mm_Block_entry38_proc_U0_w0_c2_din;
    w0_c2_write <= load_tile_mm_Block_entry38_proc_U0_w0_c2_write;
end behav;
